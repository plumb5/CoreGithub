var formId = 0, campaignId = 1, formType = 1, trcount = 0;
var IsCalledCustomfields = false;
var CustomFields = [];
var countryList = new Array("AFGHANISTAN", "ALAND ISLANDS", "ALBANIA", "ALGERIA", "AMERICAN SAMOA", "ANDORRA", "ANGOLA", "ANGUILLA", "ANTARCTICA", "ANTIGUA AND BARBUDA", "ARGENTINA", "ARMENIA", "ARUBA", "AUSTRALIA", "AUSTRIA", "AZERBAIJAN", "BAHAMAS", "BAHRAIN", "BANGLADESH", "BARBADOS", "BELARUS", "BELGIUM", "BELIZE", "BENIN", "BERMUDA", "BHUTAN", "BOLIVIA", "BOSNIA AND HERZEGOVINA", "BOTSWANA", "BRAZIL", "BRITISH INDIAN OCEAN TERRITORY", "BRUNEI DARUSSALAM", "BULGARIA", "BURKINA FASO", "BURUNDI", "CAMBODIA", "CAMEROON", "CANADA", "CAPE VERDE", "CAYMAN ISLANDS", "CENTRAL AFRICAN REPUBLIC", "CHAD", "CHILE", "CHINA", "CHRISTMAS ISLAND", "COLOMBIA", "COMOROS", "CONGO", "CONGO, THE DEMOCRATIC REPUBLIC OF THE", "COOK ISLANDS", "COSTA RICA", "COTE D'IVOIRE", "CROATIA", "CUBA", "CURAA‡AO", "CURAÃ‡AO", "CYPRUS", "CZECH REPUBLIC", "DEMOCRATIC PEOPLE'S REPUBLIC OF KOREA", "DENMARK", "DJIBOUTI", "DOMINICA", "DOMINICAN REPUBLIC", "ECUADOR", "EGYPT", "EL SALVADOR", "EQUATORIAL GUINEA", "ERITREA", "ESTONIA", "ETHIOPIA", "FALKLAND ISLANDS (MALVINAS)", "FAROE ISLANDS", "FIJI", "FINLAND", "FRANCE", "FRENCH GUIANA", "FRENCH POLYNESIA", "FRENCH SOUTHERN TERRITORIES", "GABON", "GAMBIA", "GEORGIA", "GERMANY", "GHANA", "GIBRALTAR", "GREECE", "GREENLAND", "GRENADA", "GUADELOUPE", "GUAM", "GUATEMALA", "GUERNSEY", "GUINEA", "GUINEA-BISSAU", "GUYANA", "HAITI", "HEARD ISLAND AND MCDONALD ISLANDS", "HOLY SEE (VATICAN CITY STATE)", "HONDURAS", "HONG KONG", "HUNGARY", "ICELAND", "INDIA", "INDONESIA", "IRAN, ISLAMIC REPUBLIC OF", "IRAQ", "IRELAND", "ISLE OF MAN", "ISRAEL", "ITALY", "JAMAICA", "JAPAN", "JORDAN", "KAZAKHSTAN", "KENYA", "KIRIBATI", "KOREA, REPUBLIC OF", "KUWAIT", "KYRGYZSTAN", "LAO PEOPLE'S DEMOCRATIC REPUBLIC", "LATVIA", "LEBANON", "LESOTHO", "LIBERIA", "LIBYAN ARAB JAMAHIRIYA", "LIECHTENSTEIN", "LITHUANIA", "LUXEMBOURG", "MACAO", "MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF", "MADAGASCAR", "MALAWI", "MALAYSIA", "MALDIVES", "MALI", "MALTA", "MARSHALL ISLANDS", "MARTINIQUE", "MAURITANIA", "MAURITIUS", "MAYOTTE", "MEXICO", "MICRONESIA, FEDERATED STATES OF", "MOLDOVA, REPUBLIC OF", "MONACO", "MONGOLIA", "MONTENEGRO", "MONTSERRAT", "MOROCCO", "MOZAMBIQUE", "MYANMAR", "NAMIBIA", "NAURU", "NEPAL", "NETHERLANDS", "NETHERLANDS ANTILLES", "NEW CALEDONIA", "NEW ZEALAND", "NICARAGUA", "NIGER", "NIGERIA", "NIUE", "NORFOLK ISLAND", "NORTHERN MARIANA ISLANDS", "NORWAY", "OMAN", "PAKISTAN", "PALAU", "PALESTINIAN TERRITORY, OCCUPIED", "PANAMA", "PAPUA NEW GUINEA", "PARAGUAY", "PERU", "PHILIPPINES", "POLAND", "PORTUGAL", "PUERTO RICO", "QATAR", "REUNION", "ROMANIA", "RUSSIAN FEDERATION", "RWANDA", "SAINT HELENA", "SAINT KITTS AND NEVIS", "SAINT LUCIA", "SAINT MARTIN", "SAINT PIERRE AND MIQUELON", "SAINT VINCENT AND THE GRENADINES", "SAMOA", "SAN MARINO", "SAO TOME AND PRINCIPE", "SAUDI ARABIA", "SENEGAL", "SERBIA", "SEYCHELLES", "SIERRA LEONE", "SINGAPORE", "SLOVAKIA", "SLOVENIA", "SOLOMON ISLANDS", "SOMALIA", "SOUTH AFRICA", "SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS", "SPAIN", "SRI LANKA", "SUDAN", "SURINAME", "SWAZILAND", "SWEDEN", "SWITZERLAND", "SYRIAN ARAB REPUBLIC", "TAIWAN, PROVINCE OF CHINA", "TAJIKISTAN", "TANZANIA, UNITED REPUBLIC OF", "THAILAND", "TOGO", "TOKELAU", "TONGA", "TRINIDAD AND TOBAGO", "TUNISIA", "TURKEY", "TURKMENISTAN", "TURKS AND CAICOS ISLANDS", "TUVALU", "UGANDA", "UKRAINE", "UNITED ARAB EMIRATES", "UNITED KINGDOM", "UNITED STATES", "UNITED STATES MINOR OUTLYING ISLANDS", "URUGUAY", "UZBEKISTAN", "VANUATU", "VENEZUELA", "VIET NAM", "VIRGIN ISLANDS, BRITISH", "VIRGIN ISLANDS, U.S.", "WALLIS AND FUTUNA", "YEMEN", "YUGOSLAVIA", "ZAMBIA", "ZIMBABWE", "Great Britain (UK)");
var regExpEmail = /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;

var IsMailGetValues = true;
var IsSMSGetValues = true;
var IsWhatsAppGetValues = true;
var IsMailOutSetting = true;
var IsSmsOutSetting = true;
var IsWhatsAppOutSetting = true;
var IsAssignmentGetValues = true;
var IsRedirectUrlValues = true;
var IsAutoAssignToGroup = true;
var Isoverridesource = true;

var bannerDetails = { Id: 0, FormId: 0, Name: "", BannerContent: "", RedirectUrl: "", BannerPriority: 0, Impression: 0, BannerStatus: true };
var Webhookloopdetals = Array();
var cssObjectsFormBody = { width: null, height: null, bodyBgCol: "#ffffff", bdyBrdStyleAll: "", bdyBrdSizeAll: null, bdyBrdColAll: "", bdyBrdStyleTop: "", bdyBrdWidthTop: null, bdyBrdColTop: "", bdyBrdStyleRight: "", bdyBrdWidthRight: null, bdyBrdColRight: "", bdyBrdStyleBottm: "", bdyBrdWidthBottm: null, bdyBrdColBottm: "", bdyBrdStyleLft: "", bdyBrdWidthLft: null, bdyBrdColLft: "", bdyPaddAll: null, bdyPaddTop: null, bdyPaddRit: null, bdyPaddBottm: null, bdyPaddLft: null, bdyBrdradiAll: null, bdyBrdraditopleft: null, bdyBrdraditopright: null, bdyBrdradibttmleft: null, bdyBrdradibttmright: null, lblTextAlignLeft: "", lblTextAlignCenter: "", lblTextAlignRight: "", lblTextPaddAll: null, lblTextPaddTop: null, lblTextPaddRight: null, lblTextPaddBottom: null, lblTextPaddLeft: null, lblTextFontFamily: "", lblTextFontSize: null, lblTextFontColor: null, lblTextFontWeight: null, lblTextFontStyle: "", lblTextFontCaps: "", textBoxFontFamily: "", textBoxFontSize: null, textBoxFontColor: null, textBoxFontWeight: "", textBoxFontStyle: "", textBoxFontIndent: null, textBoxHeight: null, textBoxBgColor: null, textBoxAllBrd: "", textBoxAllBrdsize: null, textBoxAllBrdcol: null, textBoxBrdTop: "", textBoxBrdTopSize: null, textBoxBrdTopCol: null, textBoxBrdRight: "", textBoxBrdRightSize: null, textBoxBrdRightCol: null, textBoxBrdBttm: "", textBoxBrdBttmSize: null, textBoxBrdBttmCol: null, textBoxBrdleft: "", textBoxBrdLeftSize: null, textBoxBrdLeftCol: null, textBoxBrdRadiusAll: null, textBoxBrdRadiusTopLeft: null, textBoxBrdRadiusTopRight: null, textBoxBrdRadiusBttmLeft: null, textBoxBrdRadiusBttmRight: null, btnAlignLeft: "", btnAlignCenter: "", btnAlignRight: "", btnWidth: null, subBtnHeight: null, subBtnBgCol: null, subBtnBgHvCol: null, subBtnTxtHvrCol: null, subBtnFontFamily: "", subBtnFontSize: null, subBtnFontcol: null, subBtnFontStroke: null, subBtnFontStyle: "", subBtnTxtTransform: "", subBtnBorderRadius: null, subBtnBorderRadiusTopLeft: null, subBtnBorderRadiusTopRight: null, subBtnBorderRadiusbottomLeft: null, subBtnBorderRadiusbottomRight: null, subBtnBorderAll: "", subBtnBorderSizeAll: null, subBtnBorderColAll: null, subBtnBrdIndivTop: "", subBtnBrdIndivTopSize: null, subBtnBrdIndivTopCol: null, subBtnBrdIndivRit: "", subBtnBrdIndivRitSize: null, subBtnBrdIndivRitCol: null, subBtnBrdIndivBottom: "", subBtnBrdIndivBttmSiz: null, subBtnBrdIndivBttmCol: null, subBtnBrdIndivLeft: "", subBtnBrdIndivLftSiz: null, subBtnBrdIndivLftCol: null, subBtnMarginAll: null, subBtnMarginTop: null, subBtnMarginRight: null, subBtnMarginBttm: null, subBtnMarginLeft: null, frmClsWidth: null, frmClsFontSize: null, frmClsFontCol: "", frmClsBgCol: "", frmClsBrdStyle: "", frmClsBrdSiz: null, frmClsBrdCol: "", frmClsSpacTop: null, frmClsSpacRight: null, frmClsSpacBottom: null, frmClsSpacLeft: null, frmTitAlignType: "", frmTitFontStyle: "", frmTitTextCapital: "", frmTitFontFamily: "", frmtTitFontSiz: "", frmTitFontCol: "", frmTitFontStroke: "", frmtitFontMargin: null, frmtitFontMarginTop: null, frmtitFontMarginRight: null, frmtitFontMarginBttm: null, frmtitFontMarginLeft: null, frmTitFontPaddAll: null, frmTitFontPaddTop: null, frmTitFontPaddRight: null, frmTitFontPaddBttm: null, frmTitFontPaddLeft: null, frmTitBgcolor: "", frmTitRadiusAll: null, frmTitRadiusTopLeft: null, frmTitRadiusTopRight: null, frmTitRadiusBttmLeft: null, frmTitRadiusBttmRight: null, frmTitBrdStylAll: "", frmTitBrdWidAll: null, frmTitBrdColAll: "", frmTitBrdStylTop: "", frmTitBrdWidTop: null, frmTitBrdColTop: "", frmTitBrdStylRight: "", frmTitBrdWidRight: null, frmTitBrdColRight: "", frmTitBrdStyleBttm: "", frmTitBrdWidBttm: null, frmTitBrdColBttm: "", frmTitBrdStylLeft: "", frmTitBrdWidLeft: null, frmTitBrdColLeft: "", frmDesTxtAlign: "", frmDesFont: "", frmDesFontSize: null, frmDesFontCol: "", frmDesFontStroke: "", frmDesFontStyle: "", frmDesFontCaps: "", frmDesFontMarg: null, frmDesFontMargTop: null, frmDesFontMargRighted: null, frmDesFontMargBttm: null, frmDesFontMargLeft: null, frmDesTxtBgCol: "", frmDesFontPaddAll: null, frmDesFontPaddTop: null, frmDesFontPaddRight: null, frmDesFontPaddBttm: null, frmDesFontPaddLeft: null, frmDesRadiusAll: null, frmDesRadiusTopLeft: null, frmDesRadiusTopRight: null, frmDesRadiusBttmLeft: null, frmDesRadiusBttmRight: null, frmDesBrdStylAll: "", frmDesBrdWidAll: null, frmDesBrdColAll: "", frmDesBrdStylRight: "", frmDesBrdWidRight: null, frmDesBrdColRight: "", frmDesBrdStylTop: "", frmDesBrdWidTop: null, frmDesBrdColTop: "", frmDesBrdStyleBttm: "", frmDesBrdWidBttm: null, frmDesBrdColBttm: "", frmDesBrdStylLeft: "", frmDesBrdWidLeft: null, frmDesBrdColLeft: "" };
var checkwebhookupdatestatus = 0;
//-----Form Design Part
var formDetails = {
    Id: 0, UserGroupId: 0, UserInfoUserId: 0, FormCampaignId: 0, FormType: 0, FormStatus: false, FormPriority: 0, Heading: "", SubHeading: "", PageContentForEmbed: "", IsMainBackgroundDesignCustom: false,
    MainBackgroundDesign: "", TitleCss: "", IsTitleCssCustom: false, DescriptionCss: "", IsDescriptionCustomCss: false, LabelCss: "", IsLabelCustomCss: false, TextboxDropCss: "",
    IsTextboxDropCustomCss: false, ButtonCss: "", IsButtonCustomCss: false, ErrorCss: "", IsErrorCustomCss: false, CloseCss: "", IsCloseCustomCss: false, ButtonName: "",
    OnPageOrInPage: false, AppearenceEffect: 0, PositionAlign: 0, AppearenceSpeed: 0, TopOrBottomPadding: 0, RightOrLeftPadding: 0, TimeDelay: 0, AppearSound: "", ThankYouMessage: "",
    HideEffect: 0, BackgroundPxOPer: false, PlaceHolderClass: "", BackgroundFadeColor: "", AppearOnLoadOnExitOnScroll: 0, ShowOnScrollDownHeight: 0, AppearEffectOfFields: 0,
    GeneralCss: "", GeneralParentCss: "", OuterMainStyle: "", RowListStyle: "", RowStyle: "", OuterLabelStyle: "", OuterInputStyle: "",
    OuterButtonStyle: "", RadioButtonLabelCss: "", RadioButtonFieldsCss: "", CheckBoxLabelCss: "", CheckBoxFieldsCss: "", IsNewDivOrOldTable: 0, IsMinimiseButton: 0, IsMinimiseCustomCss: 0, MinimiseCss: "",
    CloseDesignType: "", CloseAlignmentSetting: "", ButtonPxOrPer: 0, EmbeddedFormOrPopUpFormOrTaggedForm: "TaggedForm", IsBackgroundUploadImageOrOnlineUrl: 0, BannerImageDesignCss: "",
    IsBannerImageDesignCustom: false, IsBannerImageHidden: 0, RadioCheckBoxFieldsCss: "", IsRadioCheckBoxFieldsCssCustom: false, ImageAppearanceAlignment: ""
};

//-----Form Design Rules Part Start

var groupList = new Array();
var usersListDetails = new Array();
var IsOverRideSourceListDetails = new Array();
var templateDetails = { TemplateId: 0, TempName: "" };
var templateList = Array();
var SmsTemplateList = new Array();
var WhatsAppTemplateList = new Array();
var FromEmailIdList = Array();

var ruleConditions = {
    FormId: 0, IsLead: -1, IsBelong: 0, BelongsToGroup: "", BehavioralScoreCondition: 0, BehavioralScore1: 0, BehavioralScore2: 0, SessionIs: 0, SessionConditionIsTrueOrIsFalse: false,
    PageDepthIs: 0, NPageVisited: 0, FrequencyIs: 0, PageUrl: "", IsPageUrlContainsCondition: false, IsReferrer: 0, ReferrerUrl: "", CheckSourceDomainOnly: false, IsMailIsRespondent: false,
    SearchString: "", Country: "", City: "", IsClickedSpecificButtons: "", ClickedPriceRangeProduct: "", IsVisitorRespondedChat: false, MailCampignResponsiveStage: 0, IsRespondedForm: 0,
    IsNotRespondedForm: 0, CloseCount: 0, AddedProductsToCart: "", ViewedButNotAddedProductsToCart: "", DroppedProductsFromCart: "", PurchasedProducts: "", NotPurchasedProducts: "",
    TotalPurchaseQtyConditon: 0, CustomerTotalPurchase1: 0, CustomerTotalPurchase2: 0, TotalPurchaseAmtCondition: 0, CustomerCurrentValue1: 0, CustomerCurrentValue2: 0, DependencyFormId: 0, DependencyFormField: 0, DependencyFormCondition: 0, DependencyFormAnswer1: "", DependencyFormAnswer2: "",
    ImpressionEventForFormId: 0, ImpressionEventCountCondition: 0, CloseEventForFormId: 0, CloseEventCountCondition: 0, ResponsesEventForFormId: 0, ResponsesEventCountCondition: 0,
    OnlineSentimentIs: 0, SocialStatusIs: 0, InfluentialScoreCondition: 0, InfluentialScore1: 0, InfluentialScore2: 0, OfflineSentimentIs: 0, ProductRatingIs: 0, GenderIs: "",
    MaritalStatusIs: 0, ProfessionIs: "", NotConnectedSocially: 0, LoyaltyPointsCondition: 0, LoyaltyPointsRange1: 0, LoyaltyPointsRange2: 0, RFMSScoreRangeCondition: 0,
    RFMSScoreRange1: 0, RFMSScoreRange2: 0, ShowFormOnlyNthTime: 0, CloseCountSessionWiseOrOverAll: false, OverAllTimeSpentInSite: 0, AlreadyVisitedPages: "", PageDepthConditionIsTrueOrIsFalse: false,
    PageViewConditionIsTrueOrIsFalse: false, FrequencyConditionIsTrueOrIsFalse: false, MailRespondentConditionIsTrueOrIsFalse: false, CountryConditionIsTrueOrIsFalse: false,
    CityConditionIsTrueOrIsFalse: false, NurtureStatusIs: 0, IsMobileDevice: 0, AlreadyVisitedPagesOverAllOrSessionWise: false, ClickedRecentButtonOrOverAll: false,
    AddedProductsCategoriesToCart: "", NotAddedProductsCategoriesToCart: "", AddedProductsSubCategoriesToCart: "", NotAddedProductsSubCategoriesToCart: "", MailRespondentTemplates: 0,
    IsSmsIsRespondent: false, SmsRespondentConditionIsTrueOrIsFalse: false, SmsRespondentTemplates: 0, IsMailRespondentClickCondition: false, IsBirthDay: false, IsDOBTodayOrMonth: 0,
    NotAlreadyVisitedPages: "", NotAlreadyVisitedPagesOverAllOrSessionWise: false, DOBFromDate: "", DOBToDate: "", DOBDaysDiffernce: 0, IsDOBIgnored: null, IsDOBIgnoreCondition: 0
};

//-----Form Design Rules Part End

//-----Form Design Response Part start

var RedirectUrlJsonString = { 'DependencyFieldId': 0, 'UnconditionalStaticUrl': "", 'Subfields': "" };
var AutoAssignToGroupJsonString = { 'DependencyFieldId': 0, 'UnconditionalGroupId': "", 'Subfields': "" };

var responseMailSettingFieldIndex = -1;
var responseSMSSettingFieldIndex = -1;
var responseWhatsAppSettingFieldIndex = -1;
var responseMailOutSettingIndex = -1;
var responseSmsOutSettingIndex = -1;
var responseWhatsAppOutSettingIndex = -1;
var responseSalesAssigmentSettingIndex = -1;
var responseRedirectUrlSettingIndex = -1;
var responseAutoAssignToGroupIndex = -1;
var responseReportToPhoneIndex = -1;
var AutoAssignToGroupIdIndexValues = new Array();
var AutoAssignToGroupIndexValues = new Array();

var OverSourceIdIndexValues = new Array();
var IsOverSourceIndexValues = new Array();
var mailSettings = { Id: 0, Name: "", MailTemplateId: 0, GroupId: 0, Subject: "", FromName: "", FromEmailId: "", Subscribe: false, Forward: false, IsSchedule: false, ReplyTo: "" };
var smsSettings = { Id: 0, Name: "", SmsTemplateId: 0, UserGroupId: 0, GroupId: 0 };
var WhatsAppSettings = { Id: 0, Name: "", WhatsAppTemplateId: 0, UserGroupId: 0, GroupId: 0 };
var mailSettingList = new Array();
var smsSettingList = new Array();
var WhatsAppSettingList = new Array();
var webhookFieldList = new Array();

var responseSettings = {
    ReportToFormsMailFieldId: 0, ReportToDetailsByMail: "", ReportToFormsSMSFieldId: 0, ReportToDetailsBySMS: "", MailOutDependencyFieldId: 0, MailIdList: "",
    RedirectUrl: "", AccesLeadToUserId: "", ReportToDetailsByPhoneCall: "", GroupId: "", SmsSendOutTemplateId: "", WebHooks: "", WebHooksFinalUrl: "", SmsOutDependencyFieldId: 0,
    GroupIdBasedOnOptin: "", WebHookId: 0, URLParameterResponses: "", IsRedirectUrlNewWindow: 0, IsOverrideAssignment: 0, ReportToFormsWhatsAppFieldId: 0, ReportToDetailsByWhatsApp: "", WhatsAppSendOutTemplateId: "", WhatsAppOutDependencyFieldId: 0, IsOverRideSource: "", SourceType: 0
};

var webhookdetails = { WebHookId: 0, RequestURL: "", MethodType: 0, ContentType: 0, FieldMappingDetails: "", Headers: "", BasicAuthentication: 0, RawBody: "" };

//-----Form Design Response Part End

//-----Start ---Form Fields Part-----
var PrefilledFields = "";
var fieldEditIndex = -1;
var allFormFields = new Array();
var allBindingFormFields = new Array();
var preFormFieldsBindingDetailsArray = new Array();
var preFormFieldsArray = new Array();

var formFields = { Id: 0, UserId: 0, FormId: 0, Name: "", FieldType: 0, SubFields: "", RelationField: 0, Mandatory: 0, FormScore: 0, PhoneValidationType: "", FieldDisplay: "", CalendarDisplayType: 0 };

//-----End ---Form Fields Part-----

var captureFormDiv;
var pre_formFields = new Array(), pre_formDesign, pre_formBasicDetails, pre_formBannerList;

var domainUrl = "";
var data = "";

var loadingDataValues = { ActiveEmailIds: false, FormsList: false, GroupsList: false, LmsStageList: false, MailTemplates: false, SmsTemplates: false, UsersList: false };

var FormUtil = {
    GetCustomFields: function () {
        $.ajax({
            url: "../CommonDetailsForForms/GetAllFieldDetails",
            type: 'POST',
            data: JSON.stringify({ 'AccountId': Plumb5AccountId }),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                if (response != null && response.length > 0) {

                    CustomFields = response;
                }
            },
            error: ShowAjaxError
        });
    },

    LoadingSymbol: function () {
        LoadingTimeInverval = setInterval(function () {
            if (loadingDataValues.ActiveEmailIds && loadingDataValues.FormsList && loadingDataValues.GroupsList && loadingDataValues.LmsStageList && loadingDataValues.MailTemplates && loadingDataValues.SmsTemplates) {
                HidePageLoading();
                clearInterval(LoadingTimeInverval);
            }
        }, 300);
    },
    BindFormActiveEmailId: function () {
        $.ajax({
            url: "../CommonDetailsForForms/GetActiveEmailIds",
            type: 'Post',
            data: JSON.stringify({}),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                loadingDataValues.ActiveEmailIds = true;

                if (response != undefined && response != null) {
                    $.each(response, function (i) {
                        $("#ui_ddlFromEmailSender").append("<option value='" + response[i] + "'>" + response[i] + "</option>");

                        var fromEmailIdDetailsObject = new Object();
                        fromEmailIdDetailsObject.Value = response[i];
                        FromEmailIdList.push(fromEmailIdDetailsObject);
                    });
                }
                FormUtil.IntializeCountyList();
                FormUtil.InitializeIsoverridesourceList();
            },
            error: ShowAjaxError
        });
    },
    IntializeCountyList: function () {
        $('#ui_txtCountry')[0].options.length = 0;

        if (countryList != null && countryList.length > 0) {
            $.each(countryList, function (i) {
                $("#ui_txtCountry").append("<option value='" + countryList[i] + "'>" + countryList[i] + "</option>");
            });
        }
        FormUtil.IntializeDOBCalender();
    },
    IntializeDOBCalender: function () {
        $(".calender").datepicker({
            prevText: "click for previous months",
            nextText: "click for next months",
            showOtherMonths: true,
            selectOtherMonths: false,
            dateFormat: "yy-mm-dd",
            onSelect: function (selected) {
                if ($(this).attr('id') == "txtDiffDate")
                    FormUtil.DaysDifference();
            }
        });
        FormUtil.IntializeFromsListAndMailGroupList();
    },
    IntializeFromsListAndMailGroupList: function () {
        $.ajax({
            url: "../CommonDetailsForForms/GetFormsList",
            dataType: "json",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataFilter: function (data) { return data; },
            success: function (response) {
                loadingDataValues.FormsList = true;
                if (response != undefined && response != null && response.length > 0) {
                    var formsList = response;
                    $.each(formsList, function () {
                        if ($(this)[0].FormType == 1)
                            FormUtil.AddOptionToDropDown(["ui_ddlRespondedFroms", "ui_ddlNotRespondedFroms", "ui_ddlAnswerDependencyFroms", "ui_ddlFormCloseEvent", "ui_ddlFormImpression", "ui_ddlResponseCountEvent"], $(this)[0].Id, $(this)[0].FormIdentifier, "");
                        else if (($(this)[0].FormType == 4 || $(this)[0].FormType == 2) && $(this)[0].FormType != 5 && $(this)[0].FormType != 3)
                            FormUtil.AddOptionToDropDown(["ui_ddlFormCloseEvent", "ui_ddlFormImpression", "ui_ddlResponseCountEvent"], $(this)[0].Id, $(this)[0].FormIdentifier, "");
                        else
                            FormUtil.AddOptionToDropDown(["ui_ddlFormCloseEvent", "ui_ddlFormImpression"], $(this)[0].Id, $(this)[0].FormIdentifier, "");
                    });
                }
                else {
                    FormUtil.AddOptionToDropDown(["ui_ddlRespondedFroms", "ui_ddlNotRespondedFroms", "ui_ddlAnswerDependencyFroms", "ui_ddlFormCloseEvent", "ui_ddlFormImpression", "ui_ddlResponseCountEvent"], "0", "No froms have been added yet", "red");
                }
                FormUtil.InitializeGroupList();
            },
            error: ShowAjaxError
        });
    },
    InitializeGroupList: function () {
        $.ajax({
            url: "../CommonDetailsForForms/GetGroups",
            dataType: "json",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataFilter: function (data) { return data; },
            success: function (response) {
                loadingDataValues.GroupsList = true;
                if (response != undefined && response != null && response.length > 0) {
                    $.each(response, function () {
                        groupList.push({ value: $(this)[0].Id.toString(), label: $(this)[0].Name });
                        $('#ui_ddlGroupList').append($("<option></option>").attr("value", $(this)[0].Id).text($(this)[0].Name));
                        $("#ui_ddlGroupList_MailSpecificOptinYes,#ui_ddlGroupList_MailSpecificOptinNo,#ui_ddlGroupList_SmsSpecificOptinYes,#ui_ddlGroupList_SmsSpecificOptinNo,#ui_ddlGroupList_WhatsAppOptinYes,#ui_ddlGroupList_WhatsAppOptinNo,#ui_ddlGroupList_SmsOverallOptinYes,#ui_ddlGroupList_SmsOverallOptinNo").append($("<option></option>").attr("value", $(this)[0].Id).text($(this)[0].Name));
                    });
                }

                $("#ui_txtGroups").autocomplete({
                    autoFocus: true,
                    minLength: 0, max: 10,
                    source: groupList,
                    select: function (events, selectedItem) {
                        FormUtil.AppendSelected("ui_txtGroups_values", selectedItem, "group");
                    },
                    close: function (event, ui) {
                        $(this).val("");
                    }
                });
                FormUtil.InitializeUsersList();
            },
            error: ShowAjaxError
        });
    },
    InitializeUsersList: function () {
        $.ajax({
            url: "../CommonDetailsForForms/GetUser",
            type: 'POST',
            data: JSON.stringify({ 'accountId': Plumb5AccountId }),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            dataFilter: function (data) { return data; },
            success: function (response) {
                loadingDataValues.UsersList = true;

                if (response != undefined && response != null) {
                    $.each(response, function () {
                        if ($(this)[0].ActiveStatus) {
                            usersListDetails.push({ UserInfoUserId: $(this)[0].UserInfoUserId, FirstName: $(this)[0].FirstName });
                            $("#ui_ddlUserList").append("<option value='" + $(this)[0].UserInfoUserId + "'>" + $(this)[0].FirstName + "</option>")
                        }
                    });
                }
                FormUtil.InitializeLmsStage();
            },
            error: ShowAjaxError
        });
    },
    InitializeLmsStage: function () {
        $.ajax({
            url: "../CommonDetailsForForms/LmsStage",
            dataType: "json",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataFilter: function (data) { return data; },
            success: function (response) {
                loadingDataValues.LmsStageList = true;
                if (response != undefined && response != null && response.length > 0) {
                    $.each(response, function () {
                        $("#ui_ddlProspectStatus").append("<option style='color:" + $(this)[0].IdentificationColor + ";' value='" + $(this)[0].Score.toString() + "'>" + $(this)[0].Stage + "</option>");
                    });
                }
                else {
                    FormUtil.AddOptionToDropDown(["ui_ddlProspectStatus"], "0", "No Lms Stage", "red");
                }

                FormUtil.IntializeMailTemplate();
            },
            error: ShowAjaxError
        });
    },
    IntializeMailTemplate: function () {
        $.ajax({
            url: "../CommonDetailsForForms/GetTemplate",
            type: 'Post',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (TemplateList) {
                loadingDataValues.MailTemplates = true;
                if (TemplateList != undefined && TemplateList != null && TemplateList.length > 0) {
                    $.each(TemplateList, function () {
                        FormUtil.AddOptionToDropDown(["selectemailtemp"], $(this)[0].Id.toString(), $(this)[0].Name, "");
                        $("#ui_ddlMailRespondentTemplate").append("<option value='" + $(this)[0].Id + "'>" + $(this)[0].Name + "</option>");
                        $("#ui_ddlMailUnConditionTemplate").append("<option value='" + $(this)[0].Id + "'>" + $(this)[0].Name + "</option>");

                        var templateDetailsObject = new Object();
                        templateDetailsObject.TemplateId = $(this)[0].Id;
                        templateDetailsObject.TempName = $(this)[0].Name;
                        templateList.push(templateDetailsObject);
                    });
                }

                FormUtil.IntializeSmsTemplate();
            },
            error: ShowAjaxError
        });
    },
    IntializeSmsTemplate: function () {
        $.ajax({
            url: "../CommonDetailsForForms/GetSmsTemplate",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                loadingDataValues.SmsTemplates = true;
                if (response != undefined && response != null && response.length > 0) {
                    $.each(response, function () {
                        $("#ui_ddlSmsRespondentTemplate").append("<option value='" + $(this)[0].Id + "'>" + $(this)[0].Name + "</option>");

                        optlist = document.createElement('option');
                        optlist.value = $(this)[0].Id;
                        optlist.text = $(this)[0].Name;
                        document.getElementById("ui_ddlSmsTemplate").options.add(optlist);

                        var SmstemplateDetailsObject = new Object();
                        SmstemplateDetailsObject.TemplateId = $(this)[0].Id;
                        SmstemplateDetailsObject.TempName = $(this)[0].Name;
                        SmsTemplateList.push(SmstemplateDetailsObject);
                    });
                }
                FormUtil.IntializeWhatsAppTemplate();
            },
            error: ShowAjaxError
        });
    },
    InitializeIsoverridesourceList: function () {
        $.ajax({
            url: "../CommonDetailsForForms/GetLMSGroupList",
            type: 'POST',
            data: JSON.stringify({ 'accountId': Plumb5AccountId }),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            dataFilter: function (data) { return data; },
            success: function (response) {
                loadingDataValues.UsersList = true;

                if (response != undefined && response != null) {
                    $.each(response, function () {
                        IsOverRideSourceListDetails.push({ value: $(this)[0].Id, label: $(this)[0].Name });
                        $("#ui_ddlIsoverridesourceList").append("<option value='" + $(this)[0].Id + "'>" + $(this)[0].Name + "</option>");

                    });
                }
            },
            error: ShowAjaxError
        });
    },
    IntializeWhatsAppTemplate: function () {
        $.ajax({
            url: "../CommonDetailsForForms/GetWhatsAppTemplate",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                loadingDataValues.WhatsAppTemplates = true;
                if (response != undefined && response != null && response.length > 0) {
                    $.each(response, function () {
                        $("#ui_ddlWhatsAppRespondentTemplate").append("<option value='" + $(this)[0].Id + "'>" + $(this)[0].Name + "</option>");

                        optlist = document.createElement('option');
                        optlist.value = $(this)[0].Id;
                        optlist.text = $(this)[0].Name;
                        document.getElementById("ui_ddlWhatsAppTemplate").options.add(optlist);

                        var WhatsApptemplateDetailsObject = new Object();
                        WhatsApptemplateDetailsObject.TemplateId = $(this)[0].Id;
                        WhatsApptemplateDetailsObject.TempName = $(this)[0].Name;
                        WhatsAppTemplateList.push(WhatsApptemplateDetailsObject);
                    });
                }
                FormUtil.IfNewIntializeDefault();
            },
            error: ShowAjaxError
        });
    },
    AddOptionToDropDown: function (dropDownTag, value, text, uiStyle) {
        for (var index = 0; index < dropDownTag.length; index++) {
            $("#" + dropDownTag[index]).append("<option value='" + value + "'>" + text + "</option>");
            if (uiStyle.length > 0)
                $("#" + dropDownTag[index]).css("color", uiStyle);
        }
    },
    CreatePlumb5FieldDropDown: function (Id) {

        $("#" + Id + "option:not(:first)").remove();

        if (ContactPropertyList != null && ContactPropertyList.length > 0) {
            if (!IsCalledCustomfields) {
                FormUtil.GetContactProperties(Id);
                IsCalledCustomfields = true;
            }
            else {
                for (var i = 0; i < ContactPropertyList.length; i++) {
                    $("#" + Id).append("<option value='" + ContactPropertyList[i].P5ColumnName + "'>" + ContactPropertyList[i].FrontEndName + "</option>");
                }
            }
        }
    },
    GetContactProperties: function (Id) {
        $.ajax({
            url: "/ManageContact/ContactImport/GetContactProperties",
            type: 'POST',
            data: JSON.stringify({ 'accountId': Plumb5AccountId }),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: false,
            success: function (response) {
                if (response != undefined && response != null && response.length > 0) {
                    for (var i = 0; i < response.length; i++) {
                        // $("#" + Id).append("<option value='" + response[i].FieldName + "'>" + response[i].FieldName + "</option>");
                        ContactPropertyList.push({
                            'P5ColumnName': response[i].FieldName, 'FrontEndName': response[i].FieldName, 'FieldType': response[i].FieldName
                        });
                    }
                }

                if (ContactPropertyList != null && ContactPropertyList.length > 0) {
                    //To sort dropdown by alphabetical order **************
                    let field = 'FrontEndName';
                    ContactPropertyList.sort((a, b) => (a[field] || "").toString().localeCompare((b[field] || "").toString()));
                    //****************************************
                    for (var i = 0; i < ContactPropertyList.length; i++) {
                        $("#" + Id).append("<option value='" + ContactPropertyList[i].P5ColumnName + "'>" + ContactPropertyList[i].FrontEndName + "</option>");
                    }
                }
                HidePageLoading();
            },
            error: ShowAjaxError
        });
    },
    IfNewIntializeDefault: function () {
        if (formId <= 0) {
            var today = new Date();
            var strYear = (today.getMonth() + 1) + today.getDate() + today.getMilliseconds();
            $("#ui_txtFormIdentifier").val("Form Identifier - " + strYear);

            FormUtil.BindDefaultCss();
        }
        else if (formId > 0) {
            BindSavedData(formId);
        }
    },

    ValidateCaptureFormAllDatas: function () {

        if (!FormUtil.ValidateBasicContents()) {
            HidePageLoading();
            return false;
        }

        if (allBindingFormFields.length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterFormBindingFields);
            HidePageLoading();
            return false;
        }

        if (allFormFields.length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterFormFields);
            HidePageLoading();
            return false;
        }

        if (allFormFields.length > 40) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.FieldAddError);
            HidePageLoading();
            return false;
        }

        if (!FormUtil.ValidateDesign()) {
            HidePageLoading();
            return false;
        }

        if (!FormUtil.ValidateSettings()) {
            HidePageLoading();
            return false;
        }

        if (!FormUtil.ValidateRules()) {
            HidePageLoading();
            return false;
        }

        if (!FormUtil.ValidationOfCaptureFormResponseSetting()) {
            HidePageLoading();
            return false;
        }

        //if (!FormUtil.ValidationOfWebHookSetting()) {
        //    HidePageLoading();
        //    return false;
        //}
        return true;
    },
    ValidateBasicContents: function () {

        if (CleanText($("#ui_txtFormIdentifier").val()).length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterFormIdentifierName);
            return false;
        }

        if ($(".headTitOne").html() == undefined) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.SelectTitleField);
            return false;
        }

        if ($(".headTitOne").html() != undefined && $(".headTitOne").html() == null && $(".headTitOne").html() == "" && $(".headTitOne").html().length <= 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterTitleValue);
            return false;
        }

        if (formType == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.FormTypeError);
            return false;
        }
        return true;
    },
    ValidateFormCustomHtmlContents: function () {

        if (CleanText($("#ui_txtFormIdentifier").val()).length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterFormIdentifierName);
            return false;
        }

        if (formType == 2) {
            if (CleanText($("#ui_txtContent").val()).length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.CustomHtmlError);
                $("#ui_txtContent").focus();
                return false
            }
        }

        if (formType == 3) {
            if (CleanText($("#ui_txtiframeContent").val()).length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.CustomHtmlError);
                $("#ui_txtiframeContent").focus();
                return false
            }
        }

        if (formType == 4) {
            if (CleanText($("#ui_txtimageContent").val()).length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.CustomBannerImageError);
                $("#ui_txtimageContent").focus();
                return false
            }

            if (CleanText($("#ui_txtImageRedirectUrl").val()).length > 0) {
                if (!regExpUrl.test($("#ui_txtImageRedirectUrl").val())) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterValidUrl);
                    $("#ui_txtImageRedirectUrl").focus();
                    return false
                }
            }
        }

        if (formType == 5) {
            if (CleanText($("#ui_txtvideoContent").val()).length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.CustomHtmlError);
                $("#ui_txtvideoContent").focus();
                return false
            }
        }

        if (CleanText($("#bodyHeight").val()).length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterFormHeight);
            return false;
        }

        if (CleanText($("#bodyWidth").val()).length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterFormWidth);
            return false;
        }

        if (CleanText($("#frmClsHite").val()).length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterCloseHeight);
            return false;
        }

        if (CleanText($("#frmClsWid").val()).length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterCloseWidth);
            return false;
        }

        if (formType == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.FormTypeError);
            return false;
        }
        return true;
    },
    ValidateDesign: function () {

        if (CleanText($("#bodyHeight").val()).length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterFormHeight);
            return false;
        }

        if (CleanText($("#bodyWidth").val()).length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterFormWidth);
            return false;
        }

        if (CleanText($("#frmClsHite").val()).length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterCloseHeight);
            return false;
        }

        if (CleanText($("#frmClsWid").val()).length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterCloseWidth);
            return false;
        }

        if (allBindingFormFields != null && allBindingFormFields.length > 0) {
            var sample = JSLINQ(allBindingFormFields).Where(function () { return (this.FieldType == 24); });

            if (sample.items[0] == undefined) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.SubmitButtonError);
                return false;
            }
        }

        return true;
    },
    ValidateSettings: function () {

        if ($('input[name=PageLoadOrOnExitOrOnScroll]:checked').val() == 2) {

            if ($("#ui_txtShowOnScrollDownHeight").val().length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterScrollDownValue);
                $("#ui_txtShowOnScrollDownHeight").focus();
                return false;
            }

            if (parseInt($("#ui_txtShowOnScrollDownHeight").val()) < 50) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterMinimumScrollDownValue);
                $("#ui_txtShowOnScrollDownHeight").focus();
                return false;
            }
        }

        if ($('input[name=PageLoadOrOnExitOrOnScroll]:checked').val() == 0) {

            if ($("#ui_txtBottomPadding").val().length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterBottomValue);
                $("#ui_txtBottomPadding").focus();
                return false;
            }

            if ($("#ui_txtPadding").val().length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterpaddingValue);
                $("#ui_txtPadding").focus();
                return false;
            }
        }
        return true;
    },
    ValidationOfCaptureFormResponseSetting: function () {

        //Mail
        if ($("#ui_chkReportMail").is(":checked")) {
            if ($("#ui_radReportMailUnCondition").is(":checked")) {

                if ($("#ui_txtReportThroughEmail").val().length == 0) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughMailError);
                    $("#ui_txtReportThroughEmail").focus();
                    return false;
                }

                if (!CheckValidEmail("ui_txtReportThroughEmail")) {
                    return false;
                }
            }
            else if ($("#ui_radReportMailCondition").is(":checked")) {
                if (!$("input:radio[name='ReportToMailDependencyFieldOption']:checked").val()) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughMailConditionalError);
                    return false;
                }
                else {

                    var field = allFormFields[responseMailSettingFieldIndex];

                    if (responseMailSettingFieldIndex > -1 && (field != undefined || field != null)) {
                        for (var i = 0; i < field.SubFields.split(",").length; i++) {
                            if ($("#ui_txtReportToMail_" + i).length > 0 && $("#ui_txtReportToMail_" + i).val().length == 0) {
                                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughMailConditionalFieldError);
                                $("#ui_txtReportToMail_" + i).focus();
                                return false;
                            }
                            if (!CheckValidEmail("ui_txtReportToMail_" + i)) {
                                return false;
                            }
                        }
                    }
                    else {
                        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughMailConditionalFieldDeletionError);
                        return false;
                    }
                }
            }
        }
        //SMS
        if ($("#ui_chkReportSMS").is(":checked")) {
            if ($("#ui_radReportSMSUnCondition").is(":checked")) {

                if ($("#ui_txtReportThroughSMSAlert").val().length == 0) {
                    $("#ui_txtReportThroughSMSAlert").focus();
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughSMSError);
                    return false;
                }

                if (!CheckPhoneNumbers("ui_txtReportThroughSMSAlert")) {
                    return false;
                }

            }
            else if ($("#ui_radReportSMSCondition").is(":checked")) {
                if (!$("input:radio[name='ReportToSMSDependencyFieldOption']:checked").val()) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughSMSConditionalError);
                    return false;
                }
                else {

                    var field = allFormFields[responseSMSSettingFieldIndex];

                    if (responseSMSSettingFieldIndex > -1 && (field != undefined || field != null)) {

                        for (var i = 0; i < field.SubFields.split(",").length; i++) {
                            if ($("#ui_txtReportToSMS_" + i).length > 0 && $("#ui_txtReportToSMS_" + i).val().length == 0) {
                                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughSMSConditionalFieldError);
                                $("#ui_txtReportToSMS_" + i).focus();
                                return false;
                            }

                            if (!CheckPhoneNumbers("ui_txtReportToSMS_" + i)) {
                                return false;
                            }
                        }
                    }
                    else {
                        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughSMSConditionalFieldDeletionError);
                        return false;
                    }
                }
            }
        }
        //WhatsApp
        if ($("#ui_chkReportWhatsApp").is(":checked")) {
            if ($("#ui_radReportWhatsAppUnCondition").is(":checked")) {

                if ($("#ui_txtReportThroughWhatsAppAlert").val().length == 0) {
                    $("#ui_txtReportThroughWhatsAppAlert").focus();
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughWhatsAppError);
                    return false;
                }

                if (!CheckPhoneNumbers("ui_txtReportThroughWhatsAppAlert")) {
                    return false;
                }

            }
            else if ($("#ui_radReportWhatsAppCondition").is(":checked")) {
                if (!$("input:radio[name='ReportToWhatsAppDependencyFieldOption']:checked").val()) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughWhatsAppConditionalError);
                    return false;
                }
                else {

                    var field = allFormFields[responseWhatsAppSettingFieldIndex];

                    if (responseWhatsAppSettingFieldIndex > -1 && (field != undefined || field != null)) {

                        for (var i = 0; i < field.SubFields.split(",").length; i++) {
                            if ($("#ui_txtReportToWhatsApp_" + i).length > 0 && $("#ui_txtReportToWhatsApp_" + i).val().length == 0) {
                                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughWhatsAppConditionalFieldError);
                                $("#ui_txtReportToWhatsApp_" + i).focus();
                                return false;
                            }

                            if (!CheckPhoneNumbers("ui_txtReportToWhatsApp_" + i)) {
                                return false;
                            }
                        }
                    }
                    else {
                        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughWhatsAppConditionalFieldDeletionError);
                        return false;
                    }
                }
            }
        }
        //Mailout
        if ($("#ui_chkSendMailOut").is(":checked")) {
            if ($("#ui_chkUnConditionalMailOut").is(":checked")) {

                if ($("#ui_ddlMailUnConditionTemplate").val() == null || $("#ui_ddlMailUnConditionTemplate").val() == "" || $("#ui_ddlMailUnConditionTemplate").val() == "0") {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughMailOutTemplateError);
                    $("#ui_ddlMailUnConditionTemplate").focus();
                    return false;
                }


                if ($("#ui_txtMailUnConditionSubject").val().length == 0) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughMailOutSubjectError);
                    $("#ui_txtMailUnConditionSubject").focus();
                    return false;
                }

                if ($("#ui_txtUnConditionalMailFromName").val().length == 0) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughMailOutFromNameError);
                    $("#ui_txtUnConditionalMailFromName").focus();
                    return false;
                }

                if ($("#ui_ddlFromEmailSender").val() == null || $("#ui_ddlFromEmailSender").val() == "" || $("#ui_ddlFromEmailSender").val() == "0") {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughMailOutFromEmailIdError);
                    $("#ui_ddlFromEmailSender").focus();
                    return false;
                }

                //if ($("#ui_txtUnConditionalMailFromId").val().length == 0) {
                //    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughMailOutFromEmailIdError);
                //    $("#ui_txtUnConditionalMailFromId").focus();
                //    return false;
                //}

                //if (!regExpEmail.test($("#ui_txtUnConditionalMailFromId").val())) {
                //    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughMailOutInValidEmailError);
                //    $("#ui_txtUnConditionalMailFromId").focus();
                //    return false;
                //}
            }
            else if ($("#ui_chkConditionalMailOut").is(":checked")) {
                if (!$("input:radio[name='MailOutDependencyFieldOption']:checked").val()) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughMailOutTemplateError);
                    return false;
                }
                else {
                    var field = allFormFields[responseMailOutSettingIndex];

                    if (responseMailOutSettingIndex > -1 && (field != undefined || field != null)) {
                        for (var i = 0; i < field.SubFields.split(",").length; i++) {
                            if ($("#ui_ddlMailOut_" + i).length > 0 && $("#ui_ddlMailOut_" + i).val() == 0) {
                                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughMailOutTemplateError);
                                $("#ui_ddlMailOut_" + i).focus();
                                return false;
                            }

                            if ($("#ui_txtMailConditionSubject_" + i).length > 0 && $("#ui_txtMailConditionSubject_" + i).val() == 0) {
                                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughMailOutSubjectError);
                                $("#ui_txtMailConditionSubject_" + i).focus();
                                return false;
                            }

                            if ($("#ui_txtConditionalMailFromName_" + i).val().length == 0) {
                                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughMailOutFromNameError);
                                $("#ui_txtConditionalMailFromName_" + i).focus();
                                return false;
                            }

                            if ($("#ui_ddlMailFormEmailIdMailOut_" + i).length > 0 && $("#ui_ddlMailFormEmailIdMailOut_" + i).val() == 0) {
                                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughMailOutFromEmailIdError);
                                $("#ui_ddlMailFormEmailIdMailOut_" + i).focus();
                                return false;
                            }

                            //if ($("#ui_txtConditionalMailFromId_" + i).val().length == 0) {
                            //    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughMailOutFromEmailIdError);
                            //    $("#ui_txtConditionalMailFromId_" + i).focus();
                            //    return false;
                            //}

                            //if (!regExpEmail.test($("#ui_txtConditionalMailFromId_" + i).val())) {
                            //    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughMailOutInValidEmailError);
                            //    $("#ui_txtConditionalMailFromId_" + i).focus();
                            //    return false;
                            //}
                        }
                    }
                    else {
                        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughMailOutConditionalFieldDeletionError);
                        return false;
                    }
                }
            }
        }

        //Sms Out
        if ($("#ui_chkSendSmsOut").is(":checked")) {
            if ($("#ui_chkUnConditionalSmsOut").is(":checked")) {
                if ($("#ui_ddlSmsTemplate").get(0).selectedIndex <= 0) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughSMSOutTemplateError);
                    return false;
                }
            }
            else if ($("#ui_chkConditionalSmsOut").is(":checked")) {
                if (!$("input:radio[name='SmsOutDependencyFieldOption']:checked").val()) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughSMSOutConditionalEmailError);
                    return false;
                }
                else {
                    var field = allFormFields[responseSmsOutSettingIndex];

                    if (responseSmsOutSettingIndex > -1 && (field != undefined || field != null)) {
                        for (var i = 0; i < field.SubFields.split(",").length; i++) {
                            if ($("#ui_ddlSmsOut_" + i).length > 0 && $("#ui_ddlSmsOut_" + i).val() == 0) {
                                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughSMSOutTemplateError);
                                $("#ui_ddlSmsOut_" + i).focus();
                                return false;
                            }
                        }
                    }
                    else {
                        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughSmsOutConditionalFieldDeletionError);
                        return false;
                    }
                }
            }
            return true;
        }
        //WhatsApp Out
        if ($("#ui_chkSendWhatsAppOut").is(":checked")) {
            if ($("#ui_chkUnConditionalWhatsAppOut").is(":checked")) {
                if ($("#ui_ddlWhatsAppTemplate").get(0).selectedIndex <= 0) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughWhatsAppOutTemplateError);
                    return false;
                }
            }
            else if ($("#ui_chkConditionalWhatsAppOut").is(":checked")) {
                if (!$("input:radio[name='WhatsAppOutDependencyFieldOption']:checked").val()) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughWhatsAppOutConditionalEmailError);
                    return false;
                }
                else {
                    var field = allFormFields[responseWhatsAppOutSettingIndex];

                    if (responseWhatsAppOutSettingIndex > -1 && (field != undefined || field != null)) {
                        for (var i = 0; i < field.SubFields.split(",").length; i++) {
                            if ($("#ui_ddlWhatsAppOut_" + i).length > 0 && $("#ui_ddlWhatsAppOut_" + i).val() == 0) {
                                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughWhatsAppOutTemplateError);
                                $("#ui_ddlWhatsAppOut_" + i).focus();
                                return false;
                            }
                        }
                    }
                    else {
                        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughWhatsAppOutConditionalFieldDeletionError);
                        return false;
                    }
                }
            }
            return true;
        }
        //Assign Lead Validation

        if ($("#ui_chkSalesPerson").is(":checked")) {
            if (!$("#ui_chkIsOverrideAssignmentBasedOnRule").is(":checked")) {
                if ($("#ui_radUnConditionalAssignToSales").is(":checked") && $("#ui_ddlUserList").get(0).selectedIndex == 0) {
                    $("#ui_ddlUserList").focus();
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughAssignSalesPersonError);
                    return false;
                }
                else if ($("#ui_radConditionalAssignToSales").is(":checked")) {
                    if (!$("input:radio[name='AssignToSalesDependencyFieldOption']:checked").val()) {
                        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughAssignSalesPersonConditionalError);
                        return false;
                    }
                    else {

                        var field = allFormFields[responseSalesAssigmentSettingIndex];

                        if (responseSalesAssigmentSettingIndex > -1 && (field != undefined || field != null)) {
                            for (var i = 0; i < field.SubFields.split(",").length; i++) {
                                if ($("#ui_txtAssignToSales_" + i).length > 0 && $("#ui_txtAssignToSales_" + i).get(0).selectedIndex == 0) {
                                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughAssignSalesPersonError);
                                    $("#ui_txtAssignToSales_" + i).focus();
                                    return false;
                                }
                            }
                        }
                        else {
                            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughAssignSalesPersonConditionalFieldDeletionError);
                            return false;
                        }
                    }
                }
            }
        }

        //Redirect Url
        if ($("#ui_chkRedirectUrl").is(":checked")) {
            if ($("#ui_chkUnConditionalRedirectUrl").is(":checked")) {
                if ($("#ui_txtRedirectUrl").val().length == 0) {
                    $("#ui_txtRedirectUrl").focus();
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughRedirectUrlError);
                    return false;
                }

                if (!regExpUrl.test($("#ui_txtRedirectUrl").val())) {
                    $("#ui_txtRedirectUrl").focus();
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughRedirectUrlValidError);
                    return false;
                }
            }
            else if ($("#ui_chkConditionalRedirectUrl").is(":checked")) {
                if (!$("input:radio[name='RedirectUrlDependencyFieldOption']:checked").val()) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughRedirectUrlConditionalError);
                    return false;
                }
                else {

                    var field = allFormFields[responseRedirectUrlSettingIndex];

                    if (responseRedirectUrlSettingIndex > -1 && (field != undefined || field != null)) {
                        for (var i = 0; i < field.SubFields.split(",").length; i++) {
                            if ($("#ui_txtRedirectUrl_" + i).length > 0 && $("#ui_txtRedirectUrl_" + i).val().length == 0) {
                                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughRedirectUrlError);
                                $("#ui_txtRedirectUrl_" + i).focus();
                                return false;
                            }

                            if (!regExpUrl.test($("#ui_txtRedirectUrl_" + i).val())) {
                                $("#ui_txtRedirectUrl_" + i).focus();
                                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughRedirectUrlValidError);
                                return false;
                            }
                        }
                    }
                    else {
                        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughRedirectUrlConditionalFieldDeletionError);
                        return false;
                    }
                }
            }
        }

        //AutoAssignToGroup
        if ($("#ui_chkGroups").is(":checked")) {
            if ($("#ui_chkUnConditionalGroups").is(":checked")) {
                if ($("#ui_ddlGroupList").get(0).selectedIndex <= 0) {
                    $("#ui_ddlGroupList").focus();
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughGroupError);
                    return false;
                }
            }
            else if ($("#ui_chkConditionalGroups").is(":checked")) {
            }
        }

        //OverRideSource
        if ($("#ui_chkoverridesource").is(":checked")) {
            if ($("#ui_chkUnConditionaloverridesource").is(":checked")) {
                if ($("#ui_ddlIsoverridesourceList").get(0).selectedIndex <= 0) {
                    $("#ui_ddlIsoverridesourceList").focus();
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ReportThroughSourceError);
                    return false;
                }
            }
            else if ($("#ui_chkConditionaloverridesource").is(":checked")) {
            }
        }
        //AutoAssigToGroup Based on Optin

        if ($("#ui_optinGroups").is(":checked")) {
            var checkCount = $("input[name='OptinAutoAssign']:checked").length;

            if (checkCount == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.AutoAssignToGrpBasedOnOptinSelectionError);
                $("#ui_optinGroups").focus();
                return false;
            }

            else if (checkCount > 0) {
                let optincheckCount = $("input[name='OptinYesNo']:checked").length;

                if (optincheckCount == 0) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.AutoAssignToGrpBasedOnOptinOrWithoutSelectionError);
                    $("#ui_optinGroups").focus();
                    return false;
                }
                else if (optincheckCount > 0) {
                    if ($("#ui_chkMailSpecificOptin").is(":checked")) {
                        if ($("#ui_chkMailSpecificOptinYes").is(":checked")) {
                            if ($("#ui_ddlGroupList_MailSpecificOptinYes").get(0).selectedIndex == 0) {
                                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.AutoAssignToGrpBasedOnMailOptinError);
                                $("#ui_ddlGroupList_MailSpecificOptinYes").focus();
                                return false;
                            }
                        }
                        if ($("#ui_chkMailSpecificOptinNo").is(":checked")) {
                            if ($("#ui_ddlGroupList_MailSpecificOptinNo").get(0).selectedIndex == 0) {
                                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.AutoAssignToGrpBasedOnMailWithOutOptinError);
                                $("#ui_ddlGroupList_MailSpecificOptinNo").focus();
                                return false;
                            }
                        }
                        else if (!$("#ui_chkMailSpecificOptinYes").is(":checked") && !$("#ui_chkMailSpecificOptinNo").is(":checked")) {
                            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.AutoAssignToGrpBasedOnMailSpecificOptinError);
                            $("#ui_chkMailSpecificOptin").focus();
                            return false;
                        }
                    }
                    if ($("#ui_chkSmsSpecificOptin").is(":checked")) {
                        if ($("#ui_chkSmsSpecificOptinYes").is(":checked")) {
                            if ($("#ui_ddlGroupList_SmsSpecificOptinYes").get(0).selectedIndex == 0) {
                                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.AutoAssignToGrpBasedOnSMSOptinError);
                                $("#ui_ddlGroupList_SmsSpecificOptinYes").focus();
                                return false;
                            }
                        }
                        if ($("#ui_chkSmsSpecificOptinNo").is(":checked")) {
                            if ($("#ui_ddlGroupList_SmsSpecificOptinNo").get(0).selectedIndex == 0) {
                                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.AutoAssignToGrpBasedOnSMSWithOutOptinError);
                                $("#ui_ddlGroupList_SmsSpecificOptinNo").focus();
                                return false;
                            }
                        }
                        else if (!$("#ui_chkSmsSpecificOptinYes").is(":checked") && !$("#ui_chkSmsSpecificOptinNo").is(":checked")) {
                            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.AutoAssignToGrpBasedOnSMSSpecificOptinError);
                            $("#ui_chkSmsSpecificOptin").focus();
                            return false;
                        }
                    }

                    if ($("#ui_chkWhatsAppOptin").is(":checked")) {
                        if ($("#ui_chkWhatsAppOptinYes").is(":checked")) {
                            if ($("#ui_ddlGroupList_WhatsAppOptinYes").get(0).selectedIndex == 0) {
                                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.AutoAssignToGrpBasedOnMailOverAllOptinError);
                                $("#ui_ddlGroupList_WhatsAppOptinYes").focus();
                                return false;
                            }
                        }
                        if ($("#ui_chkWhatsAppOptinNo").is(":checked")) {
                            if ($("#ui_ddlGroupList_WhatsAppOptinNo").get(0).selectedIndex == 0) {
                                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.AutoAssignToGrpBasedOnMailOverAllWithOutOptinError);
                                $("#ui_ddlGroupList_WhatsAppOptinNo").focus();
                                return false;
                            }
                        }
                        else if (!$("#ui_chkWhatsAppOptinYes").is(":checked") && !$("#ui_chkWhatsAppOptinNo").is(":checked")) {
                            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.AutoAssignToGrpBasedOnMailOverAllSpecificOptinError);
                            $("#ui_chkWhatsAppOptin").focus();
                            return false;
                        }
                    }
                }
            }
        }
        return true;
    },

    ValidateRules: function () {
        if (!FormUtil.ValidationOfAudience())
            return false;
        if (!FormUtil.ValidateBehavior())
            return false;
        if (!FormUtil.ValidateInteraction())
            return false;
        if (!FormUtil.ValidateInteractionEvent())
            return false;
        if (!FormUtil.ValidateProfile())
            return false;
        return true;
    },
    ValidationOfAudience: function () {
        if ($("#ui_chkSegment").is(":checked") && $("input[name='BelongsGroup']:checked").val() && $("#ui_txtGroups_values").children().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.SelectGroup);
            $("#ui_txtGroups").focus();
            return false;
        }
        return true;
    },
    ValidateBehavior: function () {

        if ($("#ui_chkBehavioralScore").is(":checked")) {
            if ($("#ui_VisitorScore1").val().length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterBehaviouralScore);
                $("#ui_VisitorScore1").focus();
                return false;
            }
            else if ($("#ui_ddlBehavioralScoreRange").val() == "3" && $("#ui_VisitorScore2").val().length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterBehaviouralScoreRange);
                $("#ui_VisitorScore2").focus();
                return false;
            }
            else if ($("#ui_ddlBehavioralScoreRange").val() == "3" && parseInt($("#ui_VisitorScore1").val()) > parseInt($("#ui_VisitorScore2").val())) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterValidBehaviouralScoreRange);
                $("#ui_VisitorScore2").focus();
                return false;
            }
        }
        if ($("#ui_chkSessionIs").is(":checked") && $("#ui_txtSession").val().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterSessionValue);
            $("#ui_txtSession").focus();
            return false;
        }
        if ($("#ui_chkPageDepthIs").is(":checked") && $("#ui_txtPageDepthIs").val().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterPageDepth);
            $("#ui_txtPageDepthIs").focus();
            return false;
        }
        if ($("#ui_chkPageViewIs").is(":checked") && $("#ui_txtPageViewIs").val().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterPageView);
            $("#ui_txtPageViewIs").focus();
            return false;
        }

        if ($("#ui_chkIsMailRespondent").is(":checked")) {
            if ($("#ui_ddlMailRespondentTemplate option").length <= 1) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.AddTemplate);
                $("#ui_ddlMailRespondentTemplate").focus();
                return false;
            }

            if ($('#ui_ddlMailRespondentTemplate').select2().val() == undefined || $('#ui_ddlMailRespondentTemplate').select2().val() == null || $('#ui_ddlMailRespondentTemplate').select2().val().toString() == "" || $('#ui_ddlMailRespondentTemplate').select2().val().toString().length == "0") {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.SelectMailRespondedTemplates);
                $("#ui_ddlMailRespondentTemplate").focus();
                return false;
            }

            if ($('#ui_ddlMailRespondentTemplate').select2().val() != undefined && $('#ui_ddlMailRespondentTemplate').select2().val() != null && $('#ui_ddlMailRespondentTemplate').select2().val().toString().split(',').length > 1) {
                var MailTempNames = [];
                $.each($('#ui_ddlMailRespondentTemplate').select2('data'), function () {
                    MailTempNames.push($(this)[0].text);
                });

                if (jQuery.inArray("All", MailTempNames) !== -1) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.DefaultSMSRespondedTemplates);
                    $("#ui_ddlMailRespondentTemplate").focus();
                    return false;
                }
            }
        }

        if ($("#ui_chkIsSmsRespondent").is(":checked")) {
            if ($("#ui_ddlSmsRespondentTemplate option").length <= 1) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.AddTemplate);
                $("#ui_ddlSmsRespondentTemplate").focus();
                return false;
            }

            if ($('#ui_ddlSmsRespondentTemplate').select2().val() == undefined || $('#ui_ddlSmsRespondentTemplate').select2().val() == null || $('#ui_ddlSmsRespondentTemplate').select2().val().toString() == "" || $('#ui_ddlSmsRespondentTemplate').select2().val().toString().length == "0") {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.SelectSMSRespondedTemplates);
                $("#ui_ddlSmsRespondentTemplate").focus();
                return false;
            }

            if ($('#ui_ddlSmsRespondentTemplate').select2().val() != undefined && $('#ui_ddlSmsRespondentTemplate').select2().val() != null && $('#ui_ddlSmsRespondentTemplate').select2().val().toString().split(',').length > 1) {
                var SmsTempNames = [];
                $.each($('#ui_ddlSmsRespondentTemplate').select2('data'), function () {
                    SmsTempNames.push($(this)[0].text);
                });

                if (jQuery.inArray("All", SmsTempNames) !== -1) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.DefaultSMSRespondedTemplates);
                    $("#ui_ddlSmsRespondentTemplate").focus();
                    return false;
                }
            }
        }

        if ($("#ui_chkFrequencyIs").is(":checked") && $("#ui_txtFrequencyIs").val().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterFrequency);
            $("#ui_txtFrequencyIs").focus();
            return false;
        }
        if ($("#ui_chkOnPageUrl").is(":checked") && $("#ui_txtPageUrl").val().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterPageUrl);
            $("#ui_txtPageUrl").focus();
            return false;
        }
        if ($("#ui_chkSourceIs").is(":checked") && $("#ui_radSourceIsReferrer").is(":checked") && $("#ui_txtSourceIs").val().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterSourceUrl);
            $("#ui_txtSourceIs").focus();
            return false;
        }
        if ($("#ui_chkSearchKeywordIs").is(":checked") && $("#ui_txtSearchKeyword").val().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterSearchKeyword);
            $("#ui_txtSearchKeyword").focus();
            return false;
        }

        if ($("#ui_chkCountryIs").is(":checked")) {
            if ($('#ui_txtCountry').select2().val() == undefined || $('#ui_txtCountry').select2().val() == null || $('#ui_txtCountry').select2().val().toString() == "" || $('#ui_txtCountry').select2().val().toString().length == "0") {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterCountryName);
                $("#ui_txtCountry").focus();
                return false;
            }
        }

        if ($("#ui_chkCityIs").is(":checked") && $("#ui_txtCity_values").children().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterCityName);
            $("#ui_txtCity").focus();
            return false;
        }

        if ($("#ui_chkAlreadyVisitedPages").is(":checked") && $("#ui_txtAlreadyVisitedPageUrls").val().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterAlreadyVisitedPageUrls);
            $("#ui_txtAlreadyVisitedPageUrls").focus();
            return false;
        }

        if ($("#ui_chkNotAlreadyVisitedPages").is(":checked") && $("#ui_txtNotAlreadyVisitedPageUrls").val().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterAlreadyNotVisitedPageUrls);
            $("#ui_txtNotAlreadyVisitedPageUrls").focus();
            return false;
        }

        if ($("#ui_chkTimeSpentInSite").is(":checked") && $("#ui_txtTimeSpentInSite").val().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterOverAllTimeSpentInSite);
            $("#ui_txtTimeSpentInSite").focus();
            return false;
        }

        return true;
    },
    ValidateInteraction: function () {

        if ($("#ui_chkClickedButton").is(":checked") && $("#ui_txtClickButton_values").children().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterClickedButtonTagName);
            $("#ui_txtClickButton").focus();
            return false;
        }

        if ($("#ui_chkNotClickedButton").is(":checked") && $("#ui_txtNotClickButton_values").children().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterNotClickedButtonTagName);
            $("#ui_txtNotClickButton").focus();
            return false;
        }

        if ($("#ui_chkClickedPriceRange").is(":checked")) {

            if ($("#ui_txtPriceRangeProducts_values").children().length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.Enterclickedtag);
                $("#ui_txtPriceRangeProducts").focus();
                return false;
            }
        }

        if ($("#ui_chkRespondedForm").is(":checked")) {

            if ($("#ui_ddlRespondedFroms option").length <= 1) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.CreateForms);
                $("#ui_ddlRespondedFroms").focus();
                return false;
            }

            if ($("#ui_ddlRespondedFroms").val() == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.SelectForms);
                $("#ui_ddlRespondedFroms").focus();
                return false;
            }
        }

        if ($("#ui_chkNotRespondedForm").is(":checked")) {
            if ($("#ui_ddlNotRespondedFroms option").length <= 1) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.CreateForms);
                $("#ui_ddlNotRespondedFroms").focus();
                return false;
            }

            if ($("#ui_ddlNotRespondedFroms").val() == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.SelectForms);
                $("#ui_ddlNotRespondedFroms").focus();
                return false;
            }
        }

        if ($("#ui_chkAnswerDependencyForm").is(":checked")) {
            if ($("#ui_ddlAnswerDependencyFroms").val() == "0") {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.SelectAnswerDependency);
                $("#ui_ddlAnswerDependencyFroms").focus();
                return false;
            }
            if ($("input:radio[name='AnswerDependencyFieldOption']:checked").val() == undefined) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.SelectAnswerDependencyFormField);
                $("#ui_ddlAnswerDependencyFroms").focus();
                return false;
            }
            if ($("#ui_txtAnswerCondition1").val().length == 0) {
                $("#ui_txtAnswerCondition1").focus();
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.SelectAnswerDependencyFormFieldAnswerValue);
                return false;
            }
            if ($("#ui_ddlAnswerCondition").val() == "3" && $("#ui_txtAnswerCondition2").val().length == 0) {
                $("#ui_txtAnswerCondition2").focus();
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterAnswerDependencyFormFieldCorrectRange);
                return false;
            }
        }

        if ($("#ui_chkClosedNTimes").is(":checked") && $("#ui_txtClosedNTimes").val().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterVisitorClosedFormNthTime);
            $("#ui_txtClosedNTimes").focus();
            return false;
        }
        if ($("#ui_chkAddedToCart").is(":checked") && $("#ui_txtAddedToCartProducts_values").children().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterAddedToCartProducts);
            $("#ui_txtAddedToCartProducts").focus();
            return false;
        }
        if ($("#ui_chkViewedNotAddedToCart").is(":checked") && $("#ui_txtViewedNotAddedToCartProducts_values").children().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterViewedButNotAddedToCartProducts);
            $("#ui_txtViewedNotAddedToCartProducts").focus();
            return false;
        }
        if ($("#ui_chkDropedFromCart").is(":checked") && $("#ui_txtDropedFromCartProducts_values").children().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterDroppedCartProducts);
            $("#ui_txtDropedFromCartProducts").focus();
            return false;
        }
        if ($("#ui_chkCustomerPurchased").is(":checked") && $("#ui_txtCustomerPurchasedProducts_values").children().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.SelectCustomerPurchasedProducts);
            $("#ui_txtCustomerPurchasedProducts").focus();
            return false;
        }
        if ($("#ui_chkCustomerNotPurchased").is(":checked") && $("#ui_txtCustomerNotPurchasedProducts_values").children().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.SelectCustomerNotPurchasedProducts);
            $("#ui_txtCustomerNotPurchasedProducts").focus();
            return false;
        }
        if ($("#ui_chkTotalPurchaseIs").is(":checked")) {
            if ($('#ui_ddlCustomerTotalPurchase option:selected').val() != "3" && $("#ui_txtCustomerTotalPurchase1").val().length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterCustomerTotalTransaction);
                $("#ui_txtCustomerTotalPurchase2").focus();
                return false;
            }
            else if ($('#ui_ddlCustomerTotalPurchase option:selected').val() == "3") {

                if ($("#ui_txtCustomerTotalPurchase1").val().length == 0 || $("#ui_txtCustomerTotalPurchase2").val().length == 0) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterCustomerTotalTransaction);
                    return false;
                } else {
                    if (parseInt($("#ui_txtCustomerTotalPurchase2").val()) <= parseInt($("#ui_txtCustomerTotalPurchase1").val())) {
                        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterCustomerTotalTransactionRange);
                        return false;
                    }
                }
            }
        }


        if ($("#ui_chkCustomerCurrectValue").is(":checked")) {
            if ($('#ui_ddlCustomerCurrentValue option:selected').val() != "3" && $("#ui_txtCustomerCurrentValue1").val().length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterCustomerCurrentValue);
                $("#ui_txtCustomerTotalPurchase2").focus();
                return false;
            }
            else if ($('#ui_ddlCustomerCurrentValue option:selected').val() == "3") {

                if ($("#ui_txtCustomerCurrentValue1").val().length == 0 || $("#ui_txtCustomerCurrentValue2").val().length == 0) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterCustomerCurrentValue);
                    return false;
                } else {
                    if (parseInt($("#ui_txtCustomerCurrentValue2").val()) <= parseInt($("#ui_txtCustomerCurrentValue1").val())) {
                        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterCustomerCurrentRange);
                        return false;
                    }
                }
            }
        }

        if ($("#ui_chkCustomerLastPurchase").is(":checked")) {
            if ($('#ui_ddlLastPurchaseCondition option:selected').val() != "3" && $("#ui_txtLastPurchaseRange1").val().length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterCustomerLastPurchased);
                $("#ui_txtCustomerTotalPurchase2").focus();
                return false;
            }
            else if ($('#ui_ddlLastPurchaseCondition option:selected').val() == "3") {

                if ($("#ui_txtLastPurchaseRange1").val().length == 0 || $("#ui_txtLastPurchaseRange2").val().length == 0) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterCustomerLastPurchased);
                    return false;
                } else {
                    if (parseInt($("#ui_txtLastPurchaseRange2").val()) <= parseInt($("#ui_txtLastPurchaseRange1").val())) {
                        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterCustomerLastPurchasedRange);
                        return false;
                    }
                }
            }
        }

        if ($("#ui_chkCategoriesAddedToCart").is(":checked") && $("#ui_txtAddedToCartProductsCategories_values").children().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.SelectAddedToCartProductCategories);
            $("#ui_chkCategoriesAddedToCart").focus();
            return false;
        }
        if ($("#ui_chkCategoriesNotAddedToCart").is(":checked") && $("#ui_txtNotAddedToCartProductsCategories_values").children().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.SelectNotAddedToCartProductCategories);
            $("#ui_chkCategoriesNotAddedToCart").focus();
            return false;
        }
        if ($("#ui_chkSubCategoriesAddedToCart").is(":checked") && $("#ui_txtAddedToCartProductsSubCategories_values").children().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.SelectAddedToCartProductSubCategories);
            $("#ui_chkSubCategoriesAddedToCart").focus();
            return false;
        }
        if ($("#ui_chkSubCategoriesNotAddedToCart").is(":checked") && $("#ui_txtNotAddedToCartProductsSubCategories_values").children().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.SelectNotAddedToCartProductSubCategories);
            $("#ui_chkSubCategoriesNotAddedToCart").focus();
            return false;
        }

        return true;
    },
    ValidateInteractionEvent: function () {

        if ($("#ui_chkFormImpression").is(":checked")) {

            if ($("#ui_txtFormImpressionCount").val().length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterFormImpressionCount);
                $("#ui_txtFormImpressionCount").focus();
                return false;
            }
        }

        if ($("#ui_chkFormCloseEvent").is(":checked")) {

            if ($("#ui_txtFormCloseEventCount").val().length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterFormCloseCount);
                $("#ui_txtFormCloseEventCount").focus();
                return false;
            }
        }

        if ($("#ui_chkResponseCountEvent").is(":checked")) {

            if ($("#ui_txtResponseCountEventCount").val().length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterFormResponsesCount);
                $("#ui_txtResponseCountEventCount").focus();
                return false;
            }
        }

        if ($("#ui_chkShowFormAtNTime").is(":checked") && $("#ui_txtShowFormAtNTime").val().length == 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterFormNthTimeCondition);
            $("#ui_txtShowFormAtNTime").focus();
            return false;
        }

        return true;
    },
    ValidateProfile: function () {
        if ($("#ui_chkInfluentialScoreIs").is(":checked")) {
            if ($("#ui_txtInfluentialScore1").val().length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterInfluentialScore);
                $("#ui_txtInfluentialScore1").focus();
                return false;
            }
            else if ($("#ui_ddlInfluentialScoreIs").val() == "3" && $("#ui_txtInfluentialScore2").val().length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterInfluentialScoreRange);
                $("#ui_txtInfluentialScore2").focus();
                return false;
            }
            else if ($("#ui_ddlInfluentialScoreIs").val() == "3" && parseInt($("#ui_txtInfluentialScore1").val()) > parseInt($("#ui_txtInfluentialScore2").val())) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterCorrectInfluentialScorerange);
                $("#ui_txtInfluentialScore2").focus();
                return false;
            }
        }

        if ($("#ui_chkIndustryIs").is(":checked")) {
            if ($("#ui_txtIndustryIs").val().length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterProspectProfessionRange);
                $("#ui_txtIndustryIs").focus();
                return false;
            }
        }

        if ($("#ui_chkProspectLoyaltyIs").is(":checked")) {
            if ($("#ui_txtProspectLoyalty1").val().length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterLoyaltyScore);
                $("#ui_txtProspectLoyalty1").focus();
                return false;
            }
            else if ($("#ui_ddlProspectLoyaltyIs").val() == "3" && $("#ui_txtProspectLoyalty2").val().length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterLoyaltyRange);
                $("#ui_txtProspectLoyalty2").focus();

                return false;
            }
            else if ($("#ui_ddlProspectLoyaltyIs").val() == "3" && parseInt($("#ui_txtProspectLoyalty1").val()) > parseInt($("#ui_txtProspectLoyalty2").val())) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterCorrectloyaltyRange);
                $("#ui_txtProspectLoyalty2").focus();
                return false;
            }
        }

        if ($("#ui_chkRFMSScoreIs").is(":checked")) {
            if ($("#ui_txtRFMSScore1").val().length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterRFMSScore);
                $("#ui_txtRFMSScore1").focus();
                return false;
            }
            else if ($("#ui_ddlRFMSScore").val() == "3" && $("#ui_txtRFMSScore2").val().length == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterRFMSRange);
                $("#ui_txtRFMSScore2").focus();
                return false;
            }
            else if ($("#ui_ddlRFMSScore").val() == "3" && parseInt($("#ui_txtRFMSScore1").val()) > parseInt($("#ui_txtRFMSScore2").val())) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterCorrectRFMSRange);
                $("#ui_txtRFMSScore2").focus();
                return false;
            }
        }

        if ($("#ui_chkDOBIs").is(":checked")) {

            if ($("#chk_IgnoreDOB").is(":checked") && $("#ui_ddlIgnoreDOB").get(0).selectedIndex == 0) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterIgnoreDOB);
                $("#ui_ddlIgnoreDOB").focus();
                return false;
            }

            if ($("#ui_rdbtnDates").is(":checked")) {
                if ($("#txtFromDate").val().length == 0) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterFromrange);
                    $("#txtFromDate").focus();
                    return false;
                }
                if ($("#txtToDate").val().length == 0) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterToDate);
                    $("#txtToDate").focus();
                    return false;
                }

                var dates = $("#txtFromDate").val().split('-');
                var FromDate = new Date(dates[0], dates[1] - 1, dates[2]);

                var dates = $("#txtToDate").val().split('-');
                var ToDate = new Date(dates[0], dates[1] - 1, dates[2]);

                if (FromDate.getTime() > ToDate.getTime()) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterCorrectDateRange);
                    $("#txtToDate").focus();
                    return false;
                }
            }

            if ($("#ui_rdbtnDayDiff").is(":checked")) {
                if ($("#ui_txtDOBNoofDays").val() != null && $("#ui_txtDOBNoofDays").val() == 0) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterCorrectDays);
                    $("#ui_txtDOBNoofDays").focus();
                    return false;
                }

                if (($("#txtDiffDate").val().length == 0) || ($("#ui_txtDOBNoofDays").val().length == 0)) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterCorrectDateValue);
                    $("#txtDiffDate").focus();
                    return false;
                }
            }
        }
        return true;
    },

    BindAudienceData: function () {
        if (ruleConditions.IsLead > -1) {
            $("input:radio[name='VisitorType'][value='" + ruleConditions.IsLead + "']").prop('checked', true);
            $("#ui_chkVisitorType").click();
        }

        if (ruleConditions.IsBelong > 0) {
            $("input:radio[name='BelongsGroup'][value='" + ruleConditions.IsBelong + "']").prop('checked', true);

            var groupsList = ruleConditions.BelongsToGroup.split("@#");
            for (var i = 0; i < groupsList.length; i++) {
                var idAndLabel = groupsList[i].split("-");
                var data = new Array();
                data["item"] = new Array();
                data.item.value = idAndLabel[0];
                data.item.label = idAndLabel[1];

                FormUtil.AppendSelected("ui_txtGroups_values", data, "group");
            }
            $("#ui_chkSegment").click();
        }
    },
    BindBehaviorData: function () {

        if (ruleConditions.BehavioralScoreCondition > 0) {
            $("#ui_ddlBehavioralScoreRange").val(ruleConditions.BehavioralScoreCondition);
            $("#ui_VisitorScore1").val(ruleConditions.BehavioralScore1);
            if ($("#ui_ddlBehavioralScoreRange").val() == "3") {
                $("#ui_VisitorScore2").val(ruleConditions.BehavioralScore2);
                $("#ui_ddlBehavioralScoreRange").change();
            }
            $("#ui_chkBehavioralScore").click();
        }

        if (ruleConditions.SessionIs > 0) {
            $("#ui_txtSession").val(ruleConditions.SessionIs);

            if (ruleConditions.SessionConditionIsTrueOrIsFalse == false)
                $("#ui_radSessionIsFalse").prop('checked', true);
            else
                $("#ui_radSessionIsTrue").prop('checked', true);

            $("#ui_chkSessionIs").click();
        }

        if (ruleConditions.PageDepthIs > 0) {
            $("#ui_txtPageDepthIs").val(ruleConditions.PageDepthIs);

            if (ruleConditions.PageDepthConditionIsTrueOrIsFalse == false)
                $("#ui_radPageDepthIsFalse").prop('checked', true);
            else
                $("#ui_radPageDepthIsTrue").prop('checked', true);

            $("#ui_chkPageDepthIs").click();
        }

        if (ruleConditions.NPageVisited > 0) {
            $("#ui_txtPageViewIs").val(ruleConditions.NPageVisited);

            if (ruleConditions.PageViewConditionIsTrueOrIsFalse == false)
                $("#ui_radPageViewIsFalse").prop('checked', true);
            else
                $("#ui_radPageViewIsTrue").prop('checked', true);

            $("#ui_chkPageViewIs").click();
        }

        if (ruleConditions.FrequencyIs > 0) {
            $("#ui_txtFrequencyIs").val(ruleConditions.FrequencyIs);

            if (ruleConditions.FrequencyConditionIsTrueOrIsFalse == false)
                $("#ui_radFrequencyIsFalse").prop('checked', true);
            else
                $("#ui_radFrequencyIsTrue").prop('checked', true);

            $("#ui_chkFrequencyIs").click();
        }

        if (ruleConditions.PageUrl != null && ruleConditions.PageUrl.length > 0) {
            $("#ui_txtPageUrl").val(ruleConditions.PageUrl);
            $("#ui_chkOnPageUrl").click();

            if (ruleConditions.IsPageUrlContainsCondition == 1)
                $("#ui_PageUrlCheckContains").prop("checked", true);
        }

        if (ruleConditions.IsReferrer > 0) {

            $("#ui_chkSourceIs").click();

            if (ruleConditions.IsReferrer == 1) {
                $("#ui_radSourceIsDirect").prop("checked", true);
            }
            else if (ruleConditions.IsReferrer == 2) {

                $("#ui_radSourceIsReferrer").prop("checked", true);
                $("#dvSoureReferrer").show();
                $("#ui_txtSourceIs").val(ruleConditions.ReferrerUrl);

                if (ruleConditions.CheckSourceDomainOnly == 1)
                    $("#ui_chkCheckSourceDomainOnly").click();

                $("#dv_txtSoureReferrer").show();
                $("#dv_chkSoureReferrer").show();
            }
        }

        if (ruleConditions.IsMailIsRespondent == 1) {
            if (ruleConditions.MailRespondentConditionIsTrueOrIsFalse == false) {
                $("#ui_radMailRespondentIsFalse").prop('checked', true);
                $("#ui_MailResponsedSpan").hide();
            }
            else {
                $("#ui_radMailRespondentIsTrue").prop('checked', true);
                $("#ui_MailResponsedSpan").show();
            }

            if (ruleConditions.IsMailRespondentClickCondition)
                $("#ui_chkMailRespondentClick").prop('checked', true);
            else
                $("#ui_chkMailRespondentClick").prop('checked', false);

            var MailTemplateIdValues = [];

            if (ruleConditions.MailRespondentTemplates != undefined && ruleConditions.MailRespondentTemplates != null && ruleConditions.MailRespondentTemplates != "") {
                var mailvalues = ruleConditions.MailRespondentTemplates.split(",");
                for (var i = 0; i < mailvalues.length; i++) {
                    MailTemplateIdValues.push(mailvalues[i]);
                }
                $("#ui_ddlMailRespondentTemplate").val(MailTemplateIdValues).trigger("change");
            }

            $("#ui_chkIsMailRespondent").click();
        }

        if (ruleConditions.IsSmsIsRespondent == 1) {
            if (ruleConditions.SmsRespondentConditionIsTrueOrIsFalse == false)
                $("#ui_radSmsRespondentIsFalse").prop('checked', true);
            else
                $("#ui_radSmsRespondentIsTrue").prop('checked', true);

            var SmsTemplateIdValues = [];

            if (ruleConditions.SmsRespondentTemplates != undefined && ruleConditions.SmsRespondentTemplates != null && ruleConditions.SmsRespondentTemplates != "") {
                var smsvalues = ruleConditions.SmsRespondentTemplates.split(",");
                for (var i = 0; i < smsvalues.length; i++) {
                    SmsTemplateIdValues.push(smsvalues[i]);
                }
                $("#ui_ddlSmsRespondentTemplate").val(SmsTemplateIdValues).trigger("change");
            }

            $("#ui_chkIsSmsRespondent").click();
        }

        if (ruleConditions.SearchString != null && ruleConditions.SearchString.length > 0) {
            $("#ui_txtSearchKeyword").val(ruleConditions.SearchString);
            $("#ui_chkSearchKeywordIs").click();
        }

        if (ruleConditions.Country != null && ruleConditions.Country.length > 0) {
            var countryList = ruleConditions.Country.split("@$");

            var CountryIdValues = [];

            for (var i = 0; i < countryList.length; i++) {
                CountryIdValues.push(countryList[i]);
            }

            $("#ui_txtCountry").val(CountryIdValues).trigger("change");

            if (ruleConditions.CountryConditionIsTrueOrIsFalse == false)
                $("#ui_radCountryIsFalse").prop('checked', true);
            else
                $("#ui_radCountryIsTrue").prop('checked', true);

            $("#ui_chkCountryIs").click();
        }

        if (ruleConditions.City != null && ruleConditions.City.length > 0) {
            var cityList = ruleConditions.City.split("@$");
            for (var i = 0; i < cityList.length; i++) {

                var data = new Array();
                data["item"] = new Array();
                data.item.value = cityList[i];
                data.item.label = cityList[i];
                FormUtil.AppendSelected("ui_txtCity_values", data, "");
            }

            if (ruleConditions.CityConditionIsTrueOrIsFalse == false)
                $("#ui_radCityIsFalse").prop('checked', true);
            else
                $("#ui_radCityIsTrue").prop('checked', true);

            $("#ui_chkCityIs").click();
        }

        if (ruleConditions.AlreadyVisitedPages != null && ruleConditions.AlreadyVisitedPages.length > 0) {
            $("#ui_txtAlreadyVisitedPageUrls").val(ruleConditions.AlreadyVisitedPages);
            $("#ui_chkAlreadyVisitedPages").click();

            if (ruleConditions.AlreadyVisitedPagesOverAllOrSessionWise == 0)
                $("#ui_radPageViewOverAll").prop('checked', true);
            else
                $("#ui_radPageViewSessionWise").prop('checked', true);
        }

        if (ruleConditions.NotAlreadyVisitedPages != null && ruleConditions.NotAlreadyVisitedPages.length > 0) {
            $("#ui_txtNotAlreadyVisitedPageUrls").val(ruleConditions.NotAlreadyVisitedPages);
            $("#ui_chkNotAlreadyVisitedPages").click();

            if (ruleConditions.NotAlreadyVisitedPagesOverAllOrSessionWise == 0)
                $("#ui_radNotPageViewOverAll").prop('checked', true);
            else
                $("#ui_radNotPageViewSessionWise").prop('checked', true);
        }

        if (ruleConditions.OverAllTimeSpentInSite > 0) {
            $("#ui_txtTimeSpentInSite").val(ruleConditions.OverAllTimeSpentInSite);
            $("#ui_chkTimeSpentInSite").click();
        }

        if (ruleConditions.IsMobileDevice > 0) {

            if (ruleConditions.IsMobileDevice == 1)
                $("#ui_radMobileDeviceConditionIsTrue").prop('checked', true);
            else
                $("#ui_radMobileDeviceConditionIsFalse").prop('checked', true);

            $("#ui_chkIsAndriodMobile").click();
        }
    },
    BindInteractionData: function () {

        if (ruleConditions.IsClickedSpecificButtons != null && ruleConditions.IsClickedSpecificButtons.length > 0) {

            var clickedTags = ruleConditions.IsClickedSpecificButtons.split(",");
            for (var i = 0; i < clickedTags.length; i++) {

                var idAndLabel = clickedTags[i]
                var data = new Array();
                data["item"] = new Array();
                data.item.value = idAndLabel;
                data.item.label = idAndLabel;
                FormUtil.AppendSelected("ui_txtClickButton_values", data, "clkBtn");
            }
            $("#ui_chkClickedButton").click();
        }

        if (ruleConditions.IsNotClickedSpecificButtons != null && ruleConditions.IsNotClickedSpecificButtons.length > 0) {

            var clickedTags = ruleConditions.IsNotClickedSpecificButtons.split(",");
            for (var i = 0; i < clickedTags.length; i++) {

                var idAndLabel = clickedTags[i]
                var data = new Array();
                data["item"] = new Array();
                data.item.value = idAndLabel;
                data.item.label = idAndLabel;
                FormUtil.AppendSelected("ui_txtNotClickButton_values", data, "clkBtn");
            }
            $("#ui_chkNotClickedButton").click();
        }

        if (ruleConditions.ClickedPriceRangeProduct != null && ruleConditions.ClickedPriceRangeProduct.length > 0) {

            var products = ruleConditions.ClickedPriceRangeProduct.split(",");
            for (var i = 0; i < products.length; i++) {
                var idAndLabel = products[i]
                var data = new Array();
                data["item"] = new Array();
                data.item.value = idAndLabel
                data.item.label = idAndLabel

                FormUtil.AppendSelected("ui_txtPriceRangeProducts_values", data, "ClickProduct");
            }
            $("#ui_chkClickedPriceRange").click();
        }

        if (ruleConditions.IsVisitorRespondedChat == true)
            $("#ui_chkRespondedInChat").click();

        if (ruleConditions.MailCampignResponsiveStage > 0) {
            $("#ui_ddlMailScore").val(ruleConditions.MailCampignResponsiveStage);
            $("#ui_chkMailResponseStage").click();
        }

        if (ruleConditions.IsRespondedForm > 0) {
            $("#ui_ddlRespondedFroms").select2().val(ruleConditions.IsRespondedForm).change();
            $("#ui_chkRespondedForm").click();
        }

        if (ruleConditions.IsNotRespondedForm > 0) {
            $("#ui_ddlNotRespondedFroms").select2().val(ruleConditions.IsNotRespondedForm).change();
            $("#ui_chkNotRespondedForm").click();
        }

        if (ruleConditions.DependencyFormId > 0) {
            $("#ui_ddlAnswerDependencyFroms").select2().val(ruleConditions.DependencyFormId).change();
            $("#ui_ddlAnswerCondition").val(ruleConditions.DependencyFormCondition)
            $("#ui_txtAnswerCondition1").val(ruleConditions.DependencyFormAnswer1);

            if ($("#ui_ddlAnswerCondition").val() == "3") {
                $("#ui_txtAnswerCondition2").val(ruleConditions.DependencyFormAnswer2);
                $("#ui_ddlAnswerCondition").change();
            }
            $("#ui_chkAnswerDependencyForm").click();
        }

        if (ruleConditions.CloseCount > 0) {
            $("#ui_txtClosedNTimes").val(ruleConditions.CloseCount);

            if (ruleConditions.CloseCountSessionWiseOrOverAll == 1)
                $("#ui_radCloseCountOverAll").prop('checked', true);
            else
                $("#ui_radCloseCountSessionWise").prop('checked', true);

            $("#ui_chkClosedNTimes").click();
        }

        if (ruleConditions.AddedProductsToCart != null && ruleConditions.AddedProductsToCart.length > 0) {

            var products = ruleConditions.AddedProductsToCart.split("@#");
            for (var i = 0; i < products.length; i++) {
                var idAndLabel = products[i].split("-");
                var data = new Array();
                data["item"] = new Array();
                data.item.value = idAndLabel[0];
                data.item.label = idAndLabel[1];
                FormUtil.AppendSelected("ui_txtAddedToCartProducts_values", data, "AddedToCart");
            }
            $("#ui_chkAddedToCart").click();
        }

        if (ruleConditions.ViewedButNotAddedProductsToCart != null && ruleConditions.ViewedButNotAddedProductsToCart.length > 0) {

            var products = ruleConditions.ViewedButNotAddedProductsToCart.split("@#");
            for (var i = 0; i < products.length; i++) {
                var idAndLabel = products[i].split("-");
                var data = new Array();
                data["item"] = new Array();
                data.item.value = idAndLabel[0];
                data.item.label = idAndLabel[1];

                FormUtil.AppendSelected("ui_txtViewedNotAddedToCartProducts_values", data, "NotAddedToCart");
            }
            $("#ui_chkViewedNotAddedToCart").click();
        }

        if (ruleConditions.DroppedProductsFromCart != null && ruleConditions.DroppedProductsFromCart.length > 0) {

            var products = ruleConditions.DroppedProductsFromCart.split("@#");
            for (var i = 0; i < products.length; i++) {
                var idAndLabel = products[i].split("-");
                var data = new Array();
                data["item"] = new Array();
                data.item.value = idAndLabel[0];
                data.item.label = idAndLabel[1];

                FormUtil.AppendSelected("ui_txtDropedFromCartProducts_values", data, "DropFromCart");
            }
            $("#ui_chkDropedFromCart").click();
        }

        if (ruleConditions.PurchasedProducts != null && ruleConditions.PurchasedProducts.length > 0) {
            var products = ruleConditions.PurchasedProducts.split("@#");
            for (var i = 0; i < products.length; i++) {
                var idAndLabel = products[i].split("-");
                var data = new Array();
                data["item"] = new Array();
                data.item.value = idAndLabel[0];
                data.item.label = idAndLabel[1];

                FormUtil.AppendSelected("ui_txtCustomerPurchasedProducts_values", data, "Purchase");
            }
            $("#ui_chkCustomerPurchased").click();
        }

        if (ruleConditions.NotPurchasedProducts != null && ruleConditions.NotPurchasedProducts.length > 0) {

            var products = ruleConditions.NotPurchasedProducts.split("@#");
            for (var i = 0; i < products.length; i++) {
                var idAndLabel = products[i].split("-");
                var data = new Array();
                data["item"] = new Array();
                data.item.value = idAndLabel[0];
                data.item.label = idAndLabel[1];
                FormUtil.AppendSelected("ui_txtCustomerNotPurchasedProducts_values", data, "NotPurchase");
            }
            $("#ui_chkCustomerNotPurchased").click();
        }

        if (ruleConditions.CustomerTotalPurchaseCondition > 0) {
            $("#ui_ddlCustomerTotalPurchase").val(ruleConditions.CustomerTotalPurchaseCondition);
            $("#ui_txtCustomerTotalPurchase1").val(ruleConditions.CustomerTotalPurchase1);
            if ($("#ui_ddlCustomerTotalPurchase").val() == "3") {
                $("#ui_txtCustomerTotalPurchase2").val(ruleConditions.CustomerTotalPurchase2);
                $("#ui_ddlCustomerTotalPurchase").change();
            }
            $("#ui_chkTotalPurchaseIs").click();
        }

        if (ruleConditions.CustomerCurrentValueCondition > 0) {
            $("#ui_ddlCustomerCurrentValue").val(ruleConditions.CustomerCurrentValueCondition);
            $("#ui_txtCustomerCurrentValue1").val(ruleConditions.CustomerCurrentValue1);
            if ($("#ui_ddlCustomerCurrentValue").val() == "3") {
                $("#ui_txtCustomerCurrentValue2").val(ruleConditions.CustomerCurrentValue2);
                $("#ui_ddlCustomerCurrentValue").change();
            }
            $("#ui_chkCustomerCurrectValue").click();
        }

        if (ruleConditions.LastPurchaseIntervalCondition > 0) {
            $("#ui_ddlLastPurchaseCondition").val(ruleConditions.LastPurchaseIntervalCondition);
            $("#ui_txtLastPurchaseRange1").val(ruleConditions.LastPurchaseIntervalRange1);
            if ($("#ui_ddlLastPurchaseCondition").val() == "3") {
                $("#ui_txtLastPurchaseRange2").val(ruleConditions.LastPurchaseIntervalRange2);
                $("#ui_ddlLastPurchaseCondition").change();
            }
            $("#ui_chkCustomerLastPurchase").click();
        }

        if (ruleConditions.AddedProductsCategoriesToCart != null && ruleConditions.AddedProductsCategoriesToCart.length > 0) {

            var products = ruleConditions.AddedProductsCategoriesToCart.split("|");
            for (var i = 0; i < products.length; i++) {
                var data = new Array();
                data["item"] = new Array();
                data.item.value = products[i];
                data.item.label = products[i];

                FormUtil.AppendSelected("ui_txtAddedToCartProductsCategories_values", data, "CategoriesAddedToCart");
            }
            $("#ui_chkCategoriesAddedToCart").click();
        }

        if (ruleConditions.NotAddedProductsCategoriesToCart != null && ruleConditions.NotAddedProductsCategoriesToCart.length > 0) {

            var products = ruleConditions.NotAddedProductsCategoriesToCart.split("|");
            for (var i = 0; i < products.length; i++) {
                var data = new Array();
                data["item"] = new Array();
                data.item.value = products[i];
                data.item.label = products[i];

                FormUtil.AppendSelected("ui_txtNotAddedToCartProductsCategories_values", data, "CategoriesnotAddedToCart");
            }

            $("#ui_chkCategoriesNotAddedToCart").click();
        }

        if (ruleConditions.AddedProductsSubCategoriesToCart != null && ruleConditions.AddedProductsSubCategoriesToCart.length > 0) {

            var products = ruleConditions.AddedProductsSubCategoriesToCart.split("|");
            for (var i = 0; i < products.length; i++) {
                var data = new Array();
                data["item"] = new Array();
                data.item.value = products[i];
                data.item.label = products[i];

                FormUtil.AppendSelected("ui_txtAddedToCartProductsSubCategories_values", data, "SubCategoriesAddedToCart");
            }
            $("#ui_chkSubCategoriesAddedToCart").click();
        }

        if (ruleConditions.NotAddedProductsSubCategoriesToCart != null && ruleConditions.NotAddedProductsSubCategoriesToCart.length > 0) {

            var products = ruleConditions.NotAddedProductsSubCategoriesToCart.split("|");
            for (var i = 0; i < products.length; i++) {
                var data = new Array();
                data["item"] = new Array();
                data.item.value = products[i];
                data.item.label = products[i];

                FormUtil.AppendSelected("ui_txtNotAddedToCartProductsSubCategories_values", data, "SubCategoriesnotAddedToCart");
            }
            $("#ui_chkSubCategoriesNotAddedToCart").click();
        }
    },
    BindInteractionEventData: function () {

        if (ruleConditions.ImpressionEventForFormId > -1) {
            $("#ui_ddlFormImpression").select2().val(ruleConditions.ImpressionEventForFormId).change();
            $("#ui_txtFormImpressionCount").val(ruleConditions.ImpressionEventCountCondition);
            $("#ui_chkFormImpression").click();
        }

        if (ruleConditions.CloseEventForFormId > -1) {
            $("#ui_ddlFormCloseEvent").select2().val(ruleConditions.CloseEventForFormId).change();
            $("#ui_txtFormCloseEventCount").val(ruleConditions.CloseEventCountCondition);
            $("#ui_chkFormCloseEvent").click();
        }

        if (ruleConditions.ResponsesEventForFormId > -1) {
            $("#ui_ddlResponseCountEvent").select2().val(ruleConditions.ResponsesEventForFormId).change();
            $("#ui_txtResponseCountEventCount").val(ruleConditions.ResponsesEventCountCondition);
            $("#ui_chkResponseCountEvent").click();
        }

        if (ruleConditions.ShowFormOnlyNthTime > 0) {
            $("#ui_txtShowFormAtNTime").val(ruleConditions.ShowFormOnlyNthTime);
            $("#ui_chkShowFormAtNTime").click();
        }
    },
    BindProfileData: function () {

        if (ruleConditions.OnlineSentimentIs > 0) {
            $("#ui_ddlOnlineSentimentIs").val(ruleConditions.OnlineSentimentIs);
            $("#ui_chkOnlineSentimentIs").click();
        }

        if (ruleConditions.SocialStatusIs > 0) {
            $("#ui_ddlSocialStatus").val(ruleConditions.SocialStatusIs);
            $("#ui_chkSocialStatusIs").click();
        }

        if (ruleConditions.InfluentialScoreCondition > 0) {
            $("#ui_ddlInfluentialScoreIs").val(ruleConditions.InfluentialScoreCondition);
            $("#ui_txtInfluentialScore1").val(ruleConditions.InfluentialScore1);
            if ($("#ui_ddlInfluentialScoreIs").val() == "3") {
                $("#ui_txtInfluentialScore2").val(ruleConditions.InfluentialScore2);
                $("#ui_ddlInfluentialScoreIs").change();
            }
            $("#ui_chkInfluentialScoreIs").click();
        }

        if (ruleConditions.OfflineSentimentIs > 0) {
            $("#ui_ddlOfflineSentiment").val(ruleConditions.OfflineSentimentIs);
            $("#ui_chkOfflineSentimentIs").click();
        }

        if (ruleConditions.ProductRatingIs > 0) {
            $("#ui_ddlRating").val(ruleConditions.ProductRatingIs);
            $("#ui_chkProductRatingIs").click();
        }

        if (ruleConditions.NurtureStatusIs > -1) {
            $("#ui_ddlProspectStatus").val(ruleConditions.NurtureStatusIs).change();
            $("#ui_chkProspectStatusIs").click();
        }

        if (ruleConditions.GenderIs != null && ruleConditions.GenderIs.length > 0) {
            $("#ui_ddlProspectGender").val(ruleConditions.GenderIs);
            $("#ui_chkProspectGenderIs").click();
        }

        if (ruleConditions.MaritalStatusIs != null && ruleConditions.MaritalStatusIs > 0) {
            $("#ui_ddlMartialStatus").val(ruleConditions.MaritalStatusIs);
            $("#ui_chkMartialStatus").click();
        }

        if (ruleConditions.ProfessionIs != null && ruleConditions.ProfessionIs.length > 0) {
            $("#ui_txtIndustryIs").val(ruleConditions.ProfessionIs);
            $("#ui_chkIndustryIs").click();
        }

        if (ruleConditions.NotConnectedSocially > 0) {
            $("#ui_ddlConnectedSocially").val(ruleConditions.NotConnectedSocially);
            $("#ui_chkIsConnectedSocially").click();
        }

        if (ruleConditions.LoyaltyPointsCondition > 0) {
            $("#ui_ddlProspectLoyaltyIs").val(ruleConditions.LoyaltyPointsCondition);
            $("#ui_txtProspectLoyalty1").val(ruleConditions.LoyaltyPointsRange1);
            if ($("#ui_ddlProspectLoyaltyIs").val() == "3") {
                $("#ui_txtProspectLoyalty2").val(ruleConditions.LoyaltyPointsRange2);
                $("#ui_ddlProspectLoyaltyIs").change();
            }
            $("#ui_chkProspectLoyaltyIs").click();
        }

        if (ruleConditions.RFMSScoreRangeCondition > 0) {
            $("#ui_ddlRFMSScore").val(ruleConditions.RFMSScoreRangeCondition);
            $("#ui_txtRFMSScore1").val(ruleConditions.RFMSScoreRange1);
            if ($("#ui_ddlRFMSScore").val() == "3") {
                $("#ui_txtRFMSScore2").val(ruleConditions.RFMSScoreRange2);
                $("#ui_ddlRFMSScore").change();
            }
            $("#ui_chkRFMSScoreIs").click();
        }

        if (ruleConditions.IsBirthDay > 0) {

            if (ruleConditions.IsDOBTodayOrMonth == 0) {
                $("#ui_rdbtnDay").prop('checked', true);
            }
            else if (ruleConditions.IsDOBTodayOrMonth == 1) {
                $("#ui_rdbtnMonth").prop('checked', true);
                $("#ui_rdbtnMonth").click();
            }
            else if (ruleConditions.IsDOBTodayOrMonth == 2 && ruleConditions.DOBFromDate != null && ruleConditions.DOBFromDate != "" && ruleConditions.DOBFromDate.length > 0 && ruleConditions.DOBToDate != null && ruleConditions.DOBToDate != "" && ruleConditions.DOBToDate.length > 0) {
                $("#ui_rdbtnDates").prop('checked', true);
                $("#ui_rdbtnDates").click();
                var FromDate = GetJavaScriptDateObj(ruleConditions.DOBFromDate)
                FromDate = FromDate.getFullYear() + "-" + ((FromDate.getMonth() + 1).toString().length == 1 ? "0" + (FromDate.getMonth() + 1) : (FromDate.getMonth() + 1)) + "-" + (FromDate.getDate().toString().length == 1 ? "0" + FromDate.getDate() : FromDate.getDate());
                $("#txtFromDate").val(FromDate);
                var ToDate = GetJavaScriptDateObj(ruleConditions.DOBToDate)
                ToDate = ToDate.getFullYear() + "-" + ((ToDate.getMonth() + 1).toString().length == 1 ? "0" + (ToDate.getMonth() + 1) : (ToDate.getMonth() + 1)) + "-" + (ToDate.getDate().toString().length == 1 ? "0" + ToDate.getDate() : ToDate.getDate());
                $("#txtToDate").val(ToDate);
            }
            else if (ruleConditions.IsDOBTodayOrMonth == 3 && ruleConditions.DOBDaysDiffernce != null && ruleConditions.DOBDaysDiffernce != "" && ruleConditions.DOBDaysDiffernce != undefined && ruleConditions.DOBDaysDiffernce != 0) {
                $("#ui_rdbtnDayDiff").prop('checked', true);
                $("#ui_rdbtnDayDiff").click();
                var DiffDate = FormUtil.GetDifferenceDateValue(new Date(), ruleConditions.DOBDaysDiffernce)
                $("#ui_txtDOBNoofDays").val(ruleConditions.DOBDaysDiffernce);
                $("#txtDiffDate").val(DiffDate);
            }

            if (ruleConditions.IsDOBIgnored == true) {
                $("#chk_IgnoreDOB").prop('checked', true);
                $("#ui_ddlIgnoreDOB").val(ruleConditions.IsDOBIgnoreCondition);
            }

            $("#dv_IgnoreCondition").show();
            $("#ui_chkDOBIs").click();
        }
    },

    GetRulesData: function () {
        FormUtil.AssignAudienceData();
        FormUtil.AssignBehaviorData();
        FormUtil.AssignInteractionData();
        FormUtil.AssignInteractionEventData();
        FormUtil.AssignProfileData();
    },
    AssignAudienceData: function () {

        if ($("#ui_chkVisitorType").is(":checked"))
            ruleConditions.IsLead = $("input:radio[name='VisitorType']:checked").val();
        else
            ruleConditions.IsLead = -1;

        if ($("#ui_chkSegment").is(":checked")) {
            ruleConditions.IsBelong = $("input:radio[name='BelongsGroup']:checked").val();
            ruleConditions.BelongsToGroup = FormUtil.GetListDataBySpanId($("#ui_txtGroups_values"), "value", "").join(",");
        }
        else {
            ruleConditions.IsBelong = 0;
            ruleConditions.BelongsToGroup = "";
        }
        return ruleConditions;
    },
    AssignBehaviorData: function () {

        if ($("#ui_chkBehavioralScore").is(":checked")) {
            ruleConditions.BehavioralScoreCondition = $("#ui_ddlBehavioralScoreRange").val();
            ruleConditions.BehavioralScore1 = $("#ui_VisitorScore1").val();

            if ($("#ui_ddlBehavioralScoreRange").val() == "3")
                ruleConditions.BehavioralScore2 = $("#ui_VisitorScore2").val();
            else
                ruleConditions.BehavioralScore2 = 0;
        }
        else {
            ruleConditions.BehavioralScoreCondition = ruleConditions.BehavioralScore1 = ruleConditions.BehavioralScore2 = 0;
        }

        if ($("#ui_chkSessionIs").is(":checked")) {
            ruleConditions.SessionIs = $("#ui_txtSession").val();

            if ($("#ui_radSessionIsFalse").is(":checked"))
                ruleConditions.SessionConditionIsTrueOrIsFalse = false;
            else
                ruleConditions.SessionConditionIsTrueOrIsFalse = true;
        }
        else {
            ruleConditions.SessionIs = 0;
            ruleConditions.SessionConditionIsTrueOrIsFalse = true;
        }

        if ($("#ui_chkPageDepthIs").is(":checked")) {
            ruleConditions.PageDepthIs = $("#ui_txtPageDepthIs").val();

            if ($("#ui_radPageDepthIsFalse").is(":checked"))
                ruleConditions.PageDepthConditionIsTrueOrIsFalse = false;
            else
                ruleConditions.PageDepthConditionIsTrueOrIsFalse = true
        }
        else {
            ruleConditions.PageDepthIs = 0;
        }

        if ($("#ui_chkPageViewIs").is(":checked")) {
            ruleConditions.NPageVisited = $("#ui_txtPageViewIs").val();

            if ($("#ui_radPageViewIsFalse").is(":checked"))
                ruleConditions.PageViewConditionIsTrueOrIsFalse = false;
            else
                ruleConditions.PageViewConditionIsTrueOrIsFalse = true;
        }
        else {
            ruleConditions.NPageVisited = 0;
        }

        if ($("#ui_chkFrequencyIs").is(":checked")) {
            ruleConditions.FrequencyIs = $("#ui_txtFrequencyIs").val();
            if ($("#ui_radFrequencyIsFalse").is(":checked"))
                ruleConditions.FrequencyConditionIsTrueOrIsFalse = false;
            else
                ruleConditions.FrequencyConditionIsTrueOrIsFalse = true;
        }
        else {
            ruleConditions.FrequencyIs = 0;
        }

        if ($("#ui_chkOnPageUrl").is(":checked")) {
            ruleConditions.PageUrl = $("#ui_txtPageUrl").val();

            if ($("#ui_PageUrlCheckContains").is(":checked"))
                ruleConditions.IsPageUrlContainsCondition = 1;
            else
                ruleConditions.IsPageUrlContainsCondition = 0;
        }
        else {
            ruleConditions.PageUrl = "";
        }

        if ($("#ui_chkSourceIs").is(":checked")) {
            if ($("#ui_radSourceIsDirect").is(":checked")) {
                ruleConditions.IsReferrer = 1;
            }
            else if ($("#ui_radSourceIsReferrer").is(":checked")) {
                ruleConditions.IsReferrer = 2
                ruleConditions.ReferrerUrl = $("#ui_txtSourceIs").val();
                if ($("#ui_chkCheckSourceDomainOnly").is(":checked"))
                    ruleConditions.CheckSourceDomainOnly = true;
            }
        }
        else {
            ruleConditions.IsReferrer = 0;
            ruleConditions.CheckSourceDomainOnly = false;
        }

        if ($("#ui_chkIsMailRespondent").is(":checked")) {
            ruleConditions.IsMailIsRespondent = 1;

            if ($("#ui_radMailRespondentIsFalse").is(":checked"))
                ruleConditions.MailRespondentConditionIsTrueOrIsFalse = false;
            else
                ruleConditions.MailRespondentConditionIsTrueOrIsFalse = true;

            var SelectedTemplateIdValues = [];
            $.each($('#ui_ddlMailRespondentTemplate').select2('data'), function () {
                SelectedTemplateIdValues.push($(this)[0].id);
            });

            ruleConditions.MailRespondentTemplates = SelectedTemplateIdValues.join();

            if ($("#ui_chkMailRespondentClick").is(":checked"))
                ruleConditions.IsMailRespondentClickCondition = 1;
            else
                ruleConditions.IsMailRespondentClickCondition = 0;
        }
        else {
            ruleConditions.IsMailIsRespondent = 0;
            ruleConditions.MailRespondentTemplates = 0;
            ruleConditions.IsMailRespondentClickCondition = 0;
        }

        if ($("#ui_chkIsSmsRespondent").is(":checked")) {
            ruleConditions.IsSmsIsRespondent = 1;

            if ($("#ui_radSmsRespondentIsFalse").is(":checked"))
                ruleConditions.SmsRespondentConditionIsTrueOrIsFalse = false;
            else
                ruleConditions.SmsRespondentConditionIsTrueOrIsFalse = true;

            var SelectedSmsTemplateIds = [];
            $.each($('#ui_ddlSmsRespondentTemplate').select2('data'), function () {
                SelectedSmsTemplateIds.push($(this)[0].id);
            });
            ruleConditions.SmsRespondentTemplates = SelectedSmsTemplateIds.join();
        }
        else {
            ruleConditions.IsSmsIsRespondent = 0;
            ruleConditions.SmsRespondentTemplates = 0;
        }

        if ($("#ui_chkSearchKeywordIs").is(":checked"))
            ruleConditions.SearchString = $("#ui_txtSearchKeyword").val();
        else
            ruleConditions.SearchString = "";

        if ($("#ui_chkCountryIs").is(":checked")) {
            var CountryValues = [];
            $.each($('#ui_txtCountry').select2('data'), function () {
                CountryValues.push($(this)[0].text);
            });

            ruleConditions.Country = CountryValues.join("@$");

            if ($("#ui_radCountryIsFalse").is(":checked"))
                ruleConditions.CountryConditionIsTrueOrIsFalse = false;
            else
                ruleConditions.CountryConditionIsTrueOrIsFalse = true;
        }
        else {
            ruleConditions.Country = "";
        }

        if ($("#ui_chkCityIs").is(":checked")) {
            ruleConditions.City = FormUtil.GetListDataBySpanId($("#ui_txtCity_values"), "value", "").join("@$");
            if ($("#ui_radCityIsFalse").is(":checked"))
                ruleConditions.CityConditionIsTrueOrIsFalse = false;
            else
                ruleConditions.CityConditionIsTrueOrIsFalse = true;
        }
        else {
            ruleConditions.City = "";
        }

        if ($("#ui_chkAlreadyVisitedPages").is(":checked")) {
            ruleConditions.AlreadyVisitedPages = $("#ui_txtAlreadyVisitedPageUrls").val();

            if ($("#ui_radPageViewOverAll").is(":checked"))
                ruleConditions.AlreadyVisitedPagesOverAllOrSessionWise = false;
            else
                ruleConditions.AlreadyVisitedPagesOverAllOrSessionWise = true;
        }
        else {
            ruleConditions.AlreadyVisitedPages = "";
            ruleConditions.AlreadyVisitedPagesOverAllOrSessionWise = false;
        }

        if ($("#ui_chkNotAlreadyVisitedPages").is(":checked")) {
            ruleConditions.NotAlreadyVisitedPages = $("#ui_txtNotAlreadyVisitedPageUrls").val();

            if ($("#ui_radNotPageViewOverAll").is(":checked"))
                ruleConditions.NotAlreadyVisitedPagesOverAllOrSessionWise = false;
            else
                ruleConditions.NotAlreadyVisitedPagesOverAllOrSessionWise = true;
        }
        else {
            ruleConditions.NotAlreadyVisitedPages = "";
            ruleConditions.NotAlreadyVisitedPagesOverAllOrSessionWise = false;
        }

        if ($("#ui_chkTimeSpentInSite").is(":checked"))
            ruleConditions.OverAllTimeSpentInSite = $("#ui_txtTimeSpentInSite").val();
        else
            ruleConditions.OverAllTimeSpentInSite = 0;

        if ($("#ui_chkIsAndriodMobile").is(":checked")) {
            if ($("#ui_radMobileDeviceConditionIsTrue").is(":checked"))
                ruleConditions.IsMobileDevice = 1;
            else
                ruleConditions.IsMobileDevice = 2;
        }
        else {
            ruleConditions.IsMobileDevice = 0;
        }

        return ruleConditions;
    },
    AssignInteractionData: function () {

        if ($("#ui_chkClickedButton").is(":checked"))
            ruleConditions.IsClickedSpecificButtons = FormUtil.GetListDataBySpanId($("#ui_txtClickButton_values"), "value", "").join(",");
        else
            ruleConditions.IsClickedSpecificButtons = "";

        if ($("#ui_chkNotClickedButton").is(":checked"))
            ruleConditions.IsNotClickedSpecificButtons = FormUtil.GetListDataBySpanId($("#ui_txtNotClickButton_values"), "id", "clkNotBtn_").join(",");
        else
            ruleConditions.IsNotClickedSpecificButtons = "";

        if ($("#ui_chkClickedPriceRange").is(":checked"))
            ruleConditions.ClickedPriceRangeProduct = FormUtil.GetListDataBySpanId($("#ui_txtPriceRangeProducts_values"), "value", "").join(",");
        else
            ruleConditions.ClickedPriceRangeProduct = "";

        if ($("#ui_chkRespondedInChat").is(":checked"))
            ruleConditions.IsVisitorRespondedChat = 1;
        else
            ruleConditions.IsVisitorRespondedChat = 0;

        if ($("#ui_chkMailResponseStage").is(":checked"))
            ruleConditions.MailCampignResponsiveStage = $("#ui_ddlMailScore").val();
        else
            ruleConditions.MailCampignResponsiveStage = 0;

        if ($("#ui_chkRespondedForm").is(":checked"))
            ruleConditions.IsRespondedForm = $("#ui_ddlRespondedFroms").val();
        else
            ruleConditions.IsRespondedForm = 0;

        if ($("#ui_chkNotRespondedForm").is(":checked"))
            ruleConditions.IsNotRespondedForm = $("#ui_ddlNotRespondedFroms").val();
        else
            ruleConditions.IsNotRespondedForm = 0;

        if ($("#ui_chkAnswerDependencyForm").is(":checked")) {
            ruleConditions.DependencyFormId = $("#ui_ddlAnswerDependencyFroms").val();
            ruleConditions.DependencyFormField = $("input:radio[name='AnswerDependencyFieldOption']:checked").val();
            ruleConditions.DependencyFormAnswer1 = CleanText($("#ui_txtAnswerCondition1").val());
            ruleConditions.DependencyFormAnswer2 = CleanText($("#ui_txtAnswerCondition2").val());
            ruleConditions.DependencyFormCondition = $("#ui_ddlAnswerCondition").val();
        }
        else {
            ruleConditions.DependencyFormId = 0;
        }

        if ($("#ui_chkClosedNTimes").is(":checked")) {
            ruleConditions.CloseCount = $("#ui_txtClosedNTimes").val();
            ruleConditions.CloseCountSessionWiseOrOverAll = $("input:radio[name='CloseCountSessionWiseOrOverAll']:checked").val();
        }
        else {
            ruleConditions.CloseCount = 0;
        }

        if ($("#ui_chkAddedToCart").is(":checked"))
            ruleConditions.AddedProductsToCart = FormUtil.GetListDataBySpanId($("#ui_txtAddedToCartProducts_values"), "value", "").join(",");
        else
            ruleConditions.AddedProductsToCart = "";

        if ($("#ui_chkViewedNotAddedToCart").is(":checked"))
            ruleConditions.ViewedButNotAddedProductsToCart = FormUtil.GetListDataBySpanId($("#ui_txtViewedNotAddedToCartProducts_values"), "value", "").join(",");
        else
            ruleConditions.ViewedButNotAddedProductsToCart = "";

        if ($("#ui_chkDropedFromCart").is(":checked"))
            ruleConditions.DroppedProductsFromCart = FormUtil.GetListDataBySpanId($("#ui_txtDropedFromCartProducts_values"), "value", "").join(",");
        else
            ruleConditions.DroppedProductsFromCart = "";

        if ($("#ui_chkCustomerPurchased").is(":checked"))
            ruleConditions.PurchasedProducts = FormUtil.GetListDataBySpanId($("#ui_txtCustomerPurchasedProducts_values"), "value", "").join(",");
        else
            ruleConditions.PurchasedProducts = "";

        if ($("#ui_chkCustomerNotPurchased").is(":checked"))
            ruleConditions.NotPurchasedProducts = FormUtil.GetListDataBySpanId($("#ui_txtCustomerNotPurchasedProducts_values"), "value", "").join(",");
        else
            ruleConditions.NotPurchasedProducts = "";

        if ($("#ui_chkTotalPurchaseIs").is(":checked")) {
            ruleConditions.CustomerTotalPurchaseCondition = $("#ui_ddlCustomerTotalPurchase").val();
            ruleConditions.CustomerTotalPurchase1 = $("#ui_txtCustomerTotalPurchase1").val();

            if ($("#ui_ddlCustomerTotalPurchase").val() == "3")
                ruleConditions.CustomerTotalPurchase2 = $("#ui_txtCustomerTotalPurchase2").val();
            else
                ruleConditions.CustomerTotalPurchase2 = 0;
        }
        else {
            ruleConditions.CustomerTotalPurchase1 = ruleConditions.CustomerTotalPurchaseCondition = ruleConditions.CustomerTotalPurchase2 = 0;
        }

        if ($("#ui_chkCustomerCurrectValue").is(":checked")) {
            ruleConditions.CustomerCurrentValueCondition = $("#ui_ddlCustomerCurrentValue").val();
            ruleConditions.CustomerCurrentValue1 = $("#ui_txtCustomerCurrentValue1").val();

            if ($("#ui_ddlCustomerCurrentValue").val() == "3")
                ruleConditions.CustomerCurrentValue2 = $("#ui_txtCustomerCurrentValue2").val();
            else
                ruleConditions.CustomerCurrentValue2 = 0;
        }
        else {
            ruleConditions.CustomerCurrentValue1 = ruleConditions.CustomerCurrentValueCondition = ruleConditions.CustomerCurrentValue2 = 0;
        }

        if ($("#ui_chkCustomerLastPurchase").is(":checked")) {
            ruleConditions.LastPurchaseIntervalCondition = $("#ui_ddlLastPurchaseCondition").val();
            ruleConditions.LastPurchaseIntervalRange1 = $("#ui_txtLastPurchaseRange1").val();

            if ($("#ui_ddlLastPurchaseCondition").val() == "3")
                ruleConditions.LastPurchaseIntervalRange2 = $("#ui_txtLastPurchaseRange2").val();
            else
                ruleConditions.LastPurchaseIntervalRange2 = 0;
        }
        else {
            ruleConditions.LastPurchaseIntervalCondition = ruleConditions.LastPurchaseIntervalRange1 = ruleConditions.LastPurchaseIntervalRange2 = 0;
        }

        if ($("#ui_chkCategoriesAddedToCart").is(":checked"))
            ruleConditions.AddedProductsCategoriesToCart = FormUtil.GetListDataBySpanId($("#ui_txtAddedToCartProductsCategories_values"), "value", "").join("|");
        else
            ruleConditions.AddedProductsCategoriesToCart = "";

        if ($("#ui_chkCategoriesNotAddedToCart").is(":checked"))
            ruleConditions.NotAddedProductsCategoriesToCart = FormUtil.GetListDataBySpanId($("#ui_txtNotAddedToCartProductsCategories_values"), "value", "").join("|");
        else
            ruleConditions.NotAddedProductsCategoriesToCart = "";

        if ($("#ui_chkSubCategoriesAddedToCart").is(":checked"))
            ruleConditions.AddedProductsSubCategoriesToCart = FormUtil.GetListDataBySpanId($("#ui_txtAddedToCartProductsSubCategories_values"), "value", "").join("|");
        else
            ruleConditions.AddedProductsSubCategoriesToCart = "";

        if ($("#ui_chkSubCategoriesNotAddedToCart").is(":checked"))
            ruleConditions.NotAddedProductsSubCategoriesToCart = FormUtil.GetListDataBySpanId($("#ui_txtNotAddedToCartProductsSubCategories_values"), "value", "").join("|");
        else
            ruleConditions.NotAddedProductsSubCategoriesToCart = "";

        return ruleConditions;
    },
    AssignInteractionEventData: function () {
        if ($("#ui_chkFormImpression").is(":checked")) {
            ruleConditions.ImpressionEventForFormId = $("#ui_ddlFormImpression").val();
            ruleConditions.ImpressionEventCountCondition = $("#ui_txtFormImpressionCount").val();
        }
        else {
            ruleConditions.ImpressionEventForFormId = -1;
            ruleConditions.ImpressionEventCountCondition = 0;
        }

        if ($("#ui_chkFormCloseEvent").is(":checked")) {
            ruleConditions.CloseEventForFormId = $("#ui_ddlFormCloseEvent").val();
            ruleConditions.CloseEventCountCondition = $("#ui_txtFormCloseEventCount").val();
        }
        else {
            ruleConditions.CloseEventForFormId = -1;
            ruleConditions.CloseEventCountCondition = 0;
        }

        if ($("#ui_chkResponseCountEvent").is(":checked")) {
            ruleConditions.ResponsesEventForFormId = $("#ui_ddlResponseCountEvent").val();
            ruleConditions.ResponsesEventCountCondition = $("#ui_txtResponseCountEventCount").val();
        }
        else {
            ruleConditions.ResponsesEventForFormId = -1;
            ruleConditions.ResponsesEventCountCondition = 0;
        }

        if ($("#ui_chkShowFormAtNTime").is(":checked"))
            ruleConditions.ShowFormOnlyNthTime = $("#ui_txtShowFormAtNTime").val();
        else
            ruleConditions.ShowFormOnlyNthTime = 0;

        return ruleConditions;
    },
    AssignProfileData: function () {

        if ($("#ui_chkOnlineSentimentIs").is(":checked"))
            ruleConditions.OnlineSentimentIs = $("#ui_ddlOnlineSentimentIs").val();
        else
            ruleConditions.OnlineSentimentIs = 0;

        if ($("#ui_chkSocialStatusIs").is(":checked"))
            ruleConditions.SocialStatusIs = $("#ui_ddlSocialStatus").val();
        else
            ruleConditions.SocialStatusIs = 0;

        if ($("#ui_chkInfluentialScoreIs").is(":checked")) {
            ruleConditions.InfluentialScoreCondition = $("#ui_ddlInfluentialScoreIs").val();
            ruleConditions.InfluentialScore1 = $("#ui_txtInfluentialScore1").val();

            if ($("#ui_ddlInfluentialScoreIs").val() == "3")
                ruleConditions.InfluentialScore2 = $("#ui_txtInfluentialScore2").val();
        }
        else {
            ruleConditions.InfluentialScoreCondition = ruleConditions.InfluentialScore2 = ruleConditions.InfluentialScore1 = 0;
        }

        if ($("#ui_chkOfflineSentimentIs").is(":checked"))
            ruleConditions.OfflineSentimentIs = $("#ui_ddlOfflineSentiment").val();
        else
            ruleConditions.OfflineSentimentIs = 0;

        if ($("#ui_chkProductRatingIs").is(":checked"))
            ruleConditions.ProductRatingIs = $("#ui_ddlRating").val();
        else
            ruleConditions.ProductRatingIs = 0;

        if ($("#ui_chkProspectStatusIs").is(":checked"))
            ruleConditions.NurtureStatusIs = $("#ui_ddlProspectStatus").val();
        else
            ruleConditions.NurtureStatusIs = -1;

        if ($("#ui_chkProspectGenderIs").is(":checked"))
            ruleConditions.GenderIs = $("#ui_ddlProspectGender").val();
        else
            ruleConditions.GenderIs = "";

        if ($("#ui_chkMartialStatus").is(":checked"))
            ruleConditions.MaritalStatusIs = $("#ui_ddlMartialStatus").val();
        else
            ruleConditions.MaritalStatusIs = "";

        if ($("#ui_chkIndustryIs").is(":checked"))
            ruleConditions.ProfessionIs = $("#ui_txtIndustryIs").val();
        else
            ruleConditions.ProfessionIs = "";

        if ($("#ui_chkIsConnectedSocially").is(":checked"))
            ruleConditions.NotConnectedSocially = $("#ui_ddlConnectedSocially").val();
        else
            ruleConditions.NotConnectedSocially = 0;

        if ($("#ui_chkProspectLoyaltyIs").is(":checked")) {
            ruleConditions.LoyaltyPointsCondition = $("#ui_ddlProspectLoyaltyIs").val();
            ruleConditions.LoyaltyPointsRange1 = $("#ui_txtProspectLoyalty1").val();

            if ($("#ui_ddlProspectLoyaltyIs").val() == "3")
                ruleConditions.LoyaltyPointsRange2 = $("#ui_txtProspectLoyalty2").val();
        }
        else {
            ruleConditions.LoyaltyPointsCondition = ruleConditions.LoyaltyPointsRange1 = ruleConditions.LoyaltyPointsRange2 = 0;
        }

        if ($("#ui_chkRFMSScoreIs").is(":checked")) {
            ruleConditions.RFMSScoreRangeCondition = $("#ui_ddlRFMSScore").val();
            ruleConditions.RFMSScoreRange1 = $("#ui_txtRFMSScore1").val();

            if ($("#ui_ddlRFMSScore").val() == "3")
                ruleConditions.RFMSScoreRange2 = $("#ui_txtRFMSScore2").val();
        }
        else {
            ruleConditions.RFMSScoreRangeCondition = ruleConditions.RFMSScoreRange1 = ruleConditions.RFMSScoreRange2 = 0;
        }

        if ($("#ui_chkDOBIs").is(":checked")) {
            ruleConditions.IsBirthDay = 1;

            if ($("#chk_IgnoreDOB").is(":checked")) {
                ruleConditions.IsDOBIgnored = 1;
                ruleConditions.IsDOBIgnoreCondition = $("#ui_ddlIgnoreDOB").val();
            }
            else {
                ruleConditions.IsDOBIgnored = ruleConditions.IsDOBIgnoreCondition = "";
            }

            if ($('input[name=DOB]:checked').val() == "0") {
                ruleConditions.IsDOBTodayOrMonth = 0;
            }
            else if ($('input[name=DOB]:checked').val() == "1") {
                ruleConditions.IsDOBTodayOrMonth = 1;
            }
            else if ($('input[name=DOB]:checked').val() == "2") {
                ruleConditions.IsDOBTodayOrMonth = 2;
                ruleConditions.DOBFromDate = $("#txtFromDate").val();
                ruleConditions.DOBToDate = $("#txtToDate").val();
                ruleConditions.DOBDaysDiffernce = 0;
            }
            else if ($('input[name=DOB]:checked').val() == "3") {
                ruleConditions.IsDOBTodayOrMonth = 3;
                ruleConditions.DOBFromDate = ruleConditions.DOBToDate = "";
                ruleConditions.DOBDaysDiffernce = $("#ui_txtDOBNoofDays").val()
            }
        }
        else {
            ruleConditions.IsBirthDay = ruleConditions.IsDOBTodayOrMonth = ruleConditions.DOBDaysDiffernce = 0;
            ruleConditions.DOBFromDate = ruleConditions.DOBToDate = ruleConditions.IsDOBIgnored = ruleConditions.IsDOBIgnoreCondition = "";
        }

        return ruleConditions;
    },

    AppendSelected: function (appendTo, data, fieldId) {
        var mainDiv = document.createElement("div");
        mainDiv.id = fieldId + "_" + data.item.value.replace(/[ ,:/]+/g, "_");
        mainDiv.className = "vrAutocomplete";
        mainDiv.setAttribute("value", data.item.value);
        mainDiv.setAttribute("identifier", data.item.value.replace(/[ ,:/]+/g, "_"));

        var span = document.createElement("span");
        span.className = "vnAutocomplete";

        var contentDiv = document.createElement("div");
        contentDiv.className = "vtAutocomplete";
        contentDiv.innerHTML = data.item.label;

        var removeDiv = document.createElement("div");
        removeDiv.className = "vmAutocomplete";
        removeDiv.setAttribute("onclick", "FormUtil.RemoveData('" + fieldId + "_" + data.item.value.replace(/[ ,:/]+/g, "_") + "');");

        span.appendChild(contentDiv);
        span.appendChild(removeDiv);
        mainDiv.appendChild(span);

        var isElementIsNotAdded = true;

        $("#" + appendTo).children().each(function () {
            if (data.item.value.replace(/ /g, "_").replace(/,/g, "_") == $(this).attr("identifier")) {
                isElementIsNotAdded = false;
                return false;
            }
        });

        if (isElementIsNotAdded)
            $("#" + appendTo).append(mainDiv);
        else
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ItemAlreadyAdded);
    },
    IntializeAutoComplete: function (fieldId, methodUrl, minLength, appendObject, extraFieldId) {
        $("#" + fieldId).autocomplete({
            autoFocus: true,
            minLength: minLength,
            source: function (request, response) {
                var value = $("#" + fieldId).val()
                $.ajax({
                    url: methodUrl,
                    data: JSON.stringify({ 'value': value }),
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                        if (data.length > 0) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.label,
                                    value: item.value + ""
                                }
                            }))
                        }
                    }
                });
            },
            select: function (events, selectedItem) {
                FormUtil.AppendSelected(appendObject, selectedItem, extraFieldId);
            },
            close: function (event, ui) {
                $(this).val("");
            }
        });
    },
    RemoveData: function (data) {
        data = $.trim(data);
        $("#" + data).remove();
    },
    GetListDataBySpanId: function (spanTag, valueType, replaceId) {

        var objectValues = new Array();
        spanTag.children().each(function () {

            var value = "";
            if (replaceId.length > 0)
                value = $(this).attr(valueType).replace(replaceId, "");
            else
                value = $(this).attr(valueType);

            objectValues.push(value);
        });
        return objectValues;
    },
    BindFormFields: function (FormId) {
        $.ajax({
            url: "../CommonDetailsForForms/GetFields",
            data: JSON.stringify({ 'FormId': FormId }),
            dataType: "json",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataFilter: function (data) { return data; },
            success: function (response) {
                var fieldsanswer = "";
                if (response.formFields.length > 0) {
                    if (response.formDetails != null && (response.formDetails.FormType == 1)) {
                        $.each(response.formFields, function (i) {
                            if ($(this)[0].Name.length > 0)
                                fieldsanswer += "<div class='custom-control custom-radio custom-control-inline'><input type='radio' class='custom-control-input' name='AnswerDependencyFieldOption' id='ui_radAnswerDependency" + i + "' value='" + $(this)[0].Id + "' /><label for='ui_radAnswerDependency" + i + "' class='custom-control-label'>" + $(this)[0].Name + "</label></div>";
                        });
                    }
                    else {
                        $.each(response.formFields, function (i) {
                            if ($(this)[0].SubFields != null && $(this)[0].SubFields.length > 0) {

                                var subFields;

                                if ($(this)[0].SubFields.indexOf("@$") > 0) {
                                    subFields = $(this)[0].SubFields.split("@$");
                                }
                                else {
                                    subFields = $(this)[0].SubFields.split(",");
                                }
                                for (var j = 0; j < subFields.length; j++)
                                    fieldsanswer += "<div class='custom-control custom-radio custom-control-inline'><input type='radio' class='custom-control-input' name='AnswerDependencyFieldOption' id='ui_radAnswerDependency" + j + "' value='" + j + "' /><label for='ui_radAnswerDependency" + j + "' class='custom-control-label'>" + subFields[j] + "</label></div>";
                            }
                        });
                    }
                }
                else {
                    for (var j = 1; j <= 5; j++)
                        fieldsanswer += "<div class='custom-control custom-radio custom-control-inline'><input type='radio' class='custom-control-label' name='AnswerDependencyFieldOption' id='ui_radAnswerDependency" + j + "' value='" + j + "' /><label for='ui_radAnswerDependency" + j + "' class='custom-control-label'>Ratted - " + j + "</label></div>";
                }

                $("#ui_dvAnswerDependencyFields").html(fieldsanswer);

                if ($("#ui_dvAnswerDependencyFields > div").length > 0 && ruleConditions.DependencyFormField > 0) {
                    $("input:radio[name='AnswerDependencyFieldOption'][value='" + ruleConditions.DependencyFormField + "']").prop("checked", true);
                }
            },
            error: ShowAjaxError
        });
    },
    DaysDifference: function () {
        var Todate = new Date();
        var customDate = Todate.getFullYear() + "-" + (Todate.getMonth() + 1) + "-" + Todate.getDate().toString();
        var dates = customDate.split('-');
        var Todate = new Date(dates[0], dates[1] - 1, dates[2]);

        var PastDateOrFutureDate = $("#txtDiffDate").val();
        var dates = PastDateOrFutureDate.split('-');
        var PastDateOrFutureDate = new Date(dates[0], dates[1] - 1, dates[2]);

        diffDays = (PastDateOrFutureDate.getTime() - Todate.getTime()) / (24 * 60 * 60 * 1000);
        $("#ui_txtDOBNoofDays").val(diffDays);
    },
    GetDifferenceDateValue: function (DateValue, DaysGap) {
        var dateop = new Date(DateValue);
        var newdate = new Date(dateop);
        newdate.setDate(newdate.getDate() + parseInt(DaysGap));
        var dd = newdate.getDate();
        var mm = newdate.getMonth() + 1;
        var y = newdate.getFullYear();
        if (dd.toString().length == 1) {
            dd = "0" + dd;
        }
        if (mm.toString().length == 1) {
            mm = "0" + mm;
        }
        var someFormattedDate = y + '-' + mm + '-' + dd;
        return someFormattedDate;
    },

    GetBasicData: function () {
        formDetails.FormIdentifier = CleanText($("#ui_txtFormIdentifier").val());

        if ($(".headTitOne").html() != undefined && $(".headTitOne").html() != null && $(".headTitOne").html() != "" && $(".headTitOne").html().length > 0)
            formDetails.Heading = AppendCustomField($.trim($(".headTitOne").text()));

        if ($(".formDescripTxt").html() != undefined && $(".formDescripTxt").html() != null && $(".formDescripTxt").html() != "" && $(".formDescripTxt").html().length > 0)
            formDetails.SubHeading = AppendCustomField($.trim($(".formDescripTxt").text()));

        formDetails.FormType = 1;
        return formDetails;
    },
    GetBasicFormHtmlDetails: function () {
        formDetails.Heading = CleanText($("#ui_txtFormIdentifier").val());
        formDetails.FormIdentifier = CleanText($("#ui_txtFormIdentifier").val());
        formDetails.SubHeading = "";

        if ($("#dv_htmltag").hasClass("active"))
            formDetails.FormType = 2;
        else if ($("#dv_iframetag").hasClass("active"))
            formDetails.FormType = 3;
        else if ($("#dv_custombanner").hasClass("active"))
            formDetails.FormType = 4;
        else if ($("#dv_video").hasClass("active"))
            formDetails.FormType = 5;

        return formDetails;
    },
    GetDesignValuesFormHtmlDetails: function () {

        if ($("#bodyFullWidth").is(":checked"))
            formDetails.BackgroundPxOPer = 1;
        else
            formDetails.BackgroundPxOPer = 0;

        formDetails.IsMainBackgroundDesignCustom = false;
        formDetails.MainBackgroundDesign = $.trim(FormUtil.GetMainBackgroundDesignCss());

        //formDetails.BackgroundFadeColor = bg.backgroundFadeColor; // need to ask yakkub on this for opacity where he is adding css

        formDetails.IsCloseCustomCss = false;
        formDetails.CloseCss = $.trim(FormUtil.GetCloseCss());

        if ($("#squareRadi").is(":checked"))
            formDetails.CloseDesignType = "square";
        else if ($("#roundRadi").is(":checked"))
            formDetails.CloseDesignType = "round";

        if ($("#leftRadi").is(":checked"))
            formDetails.CloseAlignmentSetting = "clsleft";
        else if ($("#rightRadi").is(":checked"))
            formDetails.CloseAlignmentSetting = "clsright";

        formDetails.AppearEffectOfFields = formDetails.ButtonPxOrPer = 0;

        formDetails.TitleCss = formDetails.TextboxDropCss = formDetails.LabelCss = formDetails.ButtonCss = formDetails.DescriptionCss = null;
        formDetails.IsButtonCustomCss = formDetails.IsTextboxDropCustomCss = formDetails.IsLabelCustomCss = formDetails.IsDescriptionCustomCss = formDetails.IsTitleCssCustom = true;

        formDetails.TimeDelay = $("#ui_txtTimeDelay").val().length == 0 ? 0 : $("#ui_txtTimeDelay").val();

        formDetails.AppearOnLoadOnExitOnScroll = $("input:radio[name='PageLoadOrOnExitOrOnScroll']:checked").val();
        if (formDetails.AppearOnLoadOnExitOnScroll == 2) {
            formDetails.ShowOnScrollDownHeight = $("#ui_txtShowOnScrollDownHeight").val();
        }

        if ($("#frmaligndesign").get(0).selectedIndex > 0) {
            if ($("#frmaligndesign").val() != null && $("#frmaligndesign").val() != "" && $("#frmaligndesign").val().length > 0) {
                if ($("#frmaligndesign").val() == "frmtop-left") {
                    formDetails.PositionAlign = 1;
                }
                else if ($("#frmaligndesign").val() == "frmtop-center") {
                    formDetails.PositionAlign = 2;
                }
                else if ($("#frmaligndesign").val() == "frmtop-right") {
                    formDetails.PositionAlign = 3;
                }
                else if ($("#frmaligndesign").val() == "frmbottom-screencenter") {
                    formDetails.PositionAlign = 4;
                }
                else if ($("#frmaligndesign").val() == "frmbottom-left") {
                    formDetails.PositionAlign = 5;
                }
                else if ($("#frmaligndesign").val() == "frmbottom-center") {
                    formDetails.PositionAlign = 6;
                }
                else if ($("#frmaligndesign").val() == "frmbottom-right") {
                    formDetails.PositionAlign = 7;
                }
            }
        }

        //formDetails.PositionAlign = $("#frmaligndesign").val(); // still yakkub has not done
        formDetails.TopOrBottomPadding = $("#ui_txtBottomPadding").val();
        formDetails.RightOrLeftPadding = $("#ui_txtPadding").val();

        formDetails.ThankYouMessage = null;

        return formDetails;
    },
    GetBanners: function (formId) {
        bannerDetails.FormId = formId;
        bannerDetails.Name = CleanText($("#ui_txtFormIdentifier").val());

        if (formType == 2) {
            var content = $("#ui_txtContent").val().replace(/'/g, "‘");
        }
        else if (formType == 3) {
            var content = $("#ui_txtiframeContent").val().replace(/'/g, "‘");
        }
        else if (formType == 4) {
            var content = $("#ui_txtimageContent").val().replace(/'/g, "‘");
            bannerDetails.RedirectUrl = CleanText($("#ui_txtImageRedirectUrl").val());
        }
        else if (formType == 5) {
            var content = $("#ui_txtvideoContent").val().replace(/'/g, "‘");
        }

        content = $.trim(content);
        bannerDetails.BannerContent = content;
    },
    GetResponseSettingFormHtmlDetails: function () {

        if ($("#ui_chkReportMail").is(":checked"))
            responseSettings.ReportToDetailsByMail = CleanText($("#ui_txtReportThroughEmail").val());
        else
            responseSettings.ReportToDetailsByMail = "";

        if ($("#ui_chkReportSMS").is(":checked"))
            responseSettings.ReportToDetailsBySMS = CleanText($("#ui_txtReportThroughSMSAlert").val());
        else
            responseSettings.ReportToDetailsBySMS = "";
        if ($("#ui_chkReportWhatsApp").is(":checked"))
            responseSettings.ReportToDetailsByWhatsApp = CleanText($("#ui_txtReportThroughWhatsAppAlert").val());
        else
            responseSettings.ReportToDetailsByWhatsApp = "";
        if ($("#ui_chkSendMailOut").is(":checked")) {
            mailSettings.MailTemplateId = $("#ui_ddlMailUnConditionTemplate").val();
            mailSettings.Subject = CleanText($("#ui_txtMailUnConditionSubject").val());
            mailSettings.FromName = CleanText($("#ui_txtUnConditionalMailFromName").val());
            mailSettings.FromEmailId = $("#ui_ddlFromEmailSender").val();
        }

        if ($("#ui_chkSalesPerson").is(":checked") && $("#ui_ddlUserList").get(0).selectedIndex > 0)
            responseSettings.AccesLeadToUserId = $("#ui_ddlUserList").val();
        else
            responseSettings.AccesLeadToUserId = 0;

        if ($("#ui_chkRedirectUrl").is(":checked"))
            responseSettings.RedirectUrl = '{"DependencyFieldId":"0","UnconditionalStaticUrl":"' + $("#ui_txtRedirectUrl").val() + '","Subfields":""}';
        else
            responseSettings.RedirectUrl = "";

        return { responseSettings: responseSettings, mailSettings: mailSettings };
    },
    GetDesignValues: function () {

        if ($("#bodyFullWidth").is(":checked"))
            formDetails.BackgroundPxOPer = 1;
        else
            formDetails.BackgroundPxOPer = 0;

        formDetails.IsMainBackgroundDesignCustom = false;
        formDetails.MainBackgroundDesign = $.trim(FormUtil.GetMainBackgroundDesignCss());

        //formDetails.BackgroundFadeColor = bg.backgroundFadeColor; // need to ask yakkub on this for opacity where he is adding css

        formDetails.IsCloseCustomCss = false;
        formDetails.CloseCss = $.trim(FormUtil.GetCloseCss());

        if ($("#squareRadi").is(":checked"))
            formDetails.CloseDesignType = "square";
        else if ($("#roundRadi").is(":checked"))
            formDetails.CloseDesignType = "round";

        if ($("#leftRadi").is(":checked"))
            formDetails.CloseAlignmentSetting = "clsleft";
        else if ($("#rightRadi").is(":checked"))
            formDetails.CloseAlignmentSetting = "clsright";

        formDetails.IsButtonCustomCss = false;
        formDetails.ButtonCss = $.trim(FormUtil.GetButtonCss());

        if ($("#subBtnFullWidth").is(":checked"))
            formDetails.ButtonPxOrPer = 1;
        else
            formDetails.ButtonPxOrPer = 0;

        formDetails.IsTitleCssCustom = false;
        formDetails.TitleCss = $.trim(FormUtil.GetTitleCss());

        formDetails.IsDescriptionCustomCss = false
        formDetails.DescriptionCss = $.trim(FormUtil.GetDescriptionCss());

        formDetails.IsLabelCustomCss = false
        formDetails.LabelCss = $.trim(FormUtil.GetLabelCss());

        formDetails.IsTextboxDropCustomCss = false
        formDetails.TextboxDropCss = $.trim(FormUtil.GetTextBoxCss());

        if ($("#labelplaceholder").length > 0 && $("#labelplaceholder").hasClass("lbl-active-bg")) {
            formDetails.AppearEffectOfFields = 1;
        }
        else if ($("#labelTopAlign").length > 0 && $("#labelTopAlign").hasClass("lbl-active-bg")) {
            formDetails.AppearEffectOfFields = 2;
        }
        else {
            formDetails.AppearEffectOfFields = 0;
        }

        formDetails.TimeDelay = $("#ui_txtTimeDelay").val().length == 0 ? 0 : $("#ui_txtTimeDelay").val();

        formDetails.AppearOnLoadOnExitOnScroll = $("input:radio[name='PageLoadOrOnExitOrOnScroll']:checked").val();
        if (formDetails.AppearOnLoadOnExitOnScroll == 2) {
            formDetails.ShowOnScrollDownHeight = $("#ui_txtShowOnScrollDownHeight").val();
        }

        if ($("#frmaligndesign").get(0).selectedIndex > 0) {
            if ($("#frmaligndesign").val() != null && $("#frmaligndesign").val() != "" && $("#frmaligndesign").val().length > 0) {
                if ($("#frmaligndesign").val() == "frmtop-left") {
                    formDetails.PositionAlign = 1;
                }
                else if ($("#frmaligndesign").val() == "frmtop-center") {
                    formDetails.PositionAlign = 2;
                }
                else if ($("#frmaligndesign").val() == "frmtop-right") {
                    formDetails.PositionAlign = 3;
                }
                else if ($("#frmaligndesign").val() == "frmbottom-screencenter") {
                    formDetails.PositionAlign = 4;
                }
                else if ($("#frmaligndesign").val() == "frmbottom-left") {
                    formDetails.PositionAlign = 5;
                }
                else if ($("#frmaligndesign").val() == "frmbottom-center") {
                    formDetails.PositionAlign = 6;
                }
                else if ($("#frmaligndesign").val() == "frmbottom-right") {
                    formDetails.PositionAlign = 7;
                }
            }
        }

        //formDetails.PositionAlign = $("#frmaligndesign").val(); // still yakkub has not done
        formDetails.TopOrBottomPadding = $("#ui_txtBottomPadding").val();
        formDetails.RightOrLeftPadding = $("#ui_txtPadding").val();

        if ($("#ui_txtThankYouMessage").val().length > 0)
            formDetails.ThankYouMessage = CleanText($("#ui_txtThankYouMessage").val());
        else
            formDetails.ThankYouMessage = "";

        return formDetails;
    },
    SaveResponseSetting: function () {
        FormUtil.AutoAssignToGroup();
        FormUtil.Isoverridesource();
        FormUtil.AutoAssignToGroupOptin();
        responseSettings.FormId = formId;
    },
    BindTitleField: function (FormTitleDetails) {
        fieldrowindex++;
        $(".frmdummyconts").remove();
        $("#appendFields").append('<div id="formTitle" FieldType="25" class="formTitle del editor"><h1 class="headTitOne" id="formHeadOne">' + FormTitleDetails.Name + '</h1><div class="delIconWrap"><span id="textTitEdit" data-tab="formTitTabCont" class="fa fa-paint-brush" title="Edit Design"></span><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="addTitleLink" titleaddlinkattr="formHeadOne" class="fas fa-pencil-alt" title="Edit Title"></span><span id="delParent" deleteattrvalue="formHeadOne" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        AddFormBindingFieldsArray(FormTitleDetails.Name, 25, fieldrowindex, "", FormTitleDetails.Mandatory, FormTitleDetails.FormId, FormTitleDetails.Id, "formHeadOne", FormTitleDetails.ContactMappingField, "");
    },
    BindDescriptionField: function (FormDescriptionDetails) {
        fieldrowindex++;
        $(".frmdummyconts").remove();
        $("#appendFields").append('<div id="formDescript" FieldType="26" class="formDescriptwrp del"><h4 class="formDescripTxt" id="desCripText">' + FormDescriptionDetails.Name + '</h4><div class="delIconWrap"><span id="frmDesEdit" data-tab="formDesTabCont" class="fa fa-paint-brush" title="Edit Design"></span><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="addDescripLink" adddesclinkattr="formDescript"  class="fas fa-pencil-alt" title="Edit Description"></span><span id="delParent" deleteattrvalue="formDescript" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        AddFormBindingFieldsArray(FormDescriptionDetails.Name, 26, fieldrowindex, "", FormDescriptionDetails.Mandatory, FormDescriptionDetails.FormId, FormDescriptionDetails.Id, "formDescript", FormDescriptionDetails.ContactMappingField, "");
    },
    BindNameField: function (NameFieldDetails) {

        var NameDetails = NameFieldDetails;

        textBoxNameCount++;
        fieldrowindex++;

        $(".frmdummyconts").remove();
        let textBoxNameNum = "textBoxName" + textBoxNameCount.toString();
        textBoxlblNameCount = "textBoxlblName" + textBoxNameCount.toString();
        textBoxlabelId = "Name" + textBoxNameCount.toString();
        textBoxlblWrap = "textBoxlblCont" + textBoxNameCount.toString();
        textBoxInptWrap = "textBoxInptCont" + textBoxNameCount.toString();

        $("#appendFields").append('<div id="' + textBoxNameNum + '" FieldType="1" class="inputWrap del"><div class="frmeditrow lblTxtBox"><div id="' + textBoxlblWrap + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + textBoxlblNameCount + '" contenteditable="true">' + NameDetails.Name + '</label></div><div id="' + textBoxInptWrap + '"  class="form-col-8 form-mb-col-12 txtBox"><input type="text" FieldType="1" RowIndex="' + fieldrowindex + '" class="input-form-control" id="' + textBoxlabelId + '" name="Name" required = "required" ></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editTextBox" editattrvalue="' + textBoxNameNum + '" class="fas fa-pencil-alt" title="Edit TextBox"></span><span id="delParent" deleteattrvalue="' + textBoxNameNum + '" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        if (formDetails.AppearEffectOfFields == 1) {
            $('[id^="textBoxlblCont"]').addClass('lblAlignPlaceholder adCol-100');
            $('[id^="textBoxInptCont"]').addClass('adCol-100');
        }
        else if (formDetails.AppearEffectOfFields == 2) {
            $('[id^="textBoxlblCont"],[id^="textBoxInptCont"]').addClass('adCol-100');
        }

        AddFormBindingFieldsArray(NameDetails.Name, 1, fieldrowindex, "", NameDetails.Mandatory, NameFieldDetails.FormId, NameFieldDetails.Id, textBoxNameNum, NameFieldDetails.ContactMappingField, "");

        $(".formWrapper").on('keyup', "#" + textBoxlblNameCount, function () {
            appendTextBox = $(this).parent('.labelStyle').next('.txtBox').find('input').attr('id');
            textBoxlabelVal = $(this).text();
            addTextBoxNamePl = textBoxlabelVal.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase();

            if (appendTextBox == "") {
                $(this).parent('.labelStyle').next('.txtBox').find('input').attr({
                    "id": addTextBoxNamePl,
                    "name": addTextBoxNamePl
                });
            }

            $('#' + appendTextBox).attr({
                "id": addTextBoxNamePl,
                "name": addTextBoxNamePl
            });
        });
    },
    BindCustomTextBoxField: function (CustomTextBoxDetails) {
        custtextBoxNameCount++;
        fieldrowindex++;

        $(".frmdummyconts").remove();
        let custtextboxnamenum = "custTextbox" + custtextBoxNameCount.toString();
        custtxtbxlblwrp = "custTextBoxlblwrp" + custtextBoxNameCount.toString();
        custtxtbxlblname = "custTextBoxlblName" + custtextBoxNameCount.toString();
        custtxtbxinptwrp = "custTextBoxinptWrp" + custtextBoxNameCount.toString();
        custtxtbxinptId = "custTextBoxinput" + custtextBoxNameCount.toString();

        $("#appendFields").append('<div id="' + custtextboxnamenum + '" FieldType="6" class="inputWrap del"><div class="frmeditrow lblTxtBox"><div id="' + custtxtbxlblwrp + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + custtxtbxlblname + '" contenteditable="true">' + CustomTextBoxDetails.Name + '</label></div><div id="' + custtxtbxinptwrp + '"  class="form-col-8 form-mb-col-12 txtBox"><input type="text" FieldType="6" RowIndex="' + fieldrowindex + '"  class="input-form-control" id="' + custtxtbxinptId + '" name="Name" required = "required" ></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editcustTextBox" editattrvalue="' + custtextboxnamenum + '" class="fas fa-pencil-alt" title="Edit TextBox"></span><span id="delParent" deleteattrvalue="' + custtextboxnamenum + '" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        if (formDetails.AppearEffectOfFields == 1) {
            $('[id^="custTextBoxlblwrp"]').addClass('lblAlignPlaceholder adCol-100');
            $('[id^="custTextBoxinptWrp"]').addClass('adCol-100');
        }
        else if (formDetails.AppearEffectOfFields == 2) {
            $('[id^="custTextBoxlblwrp"],[id^="custTextBoxinptWrp"]').addClass('adCol-100');
        }

        AddFormBindingFieldsArray(CustomTextBoxDetails.Name, 6, fieldrowindex, "", CustomTextBoxDetails.Mandatory, CustomTextBoxDetails.FormId, CustomTextBoxDetails.Id, custtextboxnamenum, CustomTextBoxDetails.ContactMappingField, "");

        $(".formWrapper").on('keyup', "#" + custtxtbxlblname, function () {
            custTextBxlblid = $(this).parent('.labelStyle').next('.txtBox').find('input').attr('id');
            custTextBxlblval = $(this).text();
            custTextBxpl = custTextBxlblval.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase();
            if (custTextBxlblid == "") {
                $(this).parent('.labelStyle').next('.txtBox').find('input').attr({
                    "id": custTextBxpl,
                    "name": custTextBxpl
                });
            }
            $("#" + custTextBxlblid).attr({
                "id": custTextBxpl,
                "name": custTextBxpl
            });
        });
    },
    BindOTpTextBoxField: function (OtpTextBoxDetails) {
        opttextBoxNameCount++;
        fieldrowindex++;

        $(".frmdummyconts").remove();
        let otptextboxnamenum = "otpTextbox" + opttextBoxNameCount.toString();
        otptxtbxlblwrp = "otpTextBoxlblwrp" + opttextBoxNameCount.toString();
        otptxtbxlblname = "otpTextBoxlblName" + opttextBoxNameCount.toString();
        otptxtbxinptwrp = "otpTextBoxinptWrp" + opttextBoxNameCount.toString();
        otptxtbxinptId = "otpTextBoxinput" + opttextBoxNameCount.toString();

        $("#appendFields").append('<div id="' + otptextboxnamenum + '" FieldType="23" class="inputWrap del"><div class="frmeditrow lblTxtBox"><div id="' + otptxtbxlblwrp + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + otptxtbxlblname + '" contenteditable="true">' + OtpTextBoxDetails.Name + '</label></div><div id="' + otptxtbxinptwrp + '"  class="form-col-8 form-mb-col-12 txtBox"><input type="text" FieldType="23" RowIndex="' + fieldrowindex + '"  class="input-form-control" id="' + otptxtbxinptId + '" name="Name" required = "required" ></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editotpTextBox" editattrvalue="' + otptextboxnamenum + '" class="fas fa-pencil-alt" title="Edit TextBox"></span><span id="delParent" deleteattrvalue="' + otptextboxnamenum + '" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        if (formDetails.AppearEffectOfFields == 1) {
            $('[id^="otpTextBoxlblwrp"]').addClass('lblAlignPlaceholder adCol-100');
            $('[id^="otpTextBoxinptWrp"]').addClass('adCol-100');
        }
        else if (formDetails.AppearEffectOfFields == 2) {
            $('[id^="otpTextBoxlblwrp"],[id^="otpTextBoxinptWrp"]').addClass('adCol-100');
        }

        AddFormBindingFieldsArray(OtpTextBoxDetails.Name, OtpTextBoxDetails.FieldType, fieldrowindex, "", OtpTextBoxDetails.Mandatory, OtpTextBoxDetails.FormId, OtpTextBoxDetails.Id, otptextboxnamenum, OtpTextBoxDetails.ContactMappingField, "");

        $(".formWrapper").on('keyup', "#" + otptxtbxlblname, function () {
            otpTextBxlblid = $(this).parent('.labelStyle').next('.txtBox').find('input').attr('id');
            otpTextBxlblval = $(this).text();
            otpTextBxpl = otpTextBxlblval.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase();
            if (otpTextBxlblid == "") {
                $(this).parent('.labelStyle').next('.txtBox').find('input').attr({
                    "id": otpTextBxpl,
                    "name": otpTextBxpl
                });
            }
            $("#" + otpTextBxlblid).attr({
                "id": otpTextBxpl,
                "name": otpTextBxpl
            });
        });
    },
    BindEmailField: function (EmailDetails) {
        textBoxEmailCount++;
        fieldrowindex++;

        $(".frmdummyconts").remove();
        let textBoxEmailNum = "textBoxEmail" + textBoxEmailCount.toString();
        emaillblTextCount = "textBoxEmaillbl" + textBoxEmailCount.toString();
        emaillblTextBoxId = "emailId" + textBoxEmailCount.toString();
        emaillblWrap = "emailLblCont" + textBoxEmailCount.toString();
        emailInpWrap = "emailInptCont" + textBoxEmailCount.toString();

        $("#appendFields").append('<div id="' + textBoxEmailNum + '" FieldType="2" class="inputWrap del"><div class="frmeditrow emailbx"><div id="' + emaillblWrap + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + emaillblTextCount + '" contenteditable="true" >' + EmailDetails.Name + '</label></div><div id="' + emailInpWrap + '" class="form-col-8 form-mb-col-12 emaillblTxt"><input id="' + emaillblTextBoxId + '" FieldType="2" RowIndex="' + fieldrowindex + '" class="input-form-control" type="email" name="email" required="required" ></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editEmailBox" editattrvalue="' + textBoxEmailNum + '" class="fas fa-pencil-alt" title="Edit EmailBox"></span><span id="delParent" deleteattrvalue="' + textBoxEmailNum + '" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        if (formDetails.AppearEffectOfFields == 1) {
            $('[id^="emailLblCont"]').addClass('adCol-100 lblAlignPlaceholder');
            $('[id^="emailInptCont"]').addClass('adCol-100');
        }
        else if (formDetails.AppearEffectOfFields == 2) {
            $('[id^="emailLblCont"],[id^="emailInptCont"]').addClass('adCol-100');
        }

        AddFormBindingFieldsArray(EmailDetails.Name, 2, fieldrowindex, "", EmailDetails.Mandatory, EmailDetails.FormId, EmailDetails.Id, textBoxEmailNum, EmailDetails.ContactMappingField, "");

        $(".formWrapper").on('keyup', '#' + emaillblTextCount, function () {
            emaillblInputId = $(this).parent('.labelStyle').next('.emaillblTxt').find('input').attr('id');
            emaillblTextVal = $(this).text();
            emaillblValName = emaillblTextVal.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase();
            if (emaillblInputId == "") {
                $(this).parent('.labelStyle').next('.emaillblTxt').find('input').attr({
                    "id": emaillblValName,
                    "name": emaillblValName
                });
            }
            $("#" + emaillblInputId).attr({
                "id": emaillblValName,
                "name": emaillblValName
            });
        });
    },
    BindPhoneField: function (PhoneDetails) {
        textBoxPhoneCount++;
        fieldrowindex++;

        $(".frmdummyconts").remove();
        let textBoxPhoneNum = "textBoxPhone" + textBoxPhoneCount.toString();
        textBoxPhonelbl = "textboxPhonelbl" + textBoxPhoneCount.toString();
        textBoxPhonelblInputId = "phone" + textBoxPhoneCount.toString();
        phonelblCont = "phoneLblWrap" + textBoxPhoneCount.toString();
        phoneInptCont = "phoneInptWrap" + textBoxPhoneCount.toString();

        $("#appendFields").append('<div id="' + textBoxPhoneNum + '" FieldType="3" class="inputWrap del"><div class="frmeditrow phneBox"><div id="' + phonelblCont + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + textBoxPhonelbl + '" contenteditable="true">' + PhoneDetails.Name + '</label></div><div id="' + phoneInptCont + '" class="form-col-8 form-mb-col-12 phneInput"><input id="' + textBoxPhonelblInputId + '" FieldType="3" RowIndex="' + fieldrowindex + '" class="input-form-control" type="tel" name="phone" required="required"></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editPhoneBox" editattrvalue="' + textBoxPhoneNum + '" class="fas fa-pencil-alt" title="Edit PhoneBox"></span><span id="delParent" deleteattrvalue="' + textBoxPhoneNum + '" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        if (formDetails.AppearEffectOfFields == 1) {
            $('[id^="phoneLblWrap"]').addClass('adCol-100 lblAlignPlaceholder');
            $('[id^="phoneInptWrap"]').addClass('adCol-100');
        }
        else if (formDetails.AppearEffectOfFields == 2) {
            $('[id^="phoneLblWrap"],[id^="phoneInptWrap"]').addClass('adCol-100');
        }

        AddFormBindingFieldsArray(PhoneDetails.Name, 3, fieldrowindex, "", PhoneDetails.Mandatory, PhoneDetails.FormId, PhoneDetails.Id, textBoxPhoneNum, PhoneDetails.ContactMappingField, "");

        $(".formWrapper").on('keyup', "#" + textBoxPhonelbl, function () {
            textBoxPhonelblId = $(this).parent('.labelStyle').next('.phneInput').find('input').attr('id');
            phoneBoxlblText = $(this).text();
            phoneBoxInptId = phoneBoxlblText.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase();
            if (textBoxPhonelblId == "") {
                $(this).parent('.labelStyle').next('.phneInput').find('input').attr({
                    "id": phoneBoxInptId,
                    "name": phoneBoxInptId
                });
            }
            $("#" + textBoxPhonelblId).attr({
                "id": phoneBoxInptId,
                "name": phoneBoxInptId
            });
        });
    },
    BindDropDowmField: function (DropDownDetails) {

        dropdownCount++;
        fieldrowindex++;

        var plachoderisNeeded = formDetails.AppearEffectOfFields;

        var options = "";

        if (plachoderisNeeded != 1)
            options = "<option value='0'>Select</option>";
        else
            options = "<option value='0'>Select " + DropDownDetails.Name + "</option>";

        var subFieldList = DropDownDetails.SubFields.split(",");
        for (var j = 0; j < subFieldList.length; j++)
            options += "<option value='" + subFieldList[j] + "'>" + subFieldList[j] + "</option>"

        $(".frmdummyconts").remove();
        selectDropdownlist = "selectDropdownlist" + dropdownCount.toString();
        let dropdownCountNum = "inputDropDown" + dropdownCount.toString();
        dropDownlblCountNum = "dropDownSelectlbl" + dropdownCount.toString();
        dropDownlblCont = "dropDownlblWrap" + dropdownCount.toString();
        dropDownInptCont = "dropDownInptWrap" + dropdownCount.toString();

        $("#appendFields").append('<div id="' + dropdownCountNum + '" FieldType="8" class="inputWrap del"><div class="frmeditrow selectDropPar"><div id="' + dropDownlblCont + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dropDownlblCountNum + '">' + DropDownDetails.Name + '</label></div><div id="' + dropDownInptCont + '" class="form-col-8 form-mb-col-12 SelectDropId"><select id="' + selectDropdownlist + '" FieldType="8" RowIndex="' + fieldrowindex + '" class="input-form-control" required="required">' + options + '</select></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editOption" editattrvalue="' + dropdownCountNum + '" class="fas fa-pencil-alt" title="Edit Options"></span><span id="delParent" deleteattrvalue="' + dropdownCountNum + '" class="fas fa-trash-alt" title="Delete"></span></div></div>');

        if (formDetails.AppearEffectOfFields == 1) {
            $('[id^="dropDownlblWrap"]').hide();
            $('[id^="dropDownInptWrap"]').addClass('adCol-100');
        }
        else if (formDetails.AppearEffectOfFields == 2) {
            $('[id^="dropDownlblWrap"],[id^="dropDownInptWrap"]').addClass('adCol-100');
        }

        AddFormBindingFieldsArray(DropDownDetails.Name, 8, fieldrowindex, DropDownDetails.SubFields, DropDownDetails.Mandatory, DropDownDetails.FormId, DropDownDetails.Id, dropdownCountNum, DropDownDetails.ContactMappingField, "");
    },
    BindTextAreaField: function (TextAreaDetails) {
        textBoxMessCount++;
        fieldrowindex++;

        $(".frmdummyconts").remove();
        let textBoxMessNum = "inputMess" + textBoxMessCount.toString();
        textMessBoxlblName = "textBoxlblMess" + textBoxMessCount.toString();
        textMessDefInputId = "messageBox" + textBoxMessCount.toString();
        txtMessLblCont = "txtMessLblWrap" + textBoxMessCount.toString();
        txtMessInptCont = "txtMessInptWrap" + textBoxMessCount.toString();

        $("#appendFields").append('<div id="' + textBoxMessNum + '" FieldType="7" class="inputWrap del"><div class="frmeditrow messBox"><div id="' + txtMessLblCont + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + textMessBoxlblName + '" contenteditable="true">' + TextAreaDetails.Name + '</label></div><div id="' + txtMessInptCont + '" class="form-col-8 form-mb-col-12 textMessWrap"><textarea id="' + textMessDefInputId + '" FieldType="7" RowIndex="' + fieldrowindex + '" class="input-form-control" required="required"></textarea></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="edittextMessBox" editattrvalue="' + textBoxMessNum + '" class="fas fa-pencil-alt" title="Edit MessageBox"></span><span id="delParent" deleteattrvalue="' + textBoxMessNum + '" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        if (formDetails.AppearEffectOfFields == 1) {
            $('[id^="txtMessLblWrap"]').addClass('adCol-100 lblAlignPlaceholder');
            $('[id^="txtMessInptWrap"]').addClass('adCol-100');
        }
        else if (formDetails.AppearEffectOfFields == 2) {
            $('[id^="txtMessLblWrap"],[id^="txtMessInptWrap"]').addClass('adCol-100');
        }

        AddFormBindingFieldsArray(TextAreaDetails.Name, 7, fieldrowindex, "", TextAreaDetails.Mandatory, TextAreaDetails.FormId, TextAreaDetails.Id, textBoxMessNum, TextAreaDetails.ContactMappingField, "");

        $(".formWrapper").on("keyup", "#" + textMessBoxlblName, function () {
            textMessBoxId = $(this).parent('.labelStyle').next('.textMessWrap').find('textarea').attr('id');
            textMesslblName = $(this).text();
            textMessBoxIdVal = textMesslblName.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase();
            if (textMessBoxId == "") {
                $(this).parent('.labelStyle').next('.textMessWrap').find('textarea').attr({
                    "id": textMessBoxIdVal,
                    "name": textMessBoxIdVal
                });
            }

            $("#" + textMessBoxId).attr({
                "id": textMessBoxIdVal,
                "name": textMessBoxIdVal
            });
        });
    },
    BindDateField: function (DateDetails) {
        textBoxDateCount++;
        fieldrowindex++;

        $(".frmdummyconts").remove();
        let textBoxDateNum = "inputDateWrap" + textBoxDateCount.toString();
        dateBoxlblName = "textBoxlblDate" + textBoxDateCount.toString();
        dateTextBoxId = "textBoxDateinput" + textBoxDateCount.toString();
        dateBoxlblCont = "dateBoxlblWrap" + textBoxDateCount.toString();
        dateBoxInptCont = "dateBoxInptWrap" + textBoxDateCount.toString();

        $("#appendFields").append('<div id="' + textBoxDateNum + '" FieldType="4" class="inputWrap del"><div class="frmeditrow dateBoxWrapForm"><div id="' + dateBoxlblCont + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dateBoxlblName + '" contenteditable="true">' + DateDetails.Name + '</label></div><div id="' + dateBoxInptCont + '" class="form-col-8 form-mb-col-12 dateWrapForm"><input id="' + dateTextBoxId + '" FieldType="5" RowIndex="' + fieldrowindex + '" class="input-form-control dtpickrinpt" type="text" name="dateVal" required="required"></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editDate" editattrvalue="' + textBoxDateNum + '" class="fas fa-pencil-alt" title="Edit Date"></span><span id="delParent" deleteattrvalue="' + textBoxDateNum + '" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        if (formDetails.AppearEffectOfFields == 1) {
            $('[id^="dateBoxlblWrap"]').addClass('adCol-100 lblAlignPlaceholder');
            $('[id^="dateBoxInptWrap"]').addClass('adCol-100');
        }
        else if (formDetails.AppearEffectOfFields == 2) {
            $('[id^="dateBoxlblWrap"],[id^="dateBoxInptWrap"]').addClass('adCol-100');
        }

        AddFormBindingFieldsArray(DateDetails.Name, 4, fieldrowindex, "", DateDetails.Mandatory, DateDetails.FormId, DateDetails.Id, textBoxDateNum, DateDetails.ContactMappingField, "");

        $(".formWrapper").on("keyup", "#" + dateBoxlblName, function () {
            dateInputId = $(this).parent('.labelStyle').next('.dateWrapForm').find('input').attr('id');
            dateBoxlblText = $(this).text();
            dateBoxIdVal = dateBoxlblText.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase();
            if (dateInputId == "") {
                $(this).parent('.labelStyle').next('.dateWrapForm').find('input').attr({
                    "id": dateBoxIdVal,
                    "name": dateBoxIdVal
                });
            }

            $("#" + dateInputId).attr({
                "id": dateBoxIdVal,
                "name": dateBoxIdVal
            });
        });
        dynamicdatepicker();
    },
    BindRadioButtonField: function (RadioButtonDetails, IndexValue) {

        radioButtonCount++;
        fieldrowindex++;

        var options = "";
        var subFieldList = RadioButtonDetails.SubFields.split(",");

        var ClassName = "inline-check";

        if (RadioButtonDetails.FieldDisplay != undefined && RadioButtonDetails.FieldDisplay != null && RadioButtonDetails.FieldDisplay != "" && RadioButtonDetails.FieldDisplay.length > 0) {
            if (RadioButtonDetails.FieldDisplay == "Vertical") {
                ClassName = "";
            }
        }

        for (var j = 0; j < subFieldList.length; j++)
            options += "<div class='radio-container " + ClassName + "'><input type='radio' class='input-check checkId' id='ui_rad" + j + "' value='" + subFieldList[j] + "' name='ui_Field" + IndexValue + "'><label for='ui_rad" + j + "' class='label-check' contenteditable='true'>" + subFieldList[j] + "</label></div>";

        $(".frmdummyconts").remove();
        var radioButtonNum = "inputRadioBtn" + radioButtonCount.toString();
        radiobtnlblCont = "radiobtnlblWrap" + radioButtonCount.toString();
        radiobtninptCont = "radiobtninptWrap" + radioButtonCount.toString();
        radioButtonHTML = '<div id="' + radioButtonNum + '" class="form-radio-wrap del">\
					 <div class="frmeditrow labelTopBot">\
					<div id="'+ radiobtnlblCont + '" class="form-col-4 form-mb-col-12 w-100">\
					<div class="labelWrap">\
					<label>'+ RadioButtonDetails.Name + '</label>\
				   </div>\
					   </div>\
					<div id="'+ radiobtninptCont + '" FieldType="9" RowIndex="' + fieldrowindex + '" class="form-col-8 form-mb-col-12 w-100 addradioBtn">\
						'+ options + '\
				</div>\
				<div class="delIconWrap">\
					<span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="alignRadio" radalignattr="' + radioButtonNum + '" class="fas fa-list-ul" title="Align Vertical"></span>\<span id="editradiobtn" class="fas fa-pencil-alt" editattrvalue="' + radioButtonNum + '" title="edit"></span>\<span id="delParent" deleteattrvalue="' + radioButtonNum + '" class="fas fa-trash-alt" title="Delete"></span>\</div>\
			   </div>';

        AddFormBindingFieldsArray(RadioButtonDetails.Name, 9, fieldrowindex, RadioButtonDetails.SubFields, RadioButtonDetails.Mandatory, RadioButtonDetails.FormId, RadioButtonDetails.Id, radioButtonNum, RadioButtonDetails.ContactMappingField, RadioButtonDetails.FieldDisplay);

        $("#appendFields").append(radioButtonHTML);

        if (formDetails.AppearEffectOfFields == 1) {
            $('[id^="radiobtnlblWrap"],[id^="radiobtninptWrap"]').addClass('adCol-100');
        }
        else if (formDetails.AppearEffectOfFields == 2) {
            $('[id^="radiobtnlblWrap"],[id^="radiobtninptWrap"]').addClass('adCol-100');
        }
    },
    BindCheckBoxField: function (CheckBoxDetails, IndexValue) {

        checkBoxcount++;
        fieldrowindex++;

        var options = "";
        var subFieldList = CheckBoxDetails.SubFields.split(",");

        var ClassName = "inline-check";

        if (CheckBoxDetails.FieldDisplay != undefined && CheckBoxDetails.FieldDisplay != null && CheckBoxDetails.FieldDisplay != "" && CheckBoxDetails.FieldDisplay.length > 0) {
            if (CheckBoxDetails.FieldDisplay == "Vertical") {
                ClassName = "";
            }
        }

        for (var j = 0; j < subFieldList.length; j++)
            options += "<div class='check-container " + ClassName + "'><input type='checkbox' class='input-check checkId' name='ui_Field" + IndexValue + "' id='ui_chk" + j + "' value='" + subFieldList[j] + "'><label for='ui_chk" + j + "' class='label-check' contenteditable='true'>" + subFieldList[j] + "</label></div>"

        $(".frmdummyconts").remove();
        var checkBoxNum = "inputCheckBox" + checkBoxcount.toString();
        checkBoxlblCont = "checkBoxlblWrap" + checkBoxcount.toString();
        checkBoxInptCont = "checkBoxInptWrap" + checkBoxcount.toString();

        checkboxHTML = '<div id="' + checkBoxNum + '" FieldType="10" class="form-check-wrap del">\
					 <div class="frmeditrow labelTopBot">\
					<div id="'+ checkBoxlblCont + '" class="form-col-4 form-mb-col-12 w-100">\
					<div class="labelWrap">\
					<label contenteditable="true">'+ CheckBoxDetails.Name + '</label>\
				   </div>\
					   </div>\
					<div id="'+ checkBoxInptCont + '" FieldType="10" RowIndex="' + fieldrowindex + '" class="form-col-8 form-mb-col-12 w-100 addcheckbox">\
						'+ options + '\
					   </div>\
				</div>\
				<div class="delIconWrap">\
					<span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="alignCheckBox" class="fas fa-list-ul" checkalignattrvalue="' + checkBoxNum + '" title="Align Vertical"></span>\<span id="editCheckBoxbtn" editattrvalue="' + checkBoxNum + '" class="fas fa-pencil-alt" title="Edit"></span>\<span id="delParent" deleteattrvalue="' + checkBoxNum + '" class="fas fa-trash-alt" title="Delete"></span>\</div>\
			   </div>';

        $("#appendFields").append(checkboxHTML);

        AddFormBindingFieldsArray(CheckBoxDetails.Name, 10, fieldrowindex, CheckBoxDetails.SubFields, CheckBoxDetails.Mandatory, CheckBoxDetails.FormId, CheckBoxDetails.Id, checkBoxNum, CheckBoxDetails.ContactMappingField, CheckBoxDetails.FieldDisplay);

        if (formDetails.AppearEffectOfFields == 1) {
            $('[id^="checkBoxlblWrap"],[id^="checkBoxInptWrap"]').addClass('adCol-100');
        }
        else if (formDetails.AppearEffectOfFields == 2) {
            $('[id^="checkBoxlblWrap"],[id^="checkBoxInptWrap"]').addClass('adCol-100');
        }
    },
    BindSubmitButtonField: function (ButtonDetails) {
        fieldrowindex++;

        $(".frmdummyconts").remove();
        $("#appendFields").append('<div id="submitWrap" FieldType="24" class="btnWrap del"><div id="btnRow" class="frmeditrow parSubBtn"><div class="childSubBtn"><button FieldType="24" id="btnSubmit" type="submit" class="btn-style savebtn">' + ButtonDetails.Name + '</button></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editSubBtnName" editattrvalue="submitWrap" class="fas fa-pencil-alt" title="Edit Submit Name"></span><span id="delParent" deleteattrvalue="submitWrap" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        if (formDetails.ButtonPxOrPer) {
            $("#btnWidth").val("100%");
            $(".childSubBtn").addClass('btn-100');
            $(".btn-style").addClass('btn-100');
            $("#subBtnFullWidth").prop("checked", true);
        }
        else {
            $(".childSubBtn").removeClass('btn-100');
            $(".btn-style").removeClass('btn-100');
            $("#subBtnFullWidth").prop("checked", false);
        }

        AddFormBindingFieldsArray(ButtonDetails.Name, 24, fieldrowindex, "", 1, ButtonDetails.FormId, ButtonDetails.Id, "submitWrap", "", "");
    },

    BindFormFieldsToArray: function () {
        if (allFormFields != null && allFormFields.length > 0) {
            for (var i = 0; i < allFormFields.length; i++) {

                var Name = allFormFields[i].Name;

                for (var j = 0; j < allBindingFormFields.length; j++) {

                    if (Name == allBindingFormFields[j].Name) {
                        allFormFields[i].FormFieldIdentiferValue = allBindingFormFields[j].FormFieldIdentiferValue;
                        allFormFields[i].FormFieldIndex = allBindingFormFields[j].FormFieldIndex;
                        break;
                    }
                }
            }

            //becuase we need to set last fieldpriority while binding cox when adding new field priority should increment
            var maxpriority = getmaxFieldPriorityValue(allFormFields);
            FieldPriority = maxpriority;
        }
    },

    GetMainBackgroundDesignCss: function () {

        var MainBackgroundDesign = "";
        MainBackgroundDesign += "width:" + (cssObjectsFormBody.width != null && cssObjectsFormBody.width != "" && cssObjectsFormBody.width.length > 0 ? cssObjectsFormBody.width + "px" : "") + ";";
        MainBackgroundDesign += "height:" + (cssObjectsFormBody.height != null && cssObjectsFormBody.height != "" && cssObjectsFormBody.height.length > 0 ? cssObjectsFormBody.height + "px" : "") + ";";
        MainBackgroundDesign += "background-color:" + cssObjectsFormBody.bodyBgCol + ";";
        MainBackgroundDesign += "border-style:" + cssObjectsFormBody.bdyBrdStyleAll + ";";
        MainBackgroundDesign += "border-width:" + (cssObjectsFormBody.bdyBrdSizeAll != null && cssObjectsFormBody.bdyBrdSizeAll != "" && cssObjectsFormBody.bdyBrdSizeAll.length > 0 ? cssObjectsFormBody.bdyBrdSizeAll + "px" : "") + ";";
        MainBackgroundDesign += "border-color:" + cssObjectsFormBody.bdyBrdColAll + ";";
        MainBackgroundDesign += "border-top-style:" + cssObjectsFormBody.bdyBrdStyleTop + ";";
        MainBackgroundDesign += "border-top-width:" + (cssObjectsFormBody.bdyBrdWidthTop != null && cssObjectsFormBody.bdyBrdWidthTop != "" && cssObjectsFormBody.bdyBrdWidthTop.length > 0 ? cssObjectsFormBody.bdyBrdWidthTop + "px" : "") + ";";
        MainBackgroundDesign += "border-top-color:" + cssObjectsFormBody.bdyBrdColTop + ";";
        MainBackgroundDesign += "border-right-style:" + cssObjectsFormBody.bdyBrdStyleRight + ";";
        MainBackgroundDesign += "border-right-width:" + (cssObjectsFormBody.bdyBrdWidthRight != null && cssObjectsFormBody.bdyBrdWidthRight != "" && cssObjectsFormBody.bdyBrdWidthRight.length > 0 ? cssObjectsFormBody.bdyBrdWidthRight + "px" : "") + ";";
        MainBackgroundDesign += "border-right-color:" + cssObjectsFormBody.bdyBrdColRight + ";";
        MainBackgroundDesign += "border-bottom-style:" + cssObjectsFormBody.bdyBrdStyleBottm + ";";
        MainBackgroundDesign += "border-bottom-width:" + (cssObjectsFormBody.bdyBrdWidthBottm != null && cssObjectsFormBody.bdyBrdWidthBottm != "" && cssObjectsFormBody.bdyBrdWidthBottm.length > 0 ? cssObjectsFormBody.bdyBrdWidthBottm + "px" : "") + ";";
        MainBackgroundDesign += "border-bottom-color:" + cssObjectsFormBody.bdyBrdColBottm + ";";
        MainBackgroundDesign += "border-left-style:" + cssObjectsFormBody.bdyBrdStyleLft + ";";
        MainBackgroundDesign += "border-left-width:" + (cssObjectsFormBody.bdyBrdWidthLft != null && cssObjectsFormBody.bdyBrdWidthLft != "" && cssObjectsFormBody.bdyBrdWidthLft.length > 0 ? cssObjectsFormBody.bdyBrdWidthLft + "px" : "") + ";";
        MainBackgroundDesign += "border-left-color:" + cssObjectsFormBody.bdyBrdColLft + ";";
        MainBackgroundDesign += "padding:" + (cssObjectsFormBody.bdyPaddAll != null && cssObjectsFormBody.bdyPaddAll != "" && cssObjectsFormBody.bdyPaddAll.length > 0 ? cssObjectsFormBody.bdyPaddAll + "px" : "") + ";";
        MainBackgroundDesign += "padding-top:" + (cssObjectsFormBody.bdyPaddTop != null && cssObjectsFormBody.bdyPaddTop != "" && cssObjectsFormBody.bdyPaddTop.length > 0 ? cssObjectsFormBody.bdyPaddTop + "px" : "") + ";";
        MainBackgroundDesign += "padding-right:" + (cssObjectsFormBody.bdyPaddRit != null && cssObjectsFormBody.bdyPaddRit != "" && cssObjectsFormBody.bdyPaddRit.length > 0 ? cssObjectsFormBody.bdyPaddRit + "px" : "") + ";";
        MainBackgroundDesign += "padding-bottom:" + (cssObjectsFormBody.bdyPaddBottm != null && cssObjectsFormBody.bdyPaddBottm != "" && cssObjectsFormBody.bdyPaddBottm.length > 0 ? cssObjectsFormBody.bdyPaddBottm + "px" : "") + ";";
        MainBackgroundDesign += "padding-left:" + (cssObjectsFormBody.bdyPaddLft != null && cssObjectsFormBody.bdyPaddLft != "" && cssObjectsFormBody.bdyPaddLft.length > 0 ? cssObjectsFormBody.bdyPaddLft + "px" : "") + ";";
        MainBackgroundDesign += "border-radius:" + (cssObjectsFormBody.bdyBrdradiAll != null && cssObjectsFormBody.bdyBrdradiAll != "" && cssObjectsFormBody.bdyBrdradiAll.length > 0 ? cssObjectsFormBody.bdyBrdradiAll + "px" : "") + ";";
        MainBackgroundDesign += "border-top-left-radius:" + (cssObjectsFormBody.bdyBrdraditopleft != null && cssObjectsFormBody.bdyBrdraditopleft != "" && cssObjectsFormBody.bdyBrdraditopleft.length > 0 ? cssObjectsFormBody.bdyBrdraditopleft + "px" : "") + ";";
        MainBackgroundDesign += "border-top-right-radius:" + (cssObjectsFormBody.bdyBrdraditopright != null && cssObjectsFormBody.bdyBrdraditopright != "" && cssObjectsFormBody.bdyBrdraditopright.length > 0 ? cssObjectsFormBody.bdyBrdraditopright + "px" : "") + ";";
        MainBackgroundDesign += "border-bottom-left-radius:" + (cssObjectsFormBody.bdyBrdradibttmleft != null && cssObjectsFormBody.bdyBrdradibttmleft != "" && cssObjectsFormBody.bdyBrdradibttmleft.length > 0 ? cssObjectsFormBody.bdyBrdradibttmleft + "px" : "") + ";";
        MainBackgroundDesign += "border-bottom-right-radius:" + (cssObjectsFormBody.bdyBrdradibttmright != null && cssObjectsFormBody.bdyBrdradibttmright != "" && cssObjectsFormBody.bdyBrdradibttmright.length > 0 ? cssObjectsFormBody.bdyBrdradibttmright + "px" : "") + ";";

        if ($(".mainbgfilename").html() != "" && $("#spn_mainbg").val() != null && $("#spn_mainbg").val() != "" && $("#spn_mainbg").val().length > 0) {
            MainBackgroundDesign += "background-image:url(" + $("#spn_mainbg").val() + ")";
        }

        return MainBackgroundDesign;
    },
    GetTitleCss: function () {

        var TitleCss = "";

        TitleCss += "font-family:" + cssObjectsFormBody.frmTitFontFamily + ";";
        TitleCss += "font-size:" + (cssObjectsFormBody.frmtTitFontSiz != null && cssObjectsFormBody.frmtTitFontSiz != "" && cssObjectsFormBody.frmtTitFontSiz.length > 0 ? cssObjectsFormBody.frmtTitFontSiz + "px" : "") + ";";
        TitleCss += "color:" + cssObjectsFormBody.frmTitFontCol + ";";
        TitleCss += "text-align:" + cssObjectsFormBody.frmTitAlignType + ";";
        TitleCss += "font-weight:" + cssObjectsFormBody.frmTitFontStroke + ";";
        TitleCss += "font-weight:" + cssObjectsFormBody.frmTitFontStyle + ";";
        TitleCss += "text-transform:" + cssObjectsFormBody.frmTitTextCapital + ";";
        TitleCss += "margin:" + (cssObjectsFormBody.frmtitFontMargin != null && cssObjectsFormBody.frmtitFontMargin != "" && cssObjectsFormBody.frmtitFontMargin.length > 0 ? cssObjectsFormBody.frmtitFontMargin + "px" : "") + ";";
        TitleCss += "margin-top:" + (cssObjectsFormBody.frmtitFontMarginTop != null && cssObjectsFormBody.frmtitFontMarginTop != "" && cssObjectsFormBody.frmtitFontMarginTop.length > 0 ? cssObjectsFormBody.frmtitFontMarginTop + "px" : "") + ";";
        TitleCss += "margin-right:" + (cssObjectsFormBody.frmtitFontMarginRight != null && cssObjectsFormBody.frmtitFontMarginRight != "" && cssObjectsFormBody.frmtitFontMarginRight.length > 0 ? cssObjectsFormBody.frmtitFontMarginRight + "px" : "") + ";";
        TitleCss += "margin-bottom:" + (cssObjectsFormBody.frmtitFontMarginBttm != null && cssObjectsFormBody.frmtitFontMarginBttm != "" && cssObjectsFormBody.frmtitFontMarginBttm.length > 0 ? cssObjectsFormBody.frmtitFontMarginBttm + "px" : "") + ";";
        TitleCss += "margin-left:" + (cssObjectsFormBody.frmtitFontMarginLeft != null && cssObjectsFormBody.frmtitFontMarginLeft != "" && cssObjectsFormBody.frmtitFontMarginLeft.length > 0 ? cssObjectsFormBody.frmtitFontMarginLeft + "px" : "") + ";";
        TitleCss += "padding:" + (cssObjectsFormBody.frmTitFontPaddAll != null && cssObjectsFormBody.frmTitFontPaddAll != "" && cssObjectsFormBody.frmTitFontPaddAll.length > 0 ? cssObjectsFormBody.frmTitFontPaddAll + "px" : "") + ";";
        TitleCss += "padding-top:" + (cssObjectsFormBody.frmTitFontPaddTop != null && cssObjectsFormBody.frmTitFontPaddTop != "" && cssObjectsFormBody.frmTitFontPaddTop.length > 0 ? cssObjectsFormBody.frmTitFontPaddTop + "px" : "") + ";";
        TitleCss += "padding-right:" + (cssObjectsFormBody.frmTitFontPaddRight != null && cssObjectsFormBody.frmTitFontPaddRight != "" && cssObjectsFormBody.frmTitFontPaddRight.length > 0 ? cssObjectsFormBody.frmTitFontPaddRight + "px" : "") + ";";
        TitleCss += "padding-bottom:" + (cssObjectsFormBody.frmTitFontPaddBttm != null && cssObjectsFormBody.frmTitFontPaddBttm != "" && cssObjectsFormBody.frmTitFontPaddBttm.length > 0 ? cssObjectsFormBody.frmTitFontPaddBttm + "px" : "") + ";";
        TitleCss += "padding-left:" + (cssObjectsFormBody.frmTitFontPaddLeft != null && cssObjectsFormBody.frmTitFontPaddLeft != "" && cssObjectsFormBody.frmTitFontPaddLeft.length > 0 ? cssObjectsFormBody.frmTitFontPaddLeft + "px" : "") + ";";
        TitleCss += "background-color:" + cssObjectsFormBody.frmTitBgcolor + ";";
        TitleCss += "border-radius:" + (cssObjectsFormBody.frmTitRadiusAll != null && cssObjectsFormBody.frmTitRadiusAll != "" && cssObjectsFormBody.frmTitRadiusAll.length > 0 ? cssObjectsFormBody.frmTitRadiusAll + "px" : "") + ";";
        TitleCss += "border-top-left-radius:" + (cssObjectsFormBody.frmTitRadiusTopLeft != null && cssObjectsFormBody.frmTitRadiusTopLeft != "" && cssObjectsFormBody.frmTitRadiusTopLeft.length > 0 ? cssObjectsFormBody.frmTitRadiusTopLeft + "px" : "") + ";";
        TitleCss += "border-top-right-radius:" + (cssObjectsFormBody.frmTitRadiusTopRight != null && cssObjectsFormBody.frmTitRadiusTopRight != "" && cssObjectsFormBody.frmTitRadiusTopRight.length > 0 ? cssObjectsFormBody.frmTitRadiusTopRight + "px" : "") + ";";
        TitleCss += "border-bottom-left-radius:" + (cssObjectsFormBody.frmTitRadiusBttmLeft != null && cssObjectsFormBody.frmTitRadiusBttmLeft != "" && cssObjectsFormBody.frmTitRadiusBttmLeft.length > 0 ? cssObjectsFormBody.frmTitRadiusBttmLeft + "px" : "") + ";";
        TitleCss += "border-bottom-right-radius:" + (cssObjectsFormBody.frmTitRadiusBttmRight != null && cssObjectsFormBody.frmTitRadiusBttmRight != "" && cssObjectsFormBody.frmTitRadiusBttmRight.length > 0 ? cssObjectsFormBody.frmTitRadiusBttmRight + "px" : "") + ";";
        TitleCss += "border-style:" + cssObjectsFormBody.frmTitBrdStylAll + ";";
        TitleCss += "border-width:" + (cssObjectsFormBody.frmTitBrdWidAll != null && cssObjectsFormBody.frmTitBrdWidAll != "" && cssObjectsFormBody.frmTitBrdWidAll.length > 0 ? cssObjectsFormBody.frmTitBrdWidAll + "px" : "") + ";";
        TitleCss += "border-color:" + cssObjectsFormBody.frmTitBrdColAll + ";";
        TitleCss += "border-top-style:" + cssObjectsFormBody.frmTitBrdStylTop + ";";
        TitleCss += "border-top-width:" + (cssObjectsFormBody.frmTitBrdWidTop != null && cssObjectsFormBody.frmTitBrdWidTop != "" && cssObjectsFormBody.frmTitBrdWidTop.length > 0 ? cssObjectsFormBody.frmTitBrdWidTop + "px" : "") + ";";
        TitleCss += "border-top-color:" + cssObjectsFormBody.frmTitBrdColTop + ";";
        TitleCss += "border-right-style:" + cssObjectsFormBody.frmTitBrdStylRight + ";";
        TitleCss += "border-right-width:" + (cssObjectsFormBody.frmTitBrdWidRight != null && cssObjectsFormBody.frmTitBrdWidRight != "" && cssObjectsFormBody.frmTitBrdWidRight.length > 0 ? cssObjectsFormBody.frmTitBrdWidRight + "px" : "") + ";";
        TitleCss += "border-right-color:" + cssObjectsFormBody.frmTitBrdColRight + ";";
        TitleCss += "border-bottom-style:" + cssObjectsFormBody.frmTitBrdStyleBttm + ";";
        TitleCss += "border-bottom-width:" + (cssObjectsFormBody.frmTitBrdWidBttm != null && cssObjectsFormBody.frmTitBrdWidBttm != "" && cssObjectsFormBody.frmTitBrdWidBttm.length > 0 ? cssObjectsFormBody.frmTitBrdWidBttm + "px" : "") + ";";
        TitleCss += "border-bottom-color:" + cssObjectsFormBody.frmTitBrdColBttm + ";";
        TitleCss += "border-left-style:" + cssObjectsFormBody.frmTitBrdStylLeft + ";";
        TitleCss += "border-left-width:" + (cssObjectsFormBody.frmTitBrdWidLeft != null && cssObjectsFormBody.frmTitBrdWidLeft != "" && cssObjectsFormBody.frmTitBrdWidLeft.length > 0 ? cssObjectsFormBody.frmTitBrdWidLeft + "px" : "") + ";";
        TitleCss += "border-left-color:" + cssObjectsFormBody.frmTitBrdColLeft + ";";
        return TitleCss;
    },
    GetDescriptionCss: function () {

        var DescriptionCss = "";
        var DescFirstPartCss = "", DescSecondPartCss = "";

        DescFirstPartCss += "text-align:" + cssObjectsFormBody.frmDesTxtAlign + ";";
        DescFirstPartCss += "font-family:" + cssObjectsFormBody.frmDesFont + ";";
        DescFirstPartCss += "font-size:" + (cssObjectsFormBody.frmDesFontSize != null && cssObjectsFormBody.frmDesFontSize != "" && cssObjectsFormBody.frmDesFontSize.length > 0 ? cssObjectsFormBody.frmDesFontSize + "px" : "") + ";";
        DescFirstPartCss += "color:" + cssObjectsFormBody.frmDesFontCol + ";";
        DescFirstPartCss += "font-weight:" + cssObjectsFormBody.frmDesFontStroke + ";";
        DescFirstPartCss += "font-style:" + cssObjectsFormBody.frmDesFontStyle + ";";
        DescFirstPartCss += "text-transform:" + cssObjectsFormBody.frmDesFontCaps + ";";
        DescFirstPartCss += "background-color:" + cssObjectsFormBody.frmDesTxtBgCol + ";";
        DescFirstPartCss += "padding:" + (cssObjectsFormBody.frmDesFontPaddAll != null && cssObjectsFormBody.frmDesFontPaddAll != "" && cssObjectsFormBody.frmDesFontPaddAll.length > 0 ? cssObjectsFormBody.frmDesFontPaddAll + "px" : "") + ";";
        DescFirstPartCss += "padding-top:" + (cssObjectsFormBody.frmDesFontPaddTop != null && cssObjectsFormBody.frmDesFontPaddTop != "" && cssObjectsFormBody.frmDesFontPaddTop.length > 0 ? cssObjectsFormBody.frmDesFontPaddTop + "px" : "") + ";";
        DescFirstPartCss += "padding-right:" + (cssObjectsFormBody.frmDesFontPaddRight != null && cssObjectsFormBody.frmDesFontPaddRight != "" && cssObjectsFormBody.frmDesFontPaddRight.length > 0 ? cssObjectsFormBody.frmDesFontPaddRight + "px" : "") + ";";
        DescFirstPartCss += "padding-bottom:" + (cssObjectsFormBody.frmDesFontPaddBttm != null && cssObjectsFormBody.frmDesFontPaddBttm != "" && cssObjectsFormBody.frmDesFontPaddBttm.length > 0 ? cssObjectsFormBody.frmDesFontPaddBttm + "px" : "") + ";";
        DescFirstPartCss += "padding-left:" + (cssObjectsFormBody.frmDesFontPaddLeft != null && cssObjectsFormBody.frmDesFontPaddLeft != "" && cssObjectsFormBody.frmDesFontPaddLeft.length > 0 ? cssObjectsFormBody.frmDesFontPaddLeft + "px" : "") + ";";
        DescFirstPartCss += "border-radius:" + (cssObjectsFormBody.frmDesRadiusAll != null && cssObjectsFormBody.frmDesRadiusAll != "" && cssObjectsFormBody.frmDesRadiusAll.length > 0 ? cssObjectsFormBody.frmDesRadiusAll + "px" : "") + ";";
        DescFirstPartCss += "border-top-left-radius:" + (cssObjectsFormBody.frmDesRadiusTopLeft != null && cssObjectsFormBody.frmDesRadiusTopLeft != "" && cssObjectsFormBody.frmDesRadiusTopLeft.length > 0 ? cssObjectsFormBody.frmDesRadiusTopLeft + "px" : "") + ";";
        DescFirstPartCss += "border-top-right-radius:" + (cssObjectsFormBody.frmDesRadiusTopRight != null && cssObjectsFormBody.frmDesRadiusTopRight != "" && cssObjectsFormBody.frmDesRadiusTopRight.length > 0 ? cssObjectsFormBody.frmDesRadiusTopRight + "px" : "") + ";";
        DescFirstPartCss += "border-bottom-left-radius:" + (cssObjectsFormBody.frmDesRadiusBttmLeft != null && cssObjectsFormBody.frmDesRadiusBttmLeft != "" && cssObjectsFormBody.frmDesRadiusBttmLeft.length > 0 ? cssObjectsFormBody.frmDesRadiusBttmLeft + "px" : "") + ";";
        DescFirstPartCss += "border-bottom-right-radius:" + (cssObjectsFormBody.frmDesRadiusBttmRight != null && cssObjectsFormBody.frmDesRadiusBttmRight != "" && cssObjectsFormBody.frmDesRadiusBttmRight.length > 0 ? cssObjectsFormBody.frmDesRadiusBttmRight + "px" : "") + ";";
        DescFirstPartCss += "border-style:" + cssObjectsFormBody.frmDesBrdStylAll + ";";
        DescFirstPartCss += "border-width:" + (cssObjectsFormBody.frmDesBrdWidAll != null && cssObjectsFormBody.frmDesBrdWidAll != "" && cssObjectsFormBody.frmDesBrdWidAll.length > 0 ? cssObjectsFormBody.frmDesBrdWidAll + "px" : "") + ";";
        DescFirstPartCss += "border-color:" + cssObjectsFormBody.frmDesBrdColAll + ";";
        DescFirstPartCss += "border-right-style:" + cssObjectsFormBody.frmDesBrdStylRight + ";";
        DescFirstPartCss += "border-right-width:" + (cssObjectsFormBody.frmDesBrdWidRight != null && cssObjectsFormBody.frmDesBrdWidRight != "" && cssObjectsFormBody.frmDesBrdWidRight.length > 0 ? cssObjectsFormBody.frmDesBrdWidRight + "px" : "") + ";";
        DescFirstPartCss += "border-right-color:" + cssObjectsFormBody.frmDesBrdColRight + ";";
        DescFirstPartCss += "border-top-style:" + cssObjectsFormBody.frmDesBrdStylTop + ";";
        DescFirstPartCss += "border-top-width:" + (cssObjectsFormBody.frmDesBrdWidTop != null && cssObjectsFormBody.frmDesBrdWidTop != "" && cssObjectsFormBody.frmDesBrdWidTop.length > 0 ? cssObjectsFormBody.frmDesBrdWidTop + "px" : "") + ";";
        DescFirstPartCss += "border-top-color:" + cssObjectsFormBody.frmDesBrdColTop + ";";
        DescFirstPartCss += "border-bottom-style:" + cssObjectsFormBody.frmDesBrdStyleBttm + ";";
        DescFirstPartCss += "border-bottom-width:" + (cssObjectsFormBody.frmDesBrdWidBttm != null && cssObjectsFormBody.frmDesBrdWidBttm != "" && cssObjectsFormBody.frmDesBrdWidBttm.length > 0 ? cssObjectsFormBody.frmDesBrdWidBttm + "px" : "") + ";";
        DescFirstPartCss += "border-bottom-color:" + cssObjectsFormBody.frmDesBrdColBttm + ";";
        DescFirstPartCss += "border-left-style:" + cssObjectsFormBody.frmDesBrdStylLeft + ";";
        DescFirstPartCss += "border-left-width:" + (cssObjectsFormBody.frmDesBrdWidLeft != null && cssObjectsFormBody.frmDesBrdWidLeft != "" && cssObjectsFormBody.frmDesBrdWidLeft.length > 0 ? cssObjectsFormBody.frmDesBrdWidLeft + "px" : "") + ";";
        DescFirstPartCss += "border-left-color:" + cssObjectsFormBody.frmDesBrdColLeft + ";";

        DescSecondPartCss += "margin:" + (cssObjectsFormBody.frmDesFontMarg != null && cssObjectsFormBody.frmDesFontMarg != "" && cssObjectsFormBody.frmDesFontMarg.length > 0 ? cssObjectsFormBody.frmDesFontMarg + "px" : "") + ";";
        DescSecondPartCss += "margin-top:" + (cssObjectsFormBody.frmDesFontMargTop != null && cssObjectsFormBody.frmDesFontMargTop != "" && cssObjectsFormBody.frmDesFontMargTop.length > 0 ? cssObjectsFormBody.frmDesFontMargTop + "px" : "") + ";";
        DescSecondPartCss += "margin-right:" + (cssObjectsFormBody.frmDesFontMargRighted != null && cssObjectsFormBody.frmDesFontMargRighted != "" && cssObjectsFormBody.frmDesFontMargRighted.length > 0 ? cssObjectsFormBody.frmDesFontMargRighted + "px" : "") + ";";
        DescSecondPartCss += "margin-bottom:" + (cssObjectsFormBody.frmDesFontMargBttm != null && cssObjectsFormBody.frmDesFontMargBttm != "" && cssObjectsFormBody.frmDesFontMargBttm.length > 0 ? cssObjectsFormBody.frmDesFontMargBttm + "px" : "") + ";";
        DescSecondPartCss += "margin-left:" + (cssObjectsFormBody.frmDesFontMargLeft != null && cssObjectsFormBody.frmDesFontMargLeft != "" && cssObjectsFormBody.frmDesFontMargLeft.length > 0 ? cssObjectsFormBody.frmDesFontMargLeft + "px" : "") + ";";

        DescriptionCss = DescFirstPartCss + "@$@" + DescSecondPartCss;
        return DescriptionCss;
    },
    GetLabelCss: function () {

        var LableCss = "";

        var LabelFirstPartCss = "", LabelSecondPartCss = "";

        LabelFirstPartCss += "justify-content:" + cssObjectsFormBody.lblTextAlignLeft + ";";
        LabelFirstPartCss += "justify-content:" + cssObjectsFormBody.lblTextAlignCenter + ";";
        LabelFirstPartCss += "justify-content:" + cssObjectsFormBody.lblTextAlignRight + ";";
        LabelFirstPartCss += "padding:" + (cssObjectsFormBody.lblTextPaddAll != null && cssObjectsFormBody.lblTextPaddAll != "" && cssObjectsFormBody.lblTextPaddAll.length > 0 ? cssObjectsFormBody.lblTextPaddAll + "px" : "") + ";";
        LabelFirstPartCss += "padding-top:" + (cssObjectsFormBody.lblTextPaddTop != null && cssObjectsFormBody.lblTextPaddTop != "" && cssObjectsFormBody.lblTextPaddTop.length > 0 ? cssObjectsFormBody.lblTextPaddTop + "px" : "") + ";";
        LabelFirstPartCss += "padding-right:" + (cssObjectsFormBody.lblTextPaddRight != null && cssObjectsFormBody.lblTextPaddRight != "" && cssObjectsFormBody.lblTextPaddRight.length > 0 ? cssObjectsFormBody.lblTextPaddRight + "px" : "") + ";";
        LabelFirstPartCss += "padding-bottom:" + (cssObjectsFormBody.lblTextPaddBottom != null && cssObjectsFormBody.lblTextPaddBottom != "" && cssObjectsFormBody.lblTextPaddBottom.length > 0 ? cssObjectsFormBody.lblTextPaddBottom + "px" : "") + ";";
        LabelFirstPartCss += "padding-left:" + (cssObjectsFormBody.lblTextPaddLeft != null && cssObjectsFormBody.lblTextPaddLeft != "" && cssObjectsFormBody.lblTextPaddLeft.length > 0 ? cssObjectsFormBody.lblTextPaddLeft + "px" : "") + ";";
        LabelFirstPartCss += "font-family:" + cssObjectsFormBody.lblTextFontFamily + ";";
        LabelFirstPartCss += "font-size:" + (cssObjectsFormBody.lblTextFontSize != null && cssObjectsFormBody.lblTextFontSize != "" && cssObjectsFormBody.lblTextFontSize.length > 0 ? cssObjectsFormBody.lblTextFontSize + "px" : "") + ";";
        LabelFirstPartCss += "color:" + cssObjectsFormBody.lblTextFontColor + ";";
        LabelFirstPartCss += "font-weight:" + cssObjectsFormBody.lblTextFontWeight + " !important" + ";";
        LabelFirstPartCss += "font-style:" + cssObjectsFormBody.lblTextFontStyle + ";";
        LabelFirstPartCss += "text-transform:" + cssObjectsFormBody.lblTextFontCaps + ";";

        LabelSecondPartCss += "height:" + (cssObjectsFormBody.textBoxHeight != null && cssObjectsFormBody.textBoxHeight != "" && cssObjectsFormBody.textBoxHeight.length > 0 ? cssObjectsFormBody.textBoxHeight + "px" : "") + ";";

        LableCss = LabelFirstPartCss + "@$@" + LabelSecondPartCss;

        return LableCss;
    },
    GetTextBoxCss: function () {

        var TextboxDropCss = "";

        TextboxDropCss += "font-family:" + cssObjectsFormBody.textBoxFontFamily + ";";
        TextboxDropCss += "font-size:" + (cssObjectsFormBody.textBoxFontSize != null && cssObjectsFormBody.textBoxFontSize != "" && cssObjectsFormBody.textBoxFontSize.length > 0 ? cssObjectsFormBody.textBoxFontSize + "px" : "") + ";";
        TextboxDropCss += "color:" + cssObjectsFormBody.textBoxFontColor + ";";
        TextboxDropCss += "font-weight:" + cssObjectsFormBody.textBoxFontWeight + ";";
        TextboxDropCss += "font-style:" + cssObjectsFormBody.textBoxFontStyle + ";";
        TextboxDropCss += "text-indent:" + (cssObjectsFormBody.textBoxFontIndent != null && cssObjectsFormBody.textBoxFontIndent != "" && cssObjectsFormBody.textBoxFontIndent.length > 0 ? cssObjectsFormBody.textBoxFontIndent + "px" : "") + ";";
        TextboxDropCss += "height:" + (cssObjectsFormBody.textBoxHeight != null && cssObjectsFormBody.textBoxHeight != "" && cssObjectsFormBody.textBoxHeight.length > 0 ? cssObjectsFormBody.textBoxHeight + "px" : "") + ";";
        TextboxDropCss += "background-color:" + cssObjectsFormBody.textBoxBgColor + ";";
        TextboxDropCss += "border:" + cssObjectsFormBody.textBoxAllBrd + ";";
        TextboxDropCss += "border-width:" + (cssObjectsFormBody.textBoxAllBrdsize != null && cssObjectsFormBody.textBoxAllBrdsize != "" && cssObjectsFormBody.textBoxAllBrdsize.length > 0 ? cssObjectsFormBody.textBoxAllBrdsize + "px" : "") + ";";
        TextboxDropCss += "border-color:" + cssObjectsFormBody.textBoxAllBrdcol + ";";
        TextboxDropCss += "border-top-style:" + cssObjectsFormBody.textBoxBrdTop + ";";
        TextboxDropCss += "border-top-width:" + (cssObjectsFormBody.textBoxBrdTopSize != null && cssObjectsFormBody.textBoxBrdTopSize != "" && cssObjectsFormBody.textBoxBrdTopSize.length > 0 ? cssObjectsFormBody.textBoxBrdTopSize + "px" : "") + ";";
        TextboxDropCss += "border-top-color:" + cssObjectsFormBody.textBoxBrdTopCol + ";";
        TextboxDropCss += "border-right-style:" + cssObjectsFormBody.textBoxBrdRight + ";";
        TextboxDropCss += "border-right-width:" + (cssObjectsFormBody.textBoxBrdRightSize != null && cssObjectsFormBody.textBoxBrdRightSize != "" && cssObjectsFormBody.textBoxBrdRightSize.length > 0 ? cssObjectsFormBody.textBoxBrdRightSize + "px" : "") + ";";
        TextboxDropCss += "border-right-color:" + cssObjectsFormBody.textBoxBrdRightCol + ";";
        TextboxDropCss += "border-bottom-style:" + cssObjectsFormBody.textBoxBrdBttm + ";";
        TextboxDropCss += "border-bottom-width:" + (cssObjectsFormBody.textBoxBrdBttmSize != null && cssObjectsFormBody.textBoxBrdBttmSize != "" && cssObjectsFormBody.textBoxBrdBttmSize.length > 0 ? cssObjectsFormBody.textBoxBrdBttmSize + "px" : "") + ";";
        TextboxDropCss += "border-bottom-color:" + cssObjectsFormBody.textBoxBrdBttmCol + ";";
        TextboxDropCss += "border-left-style:" + cssObjectsFormBody.textBoxBrdleft + ";";
        TextboxDropCss += "border-left-width:" + (cssObjectsFormBody.textBoxBrdLeftSize != null && cssObjectsFormBody.textBoxBrdLeftSize != "" && cssObjectsFormBody.textBoxBrdLeftSize.length > 0 ? cssObjectsFormBody.textBoxBrdLeftSize + "px" : "") + ";";
        TextboxDropCss += "border-left-color:" + cssObjectsFormBody.textBoxBrdLeftCol + ";";
        TextboxDropCss += "justify-content:" + cssObjectsFormBody.btnAlignLeft + ";";
        TextboxDropCss += "border-radius:" + (cssObjectsFormBody.textBoxBrdRadiusAll != null && cssObjectsFormBody.textBoxBrdRadiusAll != "" && cssObjectsFormBody.textBoxBrdRadiusAll.length > 0 ? cssObjectsFormBody.textBoxBrdRadiusAll + "px" : "") + ";";
        TextboxDropCss += "border-top-left-radius:" + (cssObjectsFormBody.textBoxBrdRadiusTopLeft != null && cssObjectsFormBody.textBoxBrdRadiusTopLeft != "" && cssObjectsFormBody.textBoxBrdRadiusTopLeft.length > 0 ? cssObjectsFormBody.textBoxBrdRadiusTopLeft + "px" : "") + ";";
        TextboxDropCss += "border-top-right-radius:" + (cssObjectsFormBody.textBoxBrdRadiusTopRight != null && cssObjectsFormBody.textBoxBrdRadiusTopRight != "" && cssObjectsFormBody.textBoxBrdRadiusTopRight.length > 0 ? cssObjectsFormBody.textBoxBrdRadiusTopRight + "px" : "") + ";";
        TextboxDropCss += "border-bottom-left-radius:" + (cssObjectsFormBody.textBoxBrdRadiusBttmLeft != null && cssObjectsFormBody.textBoxBrdRadiusBttmLeft != "" && cssObjectsFormBody.textBoxBrdRadiusBttmLeft.length > 0 ? cssObjectsFormBody.textBoxBrdRadiusBttmLeft + "px" : "") + ";";
        TextboxDropCss += "border-bottom-right-radius:" + (cssObjectsFormBody.textBoxBrdRadiusBttmRight != null && cssObjectsFormBody.textBoxBrdRadiusBttmRight != "" && cssObjectsFormBody.textBoxBrdRadiusBttmRight.length > 0 ? cssObjectsFormBody.textBoxBrdRadiusBttmRight + "px" : "") + ";";

        return TextboxDropCss;
    },
    GetCloseCss: function () {

        var CloseCss = "";

        var CloseFirstPartCss = "", CloseSecondPartCss = "";

        CloseFirstPartCss += "width:" + (cssObjectsFormBody.frmClsWidth != null && cssObjectsFormBody.frmClsWidth != "" && cssObjectsFormBody.frmClsWidth.length > 0 ? cssObjectsFormBody.frmClsWidth + "px" : "") + ";";
        CloseFirstPartCss += "height:" + (cssObjectsFormBody.frmClsWidth != null && cssObjectsFormBody.frmClsWidth != "" && cssObjectsFormBody.frmClsWidth.length > 0 ? cssObjectsFormBody.frmClsWidth + "px" : "") + ";";
        CloseFirstPartCss += "font-size:" + (cssObjectsFormBody.frmClsFontSize != null && cssObjectsFormBody.frmClsFontSize != "" && cssObjectsFormBody.frmClsFontSize.length > 0 ? cssObjectsFormBody.frmClsFontSize + "px" : "") + ";";
        CloseFirstPartCss += "color:" + cssObjectsFormBody.frmClsFontCol + ";";
        CloseFirstPartCss += "background-color:" + cssObjectsFormBody.frmClsBgCol + ";";
        CloseFirstPartCss += "border-style:" + cssObjectsFormBody.frmClsBrdStyle + ";";
        CloseFirstPartCss += "border-width:" + (cssObjectsFormBody.frmClsBrdSiz != null && cssObjectsFormBody.frmClsBrdSiz != "" && cssObjectsFormBody.frmClsBrdSiz.length > 0 ? cssObjectsFormBody.frmClsBrdSiz + "px" : "") + ";";
        CloseFirstPartCss += "border-color:" + cssObjectsFormBody.frmClsBrdCol + ";";
        CloseFirstPartCss += "top:" + (cssObjectsFormBody.frmClsSpacTop != null && cssObjectsFormBody.frmClsSpacTop != "" && cssObjectsFormBody.frmClsSpacTop.length > 0 ? cssObjectsFormBody.frmClsSpacTop + "px" : "") + ";";
        CloseFirstPartCss += "right:" + (cssObjectsFormBody.frmClsSpacRight != null && cssObjectsFormBody.frmClsSpacRight != "" && cssObjectsFormBody.frmClsSpacRight.length > 0 ? cssObjectsFormBody.frmClsSpacRight + "px" : "") + ";";
        CloseFirstPartCss += "bottom:" + (cssObjectsFormBody.frmClsSpacBottom != null && cssObjectsFormBody.frmClsSpacBottom != "" && cssObjectsFormBody.frmClsSpacBottom.length > 0 ? cssObjectsFormBody.frmClsSpacBottom + "px" : "") + ";";

        CloseSecondPartCss += "left:" + (cssObjectsFormBody.frmClsSpacLeft != null && cssObjectsFormBody.frmClsSpacLeft != "" && cssObjectsFormBody.frmClsSpacLeft.length > 0 ? cssObjectsFormBody.frmClsSpacLeft + "px" : "") + ";";

        CloseCss = CloseFirstPartCss + "@$@" + CloseSecondPartCss;

        return CloseCss;
    },
    GetButtonCss: function () {

        var ButtonCss = "";

        var ButtonFirstPartCss = "", ButtonSecondPartCss = "", ButtonThirdPartCss = "", ButtonFourthPartCss = "";

        ButtonFirstPartCss += "justify-content:" + cssObjectsFormBody.btnAlignCenter + ";";
        ButtonFirstPartCss += "justify-content:" + cssObjectsFormBody.btnAlignRight + ";";

        ButtonSecondPartCss += "width:" + (cssObjectsFormBody.btnWidth != null && cssObjectsFormBody.btnWidth != "" && cssObjectsFormBody.btnWidth.length > 0 ? cssObjectsFormBody.btnWidth + "px !important" : null) + ";";
        ButtonSecondPartCss += "margin:" + (cssObjectsFormBody.subBtnMarginAll != null && cssObjectsFormBody.subBtnMarginAll != "" && cssObjectsFormBody.subBtnMarginAll.length > 0 ? cssObjectsFormBody.subBtnMarginAll + "px !important" : "") + ";";
        ButtonSecondPartCss += "margin-top:" + (cssObjectsFormBody.subBtnMarginTop != null && cssObjectsFormBody.subBtnMarginTop != "" && cssObjectsFormBody.subBtnMarginTop.length > 0 ? cssObjectsFormBody.subBtnMarginTop + "px !important" : "") + ";";
        ButtonSecondPartCss += "margin-bottom:" + (cssObjectsFormBody.subBtnMarginBttm != null && cssObjectsFormBody.subBtnMarginBttm != "" && cssObjectsFormBody.subBtnMarginBttm.length > 0 ? cssObjectsFormBody.subBtnMarginBttm + "px !important" : "") + ";";
        ButtonSecondPartCss += "margin-left:" + (cssObjectsFormBody.subBtnMarginLeft != null && cssObjectsFormBody.subBtnMarginLeft != "" && cssObjectsFormBody.subBtnMarginLeft.length > 0 ? cssObjectsFormBody.subBtnMarginLeft + "px !important" : "") + ";";
        ButtonSecondPartCss += "margin-right:" + (cssObjectsFormBody.subBtnMarginRight != null && cssObjectsFormBody.subBtnMarginRight != "" && cssObjectsFormBody.subBtnMarginRight.length > 0 ? cssObjectsFormBody.subBtnMarginRight + "px !important" : "") + ";";

        ButtonThirdPartCss += "width:" + (cssObjectsFormBody.btnWidth != null && cssObjectsFormBody.btnWidth != "" && cssObjectsFormBody.btnWidth.length > 0 ? cssObjectsFormBody.btnWidth + "px !important" : "") + ";";
        ButtonThirdPartCss += "height:" + (cssObjectsFormBody.subBtnHeight != null && cssObjectsFormBody.subBtnHeight != "" && cssObjectsFormBody.subBtnHeight.length > 0 ? cssObjectsFormBody.subBtnHeight + "px !important" : "") + ";";
        ButtonThirdPartCss += "background-color:" + cssObjectsFormBody.subBtnBgCol + ";";
        ButtonThirdPartCss += "font-family:" + cssObjectsFormBody.subBtnFontFamily + ";";
        ButtonThirdPartCss += "font-size:" + (cssObjectsFormBody.subBtnFontSize != null && cssObjectsFormBody.subBtnFontSize != "" && cssObjectsFormBody.subBtnFontSize.length > 0 ? cssObjectsFormBody.subBtnFontSize + "px !important" : "") + ";";
        ButtonThirdPartCss += "color:" + cssObjectsFormBody.subBtnFontcol + "!important" + ";";
        ButtonThirdPartCss += "font-style:" + cssObjectsFormBody.subBtnFontStyle + ";";
        ButtonThirdPartCss += "font-weight:" + cssObjectsFormBody.subBtnFontStroke + ";";
        ButtonThirdPartCss += "text-transform:" + cssObjectsFormBody.subBtnTxtTransform + ";";
        ButtonThirdPartCss += "border-radius:" + (cssObjectsFormBody.subBtnBorderRadius != null && cssObjectsFormBody.subBtnBorderRadius != "" && cssObjectsFormBody.subBtnBorderRadius.length > 0 ? cssObjectsFormBody.subBtnBorderRadius + "px !important" : "") + ";";
        ButtonThirdPartCss += "border-top-left-radius:" + (cssObjectsFormBody.subBtnBorderRadiusTopLeft != null && cssObjectsFormBody.subBtnBorderRadiusTopLeft != "" && cssObjectsFormBody.subBtnBorderRadiusTopLeft.length > 0 ? cssObjectsFormBody.subBtnBorderRadiusTopLeft + "px !important" : "") + ";";
        ButtonThirdPartCss += "border-top-right-radius:" + (cssObjectsFormBody.subBtnBorderRadiusTopRight != null && cssObjectsFormBody.subBtnBorderRadiusTopRight != "" && cssObjectsFormBody.subBtnBorderRadiusTopRight.length > 0 ? cssObjectsFormBody.subBtnBorderRadiusTopRight + "px !important" : "") + ";";
        ButtonThirdPartCss += "border-bottom-left-radius:" + (cssObjectsFormBody.subBtnBorderRadiusbottomLeft != null && cssObjectsFormBody.subBtnBorderRadiusbottomLeft != "" && cssObjectsFormBody.subBtnBorderRadiusbottomLeft.length > 0 ? cssObjectsFormBody.subBtnBorderRadiusbottomLeft + "px !important" : "") + ";";
        ButtonThirdPartCss += "border-bottom-right-radius:" + (cssObjectsFormBody.subBtnBorderRadiusbottomRight != null && cssObjectsFormBody.subBtnBorderRadiusbottomRight != "" && cssObjectsFormBody.subBtnBorderRadiusbottomRight.length > 0 ? cssObjectsFormBody.subBtnBorderRadiusbottomRight + "px !important" : "") + ";";
        ButtonThirdPartCss += "border-style:" + cssObjectsFormBody.subBtnBorderAll + ";";
        ButtonThirdPartCss += "border-width:" + (cssObjectsFormBody.subBtnBorderSizeAll != null && cssObjectsFormBody.subBtnBorderSizeAll != "" && cssObjectsFormBody.subBtnBorderSizeAll.length > 0 ? cssObjectsFormBody.subBtnBorderSizeAll + "px !important" : "") + ";";
        ButtonThirdPartCss += "border-color:" + cssObjectsFormBody.subBtnBorderColAll + ";";
        ButtonThirdPartCss += "border-top-style:" + cssObjectsFormBody.subBtnBrdIndivTop + ";";
        ButtonThirdPartCss += "border-top-width:" + (cssObjectsFormBody.subBtnBrdIndivTopSize != null && cssObjectsFormBody.subBtnBrdIndivTopSize != "" && cssObjectsFormBody.subBtnBrdIndivTopSize.length > 0 ? cssObjectsFormBody.subBtnBrdIndivTopSize + "px !important" : "") + ";";
        ButtonThirdPartCss += "border-top-color:" + cssObjectsFormBody.subBtnBrdIndivTopCol + ";";
        ButtonThirdPartCss += "border-right-style:" + cssObjectsFormBody.subBtnBrdIndivRit + ";";
        ButtonThirdPartCss += "border-right-width:" + (cssObjectsFormBody.subBtnBrdIndivRitSize != null && cssObjectsFormBody.subBtnBrdIndivRitSize != "" && cssObjectsFormBody.subBtnBrdIndivRitSize.length > 0 ? cssObjectsFormBody.subBtnBrdIndivRitSize + "px !important" : "") + ";";
        ButtonThirdPartCss += "border-right-color:" + cssObjectsFormBody.subBtnBrdIndivRitCol + ";";
        ButtonThirdPartCss += "border-bottom-style:" + cssObjectsFormBody.subBtnBrdIndivBottom + ";";
        ButtonThirdPartCss += "border-bottom-width:" + (cssObjectsFormBody.subBtnBrdIndivBttmSiz != null && cssObjectsFormBody.subBtnBrdIndivBttmSiz != "" && cssObjectsFormBody.subBtnBrdIndivBttmSiz.length > 0 ? cssObjectsFormBody.subBtnBrdIndivBttmSiz + "px !important" : "") + ";";
        ButtonThirdPartCss += "border-bottom-color:" + cssObjectsFormBody.subBtnBrdIndivBttmCol + ";";
        ButtonThirdPartCss += "border-left-style:" + cssObjectsFormBody.subBtnBrdIndivLeft + ";";
        ButtonThirdPartCss += "border-left-width:" + (cssObjectsFormBody.subBtnBrdIndivLftSiz != null && cssObjectsFormBody.subBtnBrdIndivLftSiz != "" && cssObjectsFormBody.subBtnBrdIndivLftSiz.length > 0 ? cssObjectsFormBody.subBtnBrdIndivLftSiz + "px !important" : "") + ";";
        ButtonThirdPartCss += "border-left-color:" + cssObjectsFormBody.subBtnBrdIndivLftCol + ";";

        ButtonFourthPartCss += "background-color:" + cssObjectsFormBody.subBtnBgHvCol + ";";
        ButtonFourthPartCss += "color:" + cssObjectsFormBody.subBtnTxtHvrCol + "!important" + ";";

        ButtonCss = ButtonFirstPartCss + "@$@" + ButtonSecondPartCss + "@$@" + ButtonThirdPartCss + "@$@" + ButtonFourthPartCss;

        return ButtonCss;
    },

    BindMainBodyCss: function () {
        var mainDesignData = "";

        if (formDetails.IsMainBackgroundDesignCustom == false && formDetails.MainBackgroundDesign != null && formDetails.MainBackgroundDesign.length > 0) {

            mainDesignData = $.trim(formDetails.MainBackgroundDesign);
            mainDesignData = mainDesignData.split(";");

            if (formDetails.AppearEffectOfFields == 1) {
                $("#labelplaceholder").addClass("lbl-active-bg");
                $("#labelDefaultAlign,#labelTopAlign").removeClass("lbl-active-bg");
            }
            else if (formDetails.AppearEffectOfFields == 2) {
                $("#labelTopAlign").addClass("lbl-active-bg");
                $("#labelDefaultAlign,#labelplaceholder").removeClass("lbl-active-bg");
            }
            else if (formDetails.AppearEffectOfFields == 0) {
                $("#labelDefaultAlign").addClass("lbl-active-bg");
                $("#labelplaceholder,#labelTopAlign").removeClass("lbl-active-bg");
            }

            if (formDetails.BackgroundPxOPer) {
                $("#bodyWidth").val("100%");
                $(".simpleForm").addClass("body-100");
                $("#bodyFullWidth").prop("checked", true);
            }
            else {
                $(".simpleForm").removeClass("body-100");
                $("#bodyFullWidth").prop("checked", false);
            }

            if (mainDesignData[0].indexOf("width") > -1) {
                var width = mainDesignData[0].split(":")[1];

                if (width != null && width != "" && width != undefined && width.length > 0) {
                    width = width.substring(0, width.length - 2);
                    $('#bodyWidth').val(width);
                    cssObjectsFormBody.width = width;
                }
            }

            if (mainDesignData[1].indexOf("height") > -1) {
                var height = mainDesignData[1].split(":")[1];

                if (height != null && height != "" && height != undefined && height.length > 0) {
                    height = height.substring(0, height.length - 2);
                    $('#bodyHeight').val(height);
                    cssObjectsFormBody.height = height;
                }
            }

            if (mainDesignData[2].indexOf("background-color") > -1) {
                var backgroundcolorrgba = mainDesignData[2].split(":")[1];

                if (backgroundcolorrgba != null && backgroundcolorrgba != "" && backgroundcolorrgba != undefined && backgroundcolorrgba.length > 0) {
                    var colorCode = FormUtil.RGBToHex(backgroundcolorrgba);
                    $("#bodyBg").val("#" + colorCode.HexValue).css({ backgroundColor: "#" + colorCode.HexValue })
                    $("#bgRange").val(colorCode.Opacity * 10).change();
                    document.getElementById("bodyBg").style.color = 0.213 * colorCode.R + 0.715 * colorCode.G + 0.072 * colorCode.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.bodyBgCol = backgroundcolorrgba;
                }
            }

            if (mainDesignData[3].indexOf("border-style") > -1) {
                var borderstyle = mainDesignData[3].split(":")[1];

                if (borderstyle != null && borderstyle != "" && borderstyle.length > 0) {
                    $("#bodyBrdStyleAll").val(borderstyle);
                    cssObjectsFormBody.bdyBrdStyleAll = borderstyle;
                }
            }

            if (mainDesignData[4].indexOf("border-width") > -1) {
                var borderwidth = $.trim(mainDesignData[4].split(":")[1]);

                if (borderwidth != null && borderwidth != "" && borderwidth.length > 0) {
                    borderwidth = borderwidth.substring(0, borderwidth.length - 2);
                    $("#bodyBrdSizeAll").val(borderwidth);
                    cssObjectsFormBody.bdyBrdSizeAll = borderwidth;
                }
            }

            if (mainDesignData[5].indexOf("border-color") > -1) {
                var bordercolor = $.trim(mainDesignData[5].split(":")[1]);

                if (bordercolor != null && bordercolor != "" && bordercolor != undefined && bordercolor.length > 0) {
                    $("#bodyBrdColAll").val(bordercolor).css({ backgroundColor: bordercolor });
                    var colorCode = FormUtil.ConvertHexColorToRGB(bordercolor);
                    document.getElementById("bodyBrdColAll").style.color = 0.213 * colorCode.R + 0.715 * colorCode.G + 0.072 * colorCode.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.bdyBrdColAll = bordercolor;
                }
            }

            if (mainDesignData[6].indexOf("border-top-style") > -1) {
                var bordertopStyle = mainDesignData[6].split(":")[1];

                if (bordertopStyle != null && bordertopStyle != "" && bordertopStyle.length > 0) {
                    $("#bodyBrdStyleTop").val(bordertopStyle);
                    cssObjectsFormBody.bdyBrdStyleTop = bordertopStyle;

                    if ($("#mainbrdstyle").attr('data-border') != undefined && $("#mainbrdstyle").attr('data-border') == "mainborder") {
                        $("#mainbrdstyle").click();
                    }
                }
            }

            if (mainDesignData[7].indexOf("border-top-width") > -1) {
                var bordertopwidth = mainDesignData[7].split(":")[1];

                if (bordertopwidth != null && bordertopwidth != "" && bordertopwidth.length > 0) {
                    bordertopwidth = bordertopwidth.substring(0, bordertopwidth.length - 2);
                    $("#bodyBrdSizeTop").val(bordertopwidth);
                    cssObjectsFormBody.bdyBrdWidthTop = bordertopwidth;

                    if ($("#mainbrdstyle").attr('data-border') != undefined && $("#mainbrdstyle").attr('data-border') == "mainborder") {
                        $("#mainbrdstyle").click();
                    }
                }
            }

            if (mainDesignData[8].indexOf("border-top-color") > -1) {
                var bordertopcolor = mainDesignData[8].split(":")[1];

                if (bordertopcolor != null && bordertopcolor != "" && bordertopcolor != undefined && bordertopcolor.length > 0) {
                    $("#bodyBrdColTop").val(bordertopcolor).css({ backgroundColor: bordertopcolor });
                    var colorCode = FormUtil.ConvertHexColorToRGB(bordertopcolor);
                    document.getElementById("bodyBrdColTop").style.color = 0.213 * colorCode.R + 0.715 * colorCode.G + 0.072 * colorCode.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.bdyBrdColTop = bordertopcolor;

                    if ($("#mainbrdstyle").attr('data-border') != undefined && $("#mainbrdstyle").attr('data-border') == "mainborder") {
                        $("#mainbrdstyle").click();
                    }
                }
            }

            if (mainDesignData[9].indexOf("border-right-style") > -1) {
                var borderrightStyle = mainDesignData[9].split(":")[1];

                if (borderrightStyle != null && borderrightStyle != "" && borderrightStyle.length > 0) {
                    $("#bodyBrdStyleRit").val(borderrightStyle);
                    cssObjectsFormBody.bdyBrdStyleRight = borderrightStyle;

                    if ($("#mainbrdstyle").attr('data-border') != undefined && $("#mainbrdstyle").attr('data-border') == "mainborder") {
                        $("#mainbrdstyle").click();
                    }
                }
            }

            if (mainDesignData[10].indexOf("border-right-width") > -1) {
                var borderrightwidth = mainDesignData[10].split(":")[1];

                if (borderrightwidth != null && borderrightwidth != "" && borderrightwidth.length > 0) {
                    borderrightwidth = borderrightwidth.substring(0, borderrightwidth.length - 2);
                    $("#bodyBrdSizeRit").val(borderrightwidth);
                    cssObjectsFormBody.bdyBrdWidthRight = borderrightwidth;

                    if ($("#mainbrdstyle").attr('data-border') != undefined && $("#mainbrdstyle").attr('data-border') == "mainborder") {
                        $("#mainbrdstyle").click();
                    }
                }
            }

            if (mainDesignData[11].indexOf("border-right-color") > -1) {
                var borderrightcolor = mainDesignData[11].split(":")[1];

                if (borderrightcolor != null && borderrightcolor != "" && borderrightcolor != undefined && borderrightcolor.length > 0) {
                    $("#bodyBrdColRit").val(borderrightcolor).css({ backgroundColor: borderrightcolor });
                    var colorCode = FormUtil.ConvertHexColorToRGB(borderrightcolor);
                    document.getElementById("bodyBrdColRit").style.color = 0.213 * colorCode.R + 0.715 * colorCode.G + 0.072 * colorCode.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.bdyBrdColRight = borderrightcolor;

                    if ($("#mainbrdstyle").attr('data-border') != undefined && $("#mainbrdstyle").attr('data-border') == "mainborder") {
                        $("#mainbrdstyle").click();
                    }
                }
            }

            if (mainDesignData[12].indexOf("border-bottom-style") > -1) {
                var borderbottomStyle = mainDesignData[12].split(":")[1];

                if (borderbottomStyle != null && borderbottomStyle != "" && borderbottomStyle.length > 0) {
                    $("#bodyBrdStyleBottm").val(borderbottomStyle);
                    cssObjectsFormBody.bdyBrdStyleBottm = borderbottomStyle;

                    if ($("#mainbrdstyle").attr('data-border') != undefined && $("#mainbrdstyle").attr('data-border') == "mainborder") {
                        $("#mainbrdstyle").click();
                    }
                }
            }

            if (mainDesignData[13].indexOf("border-bottom-width") > -1) {
                var borderrightwidth = mainDesignData[13].split(":")[1];

                if (borderrightwidth != null && borderrightwidth != "" && borderrightwidth.length > 0) {
                    borderrightwidth = borderrightwidth.substring(0, borderrightwidth.length - 2);
                    $("#bodyBrdSizeBottm").val(borderrightwidth);
                    cssObjectsFormBody.bdyBrdWidthBottm = borderrightwidth;

                    if ($("#mainbrdstyle").attr('data-border') != undefined && $("#mainbrdstyle").attr('data-border') == "mainborder") {
                        $("#mainbrdstyle").click();
                    }
                }
            }

            if (mainDesignData[14].indexOf("border-bottom-color") > -1) {
                var borderbtmcolor = mainDesignData[14].split(":")[1];

                if (borderbtmcolor != null && borderbtmcolor != "" && borderbtmcolor != undefined && borderbtmcolor.length > 0) {
                    $("#bodyBrdColBott").val(borderbtmcolor).css({ backgroundColor: borderbtmcolor });
                    var colorCode = FormUtil.ConvertHexColorToRGB(borderbtmcolor);
                    document.getElementById("bodyBrdColBott").style.color = 0.213 * colorCode.R + 0.715 * colorCode.G + 0.072 * colorCode.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.bdyBrdColBottm = borderbtmcolor;

                    if ($("#mainbrdstyle").attr('data-border') != undefined && $("#mainbrdstyle").attr('data-border') == "mainborder") {
                        $("#mainbrdstyle").click();
                    }
                }
            }

            if (mainDesignData[15].indexOf("border-left-style") > -1) {
                var borderleftStyle = mainDesignData[15].split(":")[1];

                if (borderleftStyle != null && borderleftStyle != "" && borderleftStyle.length > 0) {
                    $("#bodyBrdStyleLft").val(borderleftStyle);
                    cssObjectsFormBody.bdyBrdStyleLft = borderleftStyle;

                    if ($("#mainbrdstyle").attr('data-border') != undefined && $("#mainbrdstyle").attr('data-border') == "mainborder") {
                        $("#mainbrdstyle").click();
                    }
                }
            }

            if (mainDesignData[16].indexOf("border-left-width") > -1) {
                var borderleftwidth = mainDesignData[16].split(":")[1];

                if (borderleftwidth != null && borderleftwidth != "" && borderleftwidth.length > 0) {
                    borderleftwidth = borderleftwidth.substring(0, borderleftwidth.length - 2);
                    $("#bodyBrdWidthLft").val(borderleftwidth);
                    cssObjectsFormBody.bdyBrdWidthLft = borderleftwidth;

                    if ($("#mainbrdstyle").attr('data-border') != undefined && $("#mainbrdstyle").attr('data-border') == "mainborder") {
                        $("#mainbrdstyle").click();
                    }
                }
            }

            if (mainDesignData[17].indexOf("border-left-color") > -1) {
                var borderleftcolor = mainDesignData[17].split(":")[1];

                if (borderleftcolor != null && borderleftcolor != "" && borderleftcolor != undefined && borderleftcolor.length > 0) {
                    $("#bodyBrdColLft").val(borderleftcolor).css({ backgroundColor: borderleftcolor });
                    var colorCode = FormUtil.ConvertHexColorToRGB(borderleftcolor);
                    document.getElementById("bodyBrdColLft").style.color = 0.213 * colorCode.R + 0.715 * colorCode.G + 0.072 * colorCode.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.bdyBrdColLft = borderleftcolor;

                    if ($("#mainbrdstyle").attr('data-border') != undefined && $("#mainbrdstyle").attr('data-border') == "mainborder") {
                        $("#mainbrdstyle").click();
                    }
                }
            }

            if (mainDesignData[18].indexOf("padding") > -1) {
                var padding = mainDesignData[18].split(":")[1];

                if (padding != null && padding != "" && padding != undefined && padding.length > 0) {
                    padding = padding.substring(0, padding.length - 2);
                    $("#bdyPadAll").val(padding);
                    cssObjectsFormBody.bdyPaddAll = padding;
                }
            }

            if (mainDesignData[19].indexOf("padding-top") > -1) {
                var paddingtop = mainDesignData[19].split(":")[1];

                if (paddingtop != null && paddingtop != "" && paddingtop.length > 0) {
                    paddingtop = paddingtop.substring(0, paddingtop.length - 2);
                    $("#bdyPadTop").val(paddingtop);
                    cssObjectsFormBody.bdyPaddTop = paddingtop;

                    if ($("#bdyPadding").attr('data-paddall') != undefined && $("#bdyPadding").attr('data-paddall') == "paddingAll") {
                        $("#bdyPadding").click();
                    }
                }
            }

            if (mainDesignData[20].indexOf("padding-right") > -1) {
                var paddingright = mainDesignData[20].split(":")[1];

                if (paddingright != null && paddingright != "" && paddingright.length > 0) {
                    paddingright = paddingright.substring(0, paddingright.length - 2);
                    $("#bdyPadRight").val(paddingright);
                    cssObjectsFormBody.bdyPaddRit = paddingright;

                    if ($("#bdyPadding").attr('data-paddall') != undefined && $("#bdyPadding").attr('data-paddall') == "paddingAll") {
                        $("#bdyPadding").click();
                    }
                }
            }

            if (mainDesignData[21].indexOf("padding-bottom") > -1) {
                var paddingbottom = mainDesignData[21].split(":")[1];

                if (paddingbottom != null && paddingbottom != "" && paddingbottom.length > 0) {
                    paddingbottom = paddingbottom.substring(0, paddingbottom.length - 2);
                    $("#bdyPadBottom").val(paddingbottom);
                    cssObjectsFormBody.bdyPaddBottm = paddingbottom;

                    if ($("#bdyPadding").attr('data-paddall') != undefined && $("#bdyPadding").attr('data-paddall') == "paddingAll") {
                        $("#bdyPadding").click();
                    }
                }
            }

            if (mainDesignData[22].indexOf("padding-left") > -1) {
                var paddingleft = mainDesignData[22].split(":")[1];

                if (paddingleft != null && paddingleft != "" && paddingleft.length > 0) {
                    paddingleft = paddingleft.substring(0, paddingleft.length - 2);
                    $("#bdyPadLeft").val(paddingleft);
                    cssObjectsFormBody.bdyPaddLft = paddingleft;

                    if ($("#bdyPadding").attr('data-paddall') != undefined && $("#bdyPadding").attr('data-paddall') == "paddingAll") {
                        $("#bdyPadding").click();
                    }
                }
            }

            if (mainDesignData[23].indexOf("border-radius") > -1) {
                var borderradius = mainDesignData[23].split(":")[1];

                if (borderradius != null && borderradius != "" && borderradius != undefined && borderradius.length > 0) {
                    borderradius = borderradius.substring(0, borderradius.length - 2);
                    $("#mainbrdRadiAll").val(borderradius);
                    cssObjectsFormBody.bdyBrdradiAll = borderradius;
                }
            }

            var IsClickedMainBorderRadius = false;

            if (mainDesignData[24].indexOf("border-top-left-radius") > -1) {
                var bordertopleftradius = mainDesignData[24].split(":")[1];

                if (bordertopleftradius != null && bordertopleftradius != "" && bordertopleftradius.length > 0) {
                    bordertopleftradius = bordertopleftradius.substring(0, bordertopleftradius.length - 2);
                    $("#mainbrdRadiTopLeft").val(bordertopleftradius);
                    cssObjectsFormBody.bdyBrdraditopleft = bordertopleftradius;

                    if ($("#mainbrdradistyle").attr('data-border') != undefined && $("#mainbrdradistyle").attr('data-border') == "mainborderradius" && !IsClickedMainBorderRadius) {
                        IsClickedMainBorderRadius = true;
                        $("#mainbrdradistyle").click();
                    }
                }
            }

            if (mainDesignData[25].indexOf("border-top-right-radius") > -1) {
                var bordertoprightradius = mainDesignData[25].split(":")[1];

                if (bordertoprightradius != null && bordertoprightradius != "" && bordertoprightradius.length > 0) {
                    bordertoprightradius = bordertoprightradius.substring(0, bordertoprightradius.length - 2);
                    $("#mainbrdRadiTopRight").val(bordertoprightradius);
                    cssObjectsFormBody.bdyBrdraditopright = bordertoprightradius;

                    if ($("#mainbrdradistyle").attr('data-border') != undefined && $("#mainbrdradistyle").attr('data-border') == "mainborderradius" && !IsClickedMainBorderRadius) {
                        IsClickedMainBorderRadius = true;
                        $("#mainbrdradistyle").click();
                    }
                }
            }

            if (mainDesignData[26].indexOf("border-bottom-left-radius") > -1) {
                var borderbottomleftradius = mainDesignData[26].split(":")[1];

                if (borderbottomleftradius != null && borderbottomleftradius != "" && borderbottomleftradius.length > 0) {
                    borderbottomleftradius = borderbottomleftradius.substring(0, borderbottomleftradius.length - 2);
                    $("#mainbrdRadiBottomLeft").val(borderbottomleftradius);
                    cssObjectsFormBody.bdyBrdradibttmleft = borderbottomleftradius;

                    if ($("#mainbrdradistyle").attr('data-border') != undefined && $("#mainbrdradistyle").attr('data-border') == "mainborderradius" && !IsClickedMainBorderRadius) {
                        IsClickedMainBorderRadius = true;
                        $("#mainbrdradistyle").click();
                    }
                }
            }

            if (mainDesignData[27].indexOf("border-bottom-right-radius") > -1) {
                var borderbottomrightradius = mainDesignData[27].split(":")[1];

                if (borderbottomrightradius != null && borderbottomrightradius != "" && borderbottomrightradius.length > 0) {
                    borderbottomrightradius = borderbottomrightradius.substring(0, borderbottomrightradius.length - 2);
                    $("#mainbrdRadiBottomRight").val(borderbottomrightradius);
                    cssObjectsFormBody.bdyBrdradibttmright = borderbottomrightradius;

                    if ($("#mainbrdradistyle").attr('data-border') != undefined && $("#mainbrdradistyle").attr('data-border') == "mainborderradius" && !IsClickedMainBorderRadius) {
                        IsClickedMainBorderRadius = true;
                        $("#mainbrdradistyle").click();
                    }
                }
            }

            if (mainDesignData[28].indexOf("background-image") > -1) {
                var backgroundimage = mainDesignData[28].split(":")[1];

                if (backgroundimage != null && backgroundimage != "" && backgroundimage != undefined && backgroundimage.length > 0) {
                    var bgImage = mainDesignData[28].replace("background-image:url(", "").replace(")", "");
                    $("#spn_mainbg").val(bgImage);
                    $(".bgnametextwrp").removeClass("hideDiv");
                    $(".mainbgfilename").html(bgImage.substring(bgImage.lastIndexOf("/") + 1, bgImage.length));
                    $(".simpleForm").css("background-image", "url(" + bgImage + ")");
                }
            }
        }
        else if (formDetails.IsMainBackgroundDesignCustom == true) {
        }
    },
    BindTitleCss: function () {

        var titleDesignData = "";

        if (formDetails.IsTitleCssCustom == false && formDetails.TitleCss != null && formDetails.TitleCss.length > 0) {

            titleDesignData = formDetails.TitleCss.split(";");

            if (titleDesignData[0].indexOf("font-family") > -1) {
                var fontFamily = titleDesignData[0].split(":")[1];

                if (fontFamily != null && fontFamily != "" && fontFamily != undefined && fontFamily.length > 0) {
                    $("#frmTitleFontAll").val(fontFamily);
                    cssObjectsFormBody.frmTitFontFamily = fontFamily;
                }
            }

            if (titleDesignData[1].indexOf("font-size") > -1) {
                var fontSize = titleDesignData[1].split(":")[1];

                if (fontSize != null && fontSize != "" && fontSize != undefined && fontSize.length > 0) {
                    fontSize = fontSize.substring(0, fontSize.length - 2);
                    $("#frmTitleFontSizAll").val(fontSize);
                    cssObjectsFormBody.frmtTitFontSiz = fontSize;
                }
            }

            if (titleDesignData[2].indexOf("color") > -1) {
                var color = titleDesignData[2].split(":")[1];

                if (color != null && color != "" && color != undefined && color.length > 0) {
                    $("#frmTitleFontColall").val(color).css({ backgroundColor: color });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(color.replace("#", ""));
                    document.getElementById("frmTitleFontColall").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.frmTitFontCol = color;
                }
            }

            if (titleDesignData[3].indexOf("text-align") > -1) {
                var TextAlign = titleDesignData[3].split(":")[1];

                if (TextAlign != null && TextAlign != "" && TextAlign != undefined && TextAlign.length > 0) {
                    if (TextAlign == "left") {
                        $('#textTitAlignleft').addClass('txt-active');
                        $('#textTitAlignRight,#textTitAlignCenter').removeClass('txt-active');
                        cssObjectsFormBody.frmTitAlignType = "left";
                    }
                    else if (TextAlign == "center") {
                        $('#textTitAlignCenter').addClass('txt-active');
                        $('#textTitAlignleft,#textTitAlignRight').removeClass('txt-active');
                        cssObjectsFormBody.frmTitAlignType = "center";
                    }
                    else if (TextAlign == "right") {
                        $('#textTitAlignRight').addClass('txt-active');
                        $('#textTitAlignleft,#textTitAlignCenter').removeClass('txt-active');
                        cssObjectsFormBody.frmTitAlignType = "right";
                    }
                }
            }

            if (titleDesignData[4].indexOf("font-weight") > -1) {
                var fontWeight = titleDesignData[4].split(":")[1];

                if (fontWeight != null && fontWeight != "" && fontWeight != undefined && fontWeight.length > 0) {
                    $("#frmTitleFontStrokeAll").val(fontWeight);
                    cssObjectsFormBody.frmTitFontStroke = fontWeight;
                }
            }

            if (titleDesignData[5].indexOf("font-style") > -1) {
                var fontStyle = titleDesignData[5].split(":")[1];

                if (fontStyle != null && fontStyle != "" && fontStyle != undefined && fontStyle.length > 0) {
                    $("#frmTitleFontStrokeAll").attr('data-titfontstyle', fontStyle);
                    cssObjectsFormBody.frmTitFontStyle = titleDesignData[5].split(":")[1];
                }
            }

            if (titleDesignData[6].indexOf("text-transform") > -1) {
                var texttransform = titleDesignData[6].split(":")[1];

                if (texttransform != null && texttransform != "" && texttransform.length > 0) {
                    $("#frmTitleFontCaps").val(texttransform);
                    cssObjectsFormBody.frmTitTextCapital = texttransform;
                }
            }

            if (titleDesignData[7].indexOf("margin") > -1) {
                var margin = titleDesignData[7].split(":")[1];

                if (margin != null && margin != "" && margin != undefined && margin.length > 0) {
                    margin = margin.substring(0, margin.length - 2);
                    $("#frmTitleFontMargAll").val(margin);
                    cssObjectsFormBody.frmtitFontMargin = margin;
                }
            }

            if (titleDesignData[8].indexOf("margin-top") > -1) {
                var margintop = titleDesignData[8].split(":")[1];

                if (margintop != null && margintop != "" && margintop.length > 0) {
                    margintop = margintop.substring(0, margintop.length - 2);
                    $("#frmTitleFontMargTop").val(margintop);
                    cssObjectsFormBody.frmtitFontMarginTop = margintop;

                    if ($("#frmTitPadAll").attr('data-frmtitmarg') != undefined && $("#frmTitPadAll").attr('data-frmtitmarg') == "formTitlePaddingAll") {
                        $("#frmTitPadAll").click();
                    }
                }
            }

            if (titleDesignData[9].indexOf("margin-right") > -1) {
                var marginright = titleDesignData[9].split(":")[1];

                if (marginright != null && marginright != "" && marginright.length > 0) {
                    marginright = marginright.substring(0, marginright.length - 2);
                    $("#frmTitleFontMargRight").val(marginright);
                    cssObjectsFormBody.frmtitFontMarginRight = marginright;

                    if ($("#frmTitPadAll").attr('data-frmtitmarg') != undefined && $("#frmTitPadAll").attr('data-frmtitmarg') == "formTitlePaddingAll") {
                        $("#frmTitPadAll").click();
                    }
                }
            }

            if (titleDesignData[10].indexOf("margin-bottom") > -1) {
                var marginbottom = titleDesignData[10].split(":")[1];

                if (marginbottom != null && marginbottom != "" && marginbottom.length > 0) {
                    marginbottom = marginbottom.substring(0, marginbottom.length - 2);
                    $("#frmTitleFontMargBottom").val(marginbottom);
                    cssObjectsFormBody.frmtitFontMarginBttm = marginbottom;

                    if ($("#frmTitPadAll").attr('data-frmtitmarg') != undefined && $("#frmTitPadAll").attr('data-frmtitmarg') == "formTitlePaddingAll") {
                        $("#frmTitPadAll").click();
                    }
                }
            }

            if (titleDesignData[11].indexOf("margin-left") > -1) {
                var marginleft = titleDesignData[11].split(":")[1];

                if (marginleft != null && marginleft != "" && marginleft.length > 0) {
                    marginleft = marginleft.substring(0, marginleft.length - 2);
                    $("#frmTitleFontMargLeft").val(marginleft);
                    cssObjectsFormBody.frmtitFontMarginLeft = marginleft;

                    if ($("#frmTitPadAll").attr('data-frmtitmarg') != undefined && $("#frmTitPadAll").attr('data-frmtitmarg') == "formTitlePaddingAll") {
                        $("#frmTitPadAll").click();
                    }
                }
            }

            if (titleDesignData[12].indexOf("padding") > -1) {
                var padding = titleDesignData[12].split(":")[1];

                if (padding != null && padding != "" && padding != undefined && padding.length > 0) {
                    padding = padding.substring(0, padding.length - 2);
                    $("#frmTitleFontPaddAll").val(padding);
                    cssObjectsFormBody.frmTitFontPaddAll = padding;
                }
            }

            if (titleDesignData[13].indexOf("padding-top") > -1) {
                var paddingtop = titleDesignData[13].split(":")[1];

                if (paddingtop != null && paddingtop != "" && paddingtop.length > 0) {
                    paddingtop = paddingtop.substring(0, paddingtop.length - 2);
                    $("#frmTitleFontPaddTop").val(paddingtop);
                    cssObjectsFormBody.frmTitFontPaddTop = paddingtop;

                    if ($("#frmTitleFontPadd").attr('data-frmtitlefontpadd') != undefined && $("#frmTitleFontPadd").attr('data-frmtitlefontpadd') == "frmTitleFontPadAll") {
                        $("#frmTitleFontPadd").click();
                    }
                }
            }

            if (titleDesignData[14].indexOf("padding-right") > -1) {
                var paddingright = titleDesignData[14].split(":")[1];

                if (paddingright != null && paddingright != "" && paddingright.length > 0) {
                    paddingright = paddingright.substring(0, paddingright.length - 2);
                    $("#frmTitleFontPaddRight").val(paddingright);
                    cssObjectsFormBody.frmTitFontPaddRight = paddingright;

                    if ($("#frmTitleFontPadd").attr('data-frmtitlefontpadd') != undefined && $("#frmTitleFontPadd").attr('data-frmtitlefontpadd') == "frmTitleFontPadAll") {
                        $("#frmTitleFontPadd").click();
                    }
                }
            }

            if (titleDesignData[15].indexOf("padding-bottom") > -1) {
                var paddingbottom = titleDesignData[15].split(":")[1];

                if (paddingbottom != null && paddingbottom != "" && paddingbottom.length > 0) {
                    paddingbottom = paddingbottom.substring(0, paddingbottom.length - 2);
                    $("#frmTitleFontPaddBottom").val(paddingbottom);
                    cssObjectsFormBody.frmTitFontPaddBttm = paddingbottom;

                    if ($("#frmTitleFontPadd").attr('data-frmtitlefontpadd') != undefined && $("#frmTitleFontPadd").attr('data-frmtitlefontpadd') == "frmTitleFontPadAll") {
                        $("#frmTitleFontPadd").click();
                    }
                }
            }

            if (titleDesignData[16].indexOf("padding-left") > -1) {
                var paddingleft = titleDesignData[16].split(":")[1];

                if (paddingleft != null && paddingleft != "" && paddingleft.length > 0) {
                    paddingleft = paddingleft.substring(0, paddingleft.length - 2);
                    $("#frmTitleFontPaddLeft").val(paddingleft);
                    cssObjectsFormBody.frmTitFontPaddLeft = paddingleft;

                    if ($("#frmTitleFontPadd").attr('data-frmtitlefontpadd') != undefined && $("#frmTitleFontPadd").attr('data-frmtitlefontpadd') == "frmTitleFontPadAll") {
                        $("#frmTitleFontPadd").click();
                    }
                }
            }

            if (titleDesignData[17].indexOf("background-color") > -1) {
                var backgroundcolor = titleDesignData[17].split(":")[1];

                if (backgroundcolor != null && backgroundcolor != "" && backgroundcolor != undefined && backgroundcolor.length > 0) {
                    var colorCode = FormUtil.RGBToHex(backgroundcolor);
                    $("#frmTitleFontBgcol").val("#" + colorCode.HexValue).css({ backgroundColor: "#" + colorCode.HexValue })
                    $("#frmTitlebgRange").val(colorCode.Opacity * 10).change();
                    document.getElementById("frmTitleFontBgcol").style.color = 0.213 * colorCode.R + 0.715 * colorCode.G + 0.072 * colorCode.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.frmTitBgcolor = backgroundcolor;
                }
            }

            if (titleDesignData[18].indexOf("border-radius") > -1) {
                var borderradius = titleDesignData[18].split(":")[1];

                if (borderradius != null && borderradius != "" && borderradius != undefined && borderradius.length > 0) {
                    borderradius = borderradius.substring(0, borderradius.length - 2);
                    $("#frmTitRadiAll").val(borderradius);
                    cssObjectsFormBody.frmTitRadiusAll = borderradius;
                }
            }

            if (titleDesignData[19].indexOf("border-top-left-radius") > -1) {
                var bordertopleftradius = titleDesignData[19].split(":")[1];

                if (bordertopleftradius != null && bordertopleftradius != "" && bordertopleftradius.length > 0) {
                    bordertopleftradius = bordertopleftradius.substring(0, bordertopleftradius.length - 2);
                    $("#frmTitRadiTopLeft").val(bordertopleftradius);
                    cssObjectsFormBody.frmTitRadiusTopLeft = bordertopleftradius;

                    if ($("#frmTitleRadiusall").attr('data-frmtitradius') != undefined && $("#frmTitleRadiusall").attr('data-frmtitradius') == "frmTitRadiusAll") {
                        $("#frmTitleRadiusall").click();
                    }
                }
            }

            if (titleDesignData[20].indexOf("border-top-right-radius") > -1) {
                var bordertoprightradius = titleDesignData[20].split(":")[1];

                if (bordertoprightradius != null && bordertoprightradius != "" && bordertoprightradius.length > 0) {
                    bordertoprightradius = bordertoprightradius.substring(0, bordertoprightradius.length - 2);
                    $("#frmTitRadiTopRight").val(bordertoprightradius);
                    cssObjectsFormBody.frmTitRadiusTopRight = bordertoprightradius;

                    if ($("#frmTitleRadiusall").attr('data-frmtitradius') != undefined && $("#frmTitleRadiusall").attr('data-frmtitradius') == "frmTitRadiusAll") {
                        $("#frmTitleRadiusall").click();
                    }
                }
            }

            if (titleDesignData[21].indexOf("border-bottom-left-radius") > -1) {
                var borderbottomleftradius = titleDesignData[21].split(":")[1];

                if (borderbottomleftradius != null && borderbottomleftradius != "" && borderbottomleftradius.length > 0) {
                    borderbottomleftradius = borderbottomleftradius.substring(0, borderbottomleftradius.length - 2);
                    $("#frmTitRadiBottomLeft").val(borderbottomleftradius);
                    cssObjectsFormBody.frmTitRadiusBttmLeft = borderbottomleftradius;

                    if ($("#frmTitleRadiusall").attr('data-frmtitradius') != undefined && $("#frmTitleRadiusall").attr('data-frmtitradius') == "frmTitRadiusAll") {
                        $("#frmTitleRadiusall").click();
                    }
                }
            }

            if (titleDesignData[22].indexOf("border-bottom-right-radius") > -1) {
                var borderbottomrightradius = titleDesignData[22].split(":")[1];

                if (borderbottomrightradius != null && borderbottomrightradius != "" && borderbottomrightradius.length > 0) {
                    borderbottomrightradius = borderbottomrightradius.substring(0, borderbottomrightradius.length - 2);
                    $("#frmTitRadiBottomRight").val(borderbottomrightradius);
                    cssObjectsFormBody.frmTitRadiusBttmRight = borderbottomrightradius;

                    if ($("#frmTitleRadiusall").attr('data-frmtitradius') != undefined && $("#frmTitleRadiusall").attr('data-frmtitradius') == "frmTitRadiusAll") {
                        $("#frmTitleRadiusall").click();
                    }
                }
            }

            if (titleDesignData[23].indexOf("border-style") > -1) {
                var borderstyle = titleDesignData[23].split(":")[1];

                if (borderstyle != null && borderstyle != "" && borderstyle.length > 0) {
                    $("#frmTitAllBrd").val(borderstyle);
                    cssObjectsFormBody.frmTitBrdStylAll = borderstyle;
                }
            }

            if (titleDesignData[24].indexOf("border-width") > -1) {
                var borderwidth = titleDesignData[24].split(":")[1];

                if (borderwidth != null && borderwidth != "" && borderwidth.length > 0) {
                    borderwidth = borderwidth.substring(0, borderwidth.length - 2);
                    $("#frmTitAllBrdSize").val(borderwidth);
                    cssObjectsFormBody.frmTitBrdWidAll = borderwidth;
                }
            }

            if (titleDesignData[25].indexOf("border-color") > -1) {
                var bordercolor = titleDesignData[25].split(":")[1];

                if (bordercolor != null && bordercolor != "" && bordercolor != undefined && bordercolor.length > 0) {
                    $("#frmTitBrdColAll").val(bordercolor).css({ backgroundColor: bordercolor });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(bordercolor.replace("#", ""));
                    document.getElementById("frmTitBrdColAll").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.frmTitBrdColAll = bordercolor;
                }
            }

            if (titleDesignData[26].indexOf("border-top-style") > -1) {
                var bordertopStyle = titleDesignData[26].split(":")[1];

                if (bordertopStyle != null && bordertopStyle != "" && bordertopStyle.length > 0) {
                    $("#frmTitBrdTop").val(bordertopStyle);
                    cssObjectsFormBody.frmTitBrdStylTop = bordertopStyle;

                    if ($("#frmTitbrdstyle").attr('data-frmtitbrd') != undefined && $("#frmTitbrdstyle").attr('data-frmtitbrd') == "frmTitBrdAllStyle") {
                        $("#frmTitbrdstyle").click();
                    }
                }
            }

            if (titleDesignData[27].indexOf("border-top-width") > -1) {
                var bordertopwidth = titleDesignData[27].split(":")[1];

                if (bordertopwidth != null && bordertopwidth != "" && bordertopwidth.length > 0) {
                    bordertopwidth = bordertopwidth.substring(0, bordertopwidth.length - 2);
                    $("#frmTitBrdTopSize").val(bordertopwidth);
                    cssObjectsFormBody.frmTitBrdWidTop = bordertopwidth;

                    if ($("#frmTitbrdstyle").attr('data-frmtitbrd') != undefined && $("#frmTitbrdstyle").attr('data-frmtitbrd') == "frmTitBrdAllStyle") {
                        $("#frmTitbrdstyle").click();
                    }
                }
            }

            if (titleDesignData[28].indexOf("border-top-color") > -1) {
                var bordertopcolor = titleDesignData[28].split(":")[1];

                if (bordertopcolor != null && bordertopcolor != "" && bordertopcolor != undefined && bordertopcolor.length > 0) {
                    $("#frmTitBrdTopCol").val(bordertopcolor).css({ backgroundColor: bordertopcolor });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(bordertopcolor.replace("#", ""));
                    document.getElementById("frmTitBrdTopCol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.frmTitBrdColTop = bordertopcolor;

                    if ($("#frmTitbrdstyle").attr('data-frmtitbrd') != undefined && $("#frmTitbrdstyle").attr('data-frmtitbrd') == "frmTitBrdAllStyle") {
                        $("#frmTitbrdstyle").click();
                    }
                }
            }

            if (titleDesignData[29].indexOf("border-right-style") > -1) {
                var borderrightStyle = titleDesignData[29].split(":")[1];

                if (borderrightStyle != null && borderrightStyle != "" && borderrightStyle.length > 0) {
                    $("#frmTitBrdRit").val(borderrightStyle);
                    cssObjectsFormBody.frmTitBrdStylRight = borderrightStyle;

                    if ($("#frmTitbrdstyle").attr('data-frmtitbrd') != undefined && $("#frmTitbrdstyle").attr('data-frmtitbrd') == "frmTitBrdAllStyle") {
                        $("#frmTitbrdstyle").click();
                    }
                }
            }

            if (titleDesignData[30].indexOf("border-right-width") > -1) {
                var borderrightwidth = titleDesignData[30].split(":")[1];

                if (borderrightwidth != null && borderrightwidth != "" && borderrightwidth.length > 0) {
                    borderrightwidth = borderrightwidth.substring(0, borderrightwidth.length - 2);
                    $("#frmTitBrdRitSize").val(borderrightwidth);
                    cssObjectsFormBody.frmTitBrdWidRight = borderrightwidth;

                    if ($("#frmTitbrdstyle").attr('data-frmtitbrd') != undefined && $("#frmTitbrdstyle").attr('data-frmtitbrd') == "frmTitBrdAllStyle") {
                        $("#frmTitbrdstyle").click();
                    }
                }
            }

            if (titleDesignData[31].indexOf("border-right-color") > -1) {
                var borderrightcolor = titleDesignData[31].split(":")[1];

                if (borderrightcolor != null && borderrightcolor != "" && borderrightcolor != undefined && borderrightcolor.length > 0) {
                    $("#frmTitBrdRitCol").val(borderrightcolor).css({ backgroundColor: borderrightcolor });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(borderrightcolor.replace("#", ""));
                    document.getElementById("frmTitBrdRitCol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.frmTitBrdColRight = borderrightcolor;

                    if ($("#frmTitbrdstyle").attr('data-frmtitbrd') != undefined && $("#frmTitbrdstyle").attr('data-frmtitbrd') == "frmTitBrdAllStyle") {
                        $("#frmTitbrdstyle").click();
                    }
                }
            }

            if (titleDesignData[32].indexOf("border-bottom-style") > -1) {
                var borderbottomStyle = titleDesignData[32].split(":")[1];

                if (borderbottomStyle != null && borderbottomStyle != "" && borderbottomStyle.length > 0) {
                    $("#frmTitBrdBttm").val(borderbottomStyle);
                    cssObjectsFormBody.frmTitBrdStyleBttm = borderbottomStyle;

                    if ($("#frmTitbrdstyle").attr('data-frmtitbrd') != undefined && $("#frmTitbrdstyle").attr('data-frmtitbrd') == "frmTitBrdAllStyle") {
                        $("#frmTitbrdstyle").click();
                    }
                }
            }

            if (titleDesignData[33].indexOf("border-bottom-width") > -1) {
                var borderrightwidth = titleDesignData[33].split(":")[1];

                if (borderrightwidth != null && borderrightwidth != "" && borderrightwidth.length > 0) {
                    borderrightwidth = borderrightwidth.substring(0, borderrightwidth.length - 2);
                    $("#frmTitBrdBttmSize").val(borderrightwidth);
                    cssObjectsFormBody.frmTitBrdWidBttm = borderrightwidth;

                    if ($("#frmTitbrdstyle").attr('data-frmtitbrd') != undefined && $("#frmTitbrdstyle").attr('data-frmtitbrd') == "frmTitBrdAllStyle") {
                        $("#frmTitbrdstyle").click();
                    }
                }
            }

            if (titleDesignData[34].indexOf("border-bottom-color") > -1) {
                var borderrightcolor = titleDesignData[34].split(":")[1];

                if (borderrightcolor != null && borderrightcolor != "" && borderrightcolor != undefined && borderrightcolor.length > 0) {
                    $("#frmTitBrdBttmCol").val(borderrightcolor).css({ backgroundColor: borderrightcolor });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(borderrightcolor.replace("#", ""));
                    document.getElementById("frmTitBrdBttmCol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.frmTitBrdColBttm = borderrightcolor;

                    if ($("#frmTitbrdstyle").attr('data-frmtitbrd') != undefined && $("#frmTitbrdstyle").attr('data-frmtitbrd') == "frmTitBrdAllStyle") {
                        $("#frmTitbrdstyle").click();
                    }
                }
            }

            if (titleDesignData[35].indexOf("border-left-style") > -1) {
                var borderleftStyle = titleDesignData[35].split(":")[1];

                if (borderleftStyle != null && borderleftStyle != "" && borderleftStyle.length > 0) {
                    $("#frmTitBrdLeft").val(borderleftStyle);
                    cssObjectsFormBody.frmTitBrdStylLeft = borderleftStyle;

                    if ($("#frmTitbrdstyle").attr('data-frmtitbrd') != undefined && $("#frmTitbrdstyle").attr('data-frmtitbrd') == "frmTitBrdAllStyle") {
                        $("#frmTitbrdstyle").click();
                    }
                }
            }

            if (titleDesignData[36].indexOf("border-left-width") > -1) {
                var borderleftwidth = titleDesignData[36].split(":")[1];

                if (borderleftwidth != null && borderleftwidth != "" && borderleftwidth.length > 0) {
                    borderleftwidth = borderleftwidth.substring(0, borderleftwidth.length - 2);
                    $("#frmTitBrdLeftSize").val(borderleftwidth);
                    cssObjectsFormBody.frmTitBrdWidLeft = borderleftwidth;

                    if ($("#frmTitbrdstyle").attr('data-frmtitbrd') != undefined && $("#frmTitbrdstyle").attr('data-frmtitbrd') == "frmTitBrdAllStyle") {
                        $("#frmTitbrdstyle").click();
                    }
                }
            }

            if (titleDesignData[37].indexOf("border-left-color") > -1) {
                var borderleftcolor = titleDesignData[37].split(":")[1];

                if (borderleftcolor != null && borderleftcolor != "" && borderleftcolor != undefined && borderleftcolor.length > 0) {
                    $("#frmTitBrdLeftCol").val(borderleftcolor).css({ backgroundColor: borderleftcolor });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(borderleftcolor.replace("#", ""));
                    document.getElementById("frmTitBrdLeftCol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.frmTitBrdColLeft = borderleftcolor;

                    if ($("#frmTitbrdstyle").attr('data-frmtitbrd') != undefined && $("#frmTitbrdstyle").attr('data-frmtitbrd') == "frmTitBrdAllStyle") {
                        $("#frmTitbrdstyle").click();
                    }
                }
            }
        }
        else if (formDetails.IsTitleCssCustom == true) {
        }
    },
    BindDescriptionCss: function () {

        var descriptionDesignData = "";
        var descriptionDesignDataFirstCss = "";
        var descriptionDesignDataSecondCss = "";

        if (formDetails.IsDescriptionCustomCss == false && formDetails.DescriptionCss != null && formDetails.DescriptionCss.length > 0) {

            descriptionDesignData = formDetails.DescriptionCss.split("@$@");

            descriptionDesignDataFirstCss = descriptionDesignData[0];
            descriptionDesignDataSecondCss = descriptionDesignData[1];

            descriptionDesignDataFirstCss = $.trim(descriptionDesignDataFirstCss);
            descriptionDesignDataSecondCss = $.trim(descriptionDesignDataSecondCss);

            descriptionDesignDataFirstCss = descriptionDesignDataFirstCss.split(";");
            descriptionDesignDataSecondCss = descriptionDesignDataSecondCss.split(";");

            if (descriptionDesignDataFirstCss[0].indexOf("text-align") > -1) {
                var TextAlign = descriptionDesignDataFirstCss[0].split(":")[1];

                if (TextAlign != null && TextAlign != "" && TextAlign != undefined && TextAlign.length > 0) {
                    if (TextAlign == "left") {
                        $('#frmDesAlignleft').addClass('txt-active');
                        $('#frmDesAlignRight,#frmDesAlignCenter').removeClass('txt-active');
                        cssObjectsFormBody.frmDesTxtAlign = "left";
                    }
                    else if (TextAlign == "center") {
                        $('#frmDesAlignCenter').addClass('txt-active');
                        $('#frmDesAlignleft,#frmDesAlignRight').removeClass('txt-active');
                        cssObjectsFormBody.frmDesTxtAlign = "center";
                    }
                    else if (TextAlign == "right") {
                        $('#frmDesAlignRight').addClass('txt-active');
                        $('#frmDesAlignleft,#frmDesAlignCenter').removeClass('txt-active');
                        cssObjectsFormBody.frmDesTxtAlign = "right";
                    }
                }
            }

            if (descriptionDesignDataFirstCss[1].indexOf("font-family") > -1) {
                var fontFamily = descriptionDesignDataFirstCss[1].split(":")[1];

                if (fontFamily != null && fontFamily != "" && fontFamily != undefined && fontFamily.length > 0) {
                    $("#frmDesFontAll").val(fontFamily);
                    cssObjectsFormBody.frmDesFont = fontFamily;
                }
            }

            if (descriptionDesignDataFirstCss[2].indexOf("font-size") > -1) {
                var fontSize = descriptionDesignDataFirstCss[2].split(":")[1];

                if (fontSize != null && fontSize != "" && fontSize != undefined && fontSize.length > 0) {
                    fontSize = fontSize.substring(0, fontSize.length - 2);
                    $("#frmDesFontSizAll").val(fontSize);
                    cssObjectsFormBody.frmDesFontSize = fontSize;
                }
            }

            if (descriptionDesignDataFirstCss[3].indexOf("color") > -1) {
                var color = descriptionDesignDataFirstCss[3].split(":")[1];

                if (color != null && color != "" && color != undefined && color.length > 0) {
                    $("#frmDesFontColall").val(color).css({ backgroundColor: color });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(color.replace("#", ""));
                    document.getElementById("frmDesFontColall").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.frmDesFontCol = descriptionDesignDataFirstCss[3].split(":")[1];
                }
            }

            if (descriptionDesignDataFirstCss[4].indexOf("font-weight") > -1) {
                var fontWeight = descriptionDesignDataFirstCss[4].split(":")[1];

                if (fontWeight != null && fontWeight != "" && fontWeight != undefined && fontWeight.length > 0) {
                    $("#frmDesFontStrokeAll").val(fontWeight);
                    cssObjectsFormBody.frmDesFontStroke = fontWeight;
                }
            }

            if (descriptionDesignDataFirstCss[5].indexOf("font-style") > -1) {
                var fontStyle = descriptionDesignDataFirstCss[5].split(":")[1];

                if (fontStyle != null && fontStyle != "" && fontStyle != undefined && fontStyle.length > 0) {
                    $("#frmDesFontStrokeAll").attr('data-titfontstyle', fontStyle);
                    cssObjectsFormBody.frmDesFontStyle = descriptionDesignDataFirstCss[5].split(":")[1];
                }
            }

            if (descriptionDesignDataFirstCss[6].indexOf("text-transform") > -1) {
                var texttransform = descriptionDesignDataFirstCss[6].split(":")[1];

                if (texttransform != null && texttransform != "" && texttransform.length > 0) {
                    $("#frmDesFontCaps").val(texttransform);
                    cssObjectsFormBody.frmDesFontCaps = texttransform;
                }
            }

            if (descriptionDesignDataFirstCss[7].indexOf("background-color") > -1) {
                var backgroundcolor = descriptionDesignDataFirstCss[7].split(":")[1];

                if (backgroundcolor != null && backgroundcolor != "" && backgroundcolor != undefined && backgroundcolor.length > 0) {
                    var colorCode = FormUtil.RGBToHex(backgroundcolor);
                    $("#frmDesFontBgcol").val("#" + colorCode.HexValue).css({ backgroundColor: "#" + colorCode.HexValue })
                    $("#frmDesbgRange").val(colorCode.Opacity * 10).change();
                    document.getElementById("frmDesFontBgcol").style.color = 0.213 * colorCode.R + 0.715 * colorCode.G + 0.072 * colorCode.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.frmDesTxtBgCol = backgroundcolor;
                }
            }

            if (descriptionDesignDataFirstCss[8].indexOf("padding") > -1) {
                var padding = descriptionDesignDataFirstCss[8].split(":")[1];

                if (padding != null && padding != "" && padding != undefined && padding.length > 0) {
                    padding = padding.substring(0, padding.length - 2);
                    $("#frmDesFontPaddAll").val(padding);
                    cssObjectsFormBody.frmDesFontPaddAll = padding;
                }
                else {
                    $("#frmDesFontPadAll").click();
                }
            }

            if (descriptionDesignDataFirstCss[9].indexOf("padding-top") > -1) {
                var paddingtop = descriptionDesignDataFirstCss[9].split(":")[1];

                if (paddingtop != null && paddingtop != "" && paddingtop.length > 0) {
                    paddingtop = paddingtop.substring(0, paddingtop.length - 2);
                    $("#frmDesFontPaddTop").val(paddingtop);
                    cssObjectsFormBody.frmDesFontPaddTop = paddingtop;
                }
            }

            if (descriptionDesignDataFirstCss[10].indexOf("padding-right") > -1) {
                var paddingright = descriptionDesignDataFirstCss[10].split(":")[1];

                if (paddingright != null && paddingright != "" && paddingright.length > 0) {
                    paddingright = paddingright.substring(0, paddingright.length - 2);
                    $("#frmDesFontPaddRight").val(paddingright);
                    cssObjectsFormBody.frmDesFontPaddRight = paddingright;
                }
            }

            if (descriptionDesignDataFirstCss[11].indexOf("padding-bottom") > -1) {
                var paddingbottom = descriptionDesignDataFirstCss[11].split(":")[1];

                if (paddingbottom != null && paddingbottom != "" && paddingbottom.length > 0) {
                    paddingbottom = paddingbottom.substring(0, paddingbottom.length - 2);
                    $("#frmDesFontPaddBottom").val(paddingbottom);
                    cssObjectsFormBody.frmDesFontPaddBttm = paddingbottom;
                }
            }

            if (descriptionDesignDataFirstCss[12].indexOf("padding-left") > -1) {
                var paddingleft = descriptionDesignDataFirstCss[12].split(":")[1];

                if (paddingleft != null && paddingleft != "" && paddingleft.length > 0) {
                    paddingleft = paddingleft.substring(0, paddingleft.length - 2);
                    $("#frmDesFontPaddLeft").val(paddingleft);
                    cssObjectsFormBody.frmDesFontPaddLeft = paddingleft;
                }
            }

            if (descriptionDesignDataFirstCss[13].indexOf("border-radius") > -1) {
                var borderradius = descriptionDesignDataFirstCss[13].split(":")[1];

                if (borderradius != null && borderradius != "" && borderradius != undefined && borderradius.length > 0) {
                    borderradius = borderradius.substring(0, borderradius.length - 2);
                    $("#frmDesRadiAll").val(borderradius);
                    cssObjectsFormBody.frmDesRadiusAll = borderradius;
                }
                else {
                    $("#frmDesRadiusAll").click();
                }
            }

            if (descriptionDesignDataFirstCss[14].indexOf("border-top-left-radius") > -1) {
                var bordertopleftradius = descriptionDesignDataFirstCss[14].split(":")[1];

                if (bordertopleftradius != null && bordertopleftradius != "" && bordertopleftradius.length > 0) {
                    bordertopleftradius = bordertopleftradius.substring(0, bordertopleftradius.length - 2);
                    $("#frmDesRadiTopLeft").val(bordertopleftradius);
                    cssObjectsFormBody.frmDesRadiusTopLeft = bordertopleftradius;
                }
            }

            if (descriptionDesignDataFirstCss[15].indexOf("border-top-right-radius") > -1) {
                var bordertoprightradius = descriptionDesignDataFirstCss[15].split(":")[1];

                if (bordertoprightradius != null && bordertoprightradius != "" && bordertoprightradius.length > 0) {
                    bordertoprightradius = bordertoprightradius.substring(0, bordertoprightradius.length - 2);
                    $("#frmDesRadiTopRight").val(bordertoprightradius);
                    cssObjectsFormBody.frmDesRadiusTopRight = bordertoprightradius;
                }
            }

            if (descriptionDesignDataFirstCss[16].indexOf("border-bottom-left-radius") > -1) {
                var borderbottomleftradius = descriptionDesignDataFirstCss[16].split(":")[1];

                if (borderbottomleftradius != null && borderbottomleftradius != "" && borderbottomleftradius.length > 0) {
                    borderbottomleftradius = borderbottomleftradius.substring(0, borderbottomleftradius.length - 2);
                    $("#frmDesRadiBottomLeft").val(borderbottomleftradius);
                    cssObjectsFormBody.frmDesRadiusBttmLeft = borderbottomleftradius;
                }
            }

            if (descriptionDesignDataFirstCss[17].indexOf("border-bottom-right-radius") > -1) {
                var borderbottomrightradius = descriptionDesignDataFirstCss[17].split(":")[1];

                if (borderbottomrightradius != null && borderbottomrightradius != "" && borderbottomrightradius.length > 0) {
                    borderbottomrightradius = borderbottomrightradius.substring(0, borderbottomrightradius.length - 2);
                    $("#frmDesRadiBottomRight").val(borderbottomrightradius);
                    cssObjectsFormBody.frmDesRadiusBttmRight = borderbottomrightradius;
                }
            }

            if (descriptionDesignDataFirstCss[18].indexOf("border-style") > -1) {
                var borderstyle = descriptionDesignDataFirstCss[18].split(":")[1];

                if (borderstyle != null && borderstyle != "" && borderstyle.length > 0) {
                    $("#frmDesAllBrd").val(borderstyle);
                    cssObjectsFormBody.frmDesBrdStylAll = borderstyle;
                }
                else {
                    $("#frmDesBrdAllStyle").click();
                }
            }

            if (descriptionDesignDataFirstCss[19].indexOf("border-width") > -1) {
                var borderwidth = descriptionDesignDataFirstCss[19].split(":")[1];

                if (borderwidth != null && borderwidth != "" && borderwidth.length > 0) {
                    borderwidth = borderwidth.substring(0, borderwidth.length - 2);
                    $("#frmDesAllBrdSize").val(borderwidth);
                    cssObjectsFormBody.frmDesBrdWidAll = borderwidth;
                }
            }

            if (descriptionDesignDataFirstCss[20].indexOf("border-color") > -1) {
                var bordercolor = descriptionDesignDataFirstCss[20].split(":")[1];

                if (bordercolor != null && bordercolor != "" && bordercolor != undefined && bordercolor.length > 0) {
                    $("#frmDesBrdColAll").val(bordercolor);
                    var rgbColor = FormUtil.ConvertHexColorToRGB(bordercolor.replace("#", ""));
                    document.getElementById("frmDesBrdColAll").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.frmDesBrdColAll = bordercolor;
                }
            }

            if (descriptionDesignDataFirstCss[21].indexOf("border-right-style") > -1) {
                var borderrightStyle = descriptionDesignDataFirstCss[21].split(":")[1];

                if (borderrightStyle != null && borderrightStyle != "" && borderrightStyle.length > 0) {
                    $("#frmDesBrdRit").val(borderrightStyle);
                    cssObjectsFormBody.frmDesBrdStylRight = descriptionDesignDataFirstCss[21].split(":")[1];
                }
            }

            if (descriptionDesignDataFirstCss[22].indexOf("border-right-width") > -1) {
                var borderrightwidth = descriptionDesignDataFirstCss[22].split(":")[1];

                if (borderrightwidth != null && borderrightwidth != "" && borderrightwidth.length > 0) {
                    borderrightwidth = borderrightwidth.substring(0, borderrightwidth.length - 2);
                    $("#frmDesBrdRitSize").val(borderrightwidth);
                    cssObjectsFormBody.frmDesBrdWidRight = borderrightwidth;
                }
            }

            if (descriptionDesignDataFirstCss[23].indexOf("border-right-color") > -1) {
                var borderrightcolor = descriptionDesignDataFirstCss[23].split(":")[1];

                if (borderrightcolor != null && borderrightcolor != "" && borderrightcolor != undefined && borderrightcolor.length > 0) {
                    $("#frmDesBrdRitCol").val(borderrightcolor);
                    var rgbColor = FormUtil.ConvertHexColorToRGB(borderrightcolor.replace("#", ""));
                    document.getElementById("frmDesBrdRitCol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.frmDesBrdColRight = descriptionDesignDataFirstCss[23].split(":")[1];
                }
            }

            if (descriptionDesignDataFirstCss[24].indexOf("border-top-style") > -1) {
                var bordertopStyle = descriptionDesignDataFirstCss[24].split(":")[1];

                if (bordertopStyle != null && bordertopStyle != "" && bordertopStyle.length > 0) {
                    $("#frmDesBrdTop").val(bordertopStyle);
                    cssObjectsFormBody.frmDesBrdStylTop = bordertopStyle;
                }
            }

            if (descriptionDesignDataFirstCss[25].indexOf("border-top-width") > -1) {
                var bordertopwidth = descriptionDesignDataFirstCss[25].split(":")[1];

                if (bordertopwidth != null && bordertopwidth != "" && bordertopwidth.length > 0) {
                    bordertopwidth = bordertopwidth.substring(0, bordertopwidth.length - 2);
                    $("#frmDesBrdTopSize").val(bordertopwidth);
                    cssObjectsFormBody.frmDesBrdWidTop = bordertopwidth;
                }
            }

            if (descriptionDesignDataFirstCss[26].indexOf("border-top-color") > -1) {
                var bordertopcolor = descriptionDesignDataFirstCss[26].split(":")[1];

                if (bordertopcolor != null && bordertopcolor != "" && bordertopcolor != undefined && bordertopcolor.length > 0) {
                    $("#frmDesBrdTopCol").val(bordertopcolor);
                    var rgbColor = FormUtil.ConvertHexColorToRGB(bordertopcolor.replace("#", ""));
                    document.getElementById("frmDesBrdTopCol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.frmDesBrdColTop = bordertopcolor
                }
            }

            if (descriptionDesignDataFirstCss[27].indexOf("border-bottom-style") > -1) {
                var borderbottomStyle = descriptionDesignDataFirstCss[27].split(":")[1];

                if (borderbottomStyle != null && borderbottomStyle != "" && borderbottomStyle.length > 0) {
                    $("#frmDesBrdBttm").val(borderbottomStyle);
                    cssObjectsFormBody.frmDesBrdStyleBttm = descriptionDesignDataFirstCss[27].split(":")[1];
                }
            }

            if (descriptionDesignDataFirstCss[28].indexOf("border-bottom-width") > -1) {
                var borderrightwidth = descriptionDesignDataFirstCss[28].split(":")[1];

                if (borderrightwidth != null && borderrightwidth != "" && borderrightwidth.length > 0) {
                    borderrightwidth = borderrightwidth.substring(0, borderrightwidth.length - 2);
                    $("#frmDesBrdBttmSize").val(borderrightwidth);
                    cssObjectsFormBody.frmDesBrdWidBttm = borderrightwidth;
                }
            }

            if (descriptionDesignDataFirstCss[29].indexOf("border-bottom-color") > -1) {
                var borderrightcolor = descriptionDesignDataFirstCss[29].split(":")[1];

                if (borderrightcolor != null && borderrightcolor != "" && borderrightcolor != undefined && borderrightcolor.length > 0) {
                    $("#frmDesBrdBttmCol").val(borderrightcolor);
                    var rgbColor = FormUtil.ConvertHexColorToRGB(borderrightcolor.replace("#", ""));
                    document.getElementById("frmDesBrdBttmCol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.frmDesBrdColBttm = borderrightcolor;
                }
            }

            if (descriptionDesignDataFirstCss[30].indexOf("border-left-style") > -1) {
                var borderleftStyle = descriptionDesignDataFirstCss[30].split(":")[1];

                if (borderleftStyle != null && borderleftStyle != "" && borderleftStyle.length > 0) {
                    $("#frmDesBrdLeft").val(borderleftStyle);
                    cssObjectsFormBody.frmDesBrdStylLeft = borderleftStyle;
                }
            }

            if (descriptionDesignDataFirstCss[31].indexOf("border-left-width") > -1) {
                var borderleftwidth = descriptionDesignDataFirstCss[31].split(":")[1];

                if (borderleftwidth != null && borderleftwidth != "" && borderleftwidth.length > 0) {
                    borderleftwidth = borderleftwidth.substring(0, borderleftwidth.length - 2);
                    $("#frmDesBrdLeftSize").val(borderleftwidth);
                    cssObjectsFormBody.frmDesBrdWidLeft = borderleftwidth;
                }
            }

            if (descriptionDesignDataFirstCss[32].indexOf("border-left-color") > -1) {
                var borderleftcolor = descriptionDesignDataFirstCss[32].split(":")[1];

                if (borderleftcolor != null && borderleftcolor != "" && borderleftcolor != undefined && borderleftcolor.length > 0) {
                    $("#frmDesBrdLeftCol").val(borderleftcolor);
                    var rgbColor = FormUtil.ConvertHexColorToRGB(borderleftcolor.replace("#", ""));
                    document.getElementById("frmDesBrdLeftCol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.frmDesBrdColLeft = borderleftcolor;
                }
            }

            if (descriptionDesignDataSecondCss[0].indexOf("margin") > -1) {
                var margin = descriptionDesignDataSecondCss[0].split(":")[1];

                if (margin != null && margin != "" && margin != undefined && margin.length > 0) {
                    margin = margin.substring(0, margin.length - 2);
                    $("#frmDesFontMargAll").val(margin);
                    cssObjectsFormBody.frmDesFontMarg = margin;
                }
                else {
                    $("#frmDesPaddingAll").click();
                }
            }

            if (descriptionDesignDataSecondCss[1].indexOf("margin-top") > -1) {
                var margintop = descriptionDesignDataSecondCss[1].split(":")[1];

                if (margintop != null && margintop != "" && margintop.length > 0) {
                    margintop = margintop.substring(0, margintop.length - 2);
                    $("#frmDesFontMargTop").val(margintop);
                    cssObjectsFormBody.frmDesFontMargTop = margintop;
                }
            }

            if (descriptionDesignDataSecondCss[2].indexOf("margin-right") > -1) {
                var marginright = descriptionDesignDataSecondCss[2].split(":")[1];

                if (marginright != null && marginright != "" && marginright.length > 0) {
                    marginright = marginright.substring(0, marginright.length - 2);
                    $("#frmDesFontMargRight").val(marginright);
                    cssObjectsFormBody.frmDesFontMargRighted = marginright;
                }
            }

            if (descriptionDesignDataSecondCss[3].indexOf("margin-bottom") > -1) {
                var marginbottom = descriptionDesignDataSecondCss[3].split(":")[1];

                if (marginbottom != null && marginbottom != "" && marginbottom.length > 0) {
                    marginbottom = marginbottom.substring(0, marginbottom.length - 2);
                    $("#frmDesFontMargBottom").val(marginbottom);
                    cssObjectsFormBody.frmDesFontMargBttm = marginbottom;
                }
            }

            if (descriptionDesignDataSecondCss[4].indexOf("margin-left") > -1) {
                var marginleft = descriptionDesignDataSecondCss[4].split(":")[1];

                if (marginleft != null && marginleft != "" && marginleft.length > 0) {
                    marginleft = marginleft.substring(0, marginleft.length - 2);
                    $("#frmDesFontMargLeft").val(marginleft);
                    cssObjectsFormBody.frmDesFontMargLeft = marginleft;
                }
            }
        }
        else if (formDetails.IsDescriptionCustomCss == true) {
        }
    },
    BindLabelCss: function () {
        var labelDesignData = "";

        if (formDetails.IsLabelCustomCss == false && formDetails.LabelCss != null && formDetails.LabelCss.length > 0) {

            labelDesignData = formDetails.LabelCss.split("@$@");

            var labelDesignDataFirstCss = labelDesignData[0];
            var labelDesignDataSecondCss = labelDesignData[1];

            labelDesignDataFirstCss = $.trim(labelDesignDataFirstCss);
            labelDesignDataSecondCss = $.trim(labelDesignDataSecondCss);

            labelDesignDataFirstCss = labelDesignDataFirstCss.split(";");
            labelDesignDataSecondCss = labelDesignDataSecondCss.split(";");

            if (labelDesignDataFirstCss[0].indexOf("justify-content") > -1) {
                var TextAlign = labelDesignDataFirstCss[0].split(":")[1];

                if (TextAlign != null && TextAlign != "" && TextAlign != undefined && TextAlign.length > 0) {
                    $('#lblTxtAlignLeft').addClass('txt-active');
                    $('#lblTxtAlignRite,#lblTxtAlignCent').removeClass('txt-active');
                    cssObjectsFormBody.lblTextAlignLeft = "flex-start";
                }
            }

            if (labelDesignDataFirstCss[1].indexOf("justify-content") > -1) {
                var TextAlign = labelDesignDataFirstCss[1].split(":")[1];

                if (TextAlign != null && TextAlign != "" && TextAlign != undefined && TextAlign.length > 0) {
                    $('#lblTxtAlignCent').addClass('txt-active');
                    $('#lblTxtAlignLeft,#lblTxtAlignRite').removeClass('txt-active');
                    cssObjectsFormBody.lblTextAlignCenter = "center";
                }
            }

            if (labelDesignDataFirstCss[2].indexOf("justify-content") > -1) {
                var TextAlign = labelDesignDataFirstCss[2].split(":")[1];

                if (TextAlign != null && TextAlign != "" && TextAlign != undefined && TextAlign.length > 0) {
                    $('#lblTxtAlignRite').addClass('txt-active');
                    $('#lblTxtAlignLeft,#lblTxtAlignCent').removeClass('txt-active');
                    cssObjectsFormBody.lblTextAlignRight = "flex-end";
                }
            }

            if (labelDesignDataFirstCss[3].indexOf("padding") > -1) {
                var padding = labelDesignDataFirstCss[3].split(":")[1];

                if (padding != null && padding != "" && padding != undefined && padding.length > 0) {
                    padding = padding.substring(0, padding.length - 2);
                    $("#lblPadall").val(padding);
                    cssObjectsFormBody.lblTextPaddAll = padding;
                }
            }

            if (labelDesignDataFirstCss[4].indexOf("padding-top") > -1) {
                var paddingtop = labelDesignDataFirstCss[4].split(":")[1];

                if (paddingtop != null && paddingtop != "" && paddingtop.length > 0) {
                    paddingtop = paddingtop.substring(0, paddingtop.length - 2);
                    $("#lblPadTop").val(paddingtop);
                    cssObjectsFormBody.lblTextPaddTop = paddingtop;

                    if ($("#lblSpacestyle").attr('data-lblpad') != undefined && $("#lblSpacestyle").attr('data-lblpad') == "lblAllPadding") {
                        $("#lblSpacestyle").click();
                    }
                }
            }

            if (labelDesignDataFirstCss[5].indexOf("padding-right") > -1) {
                var paddingright = labelDesignDataFirstCss[5].split(":")[1];

                if (paddingright != null && paddingright != "" && paddingright.length > 0) {
                    paddingright = paddingright.substring(0, paddingright.length - 2);
                    $("#lblPadRight").val(paddingright);
                    cssObjectsFormBody.lblTextPaddRight = paddingright;

                    if ($("#lblSpacestyle").attr('data-lblpad') != undefined && $("#lblSpacestyle").attr('data-lblpad') == "lblAllPadding") {
                        $("#lblSpacestyle").click();
                    }
                }
            }

            if (labelDesignDataFirstCss[6].indexOf("padding-bottom") > -1) {
                var paddingbottom = labelDesignDataFirstCss[6].split(":")[1];

                if (paddingbottom != null && paddingbottom != "" && paddingbottom.length > 0) {
                    paddingbottom = paddingbottom.substring(0, paddingbottom.length - 2);
                    $("#lblPadBottom").val(paddingbottom);
                    cssObjectsFormBody.lblTextPaddBottom = paddingbottom;

                    if ($("#lblSpacestyle").attr('data-lblpad') != undefined && $("#lblSpacestyle").attr('data-lblpad') == "lblAllPadding") {
                        $("#lblSpacestyle").click();
                    }
                }
            }

            if (labelDesignDataFirstCss[7].indexOf("padding-left") > -1) {
                var paddingleft = labelDesignDataFirstCss[7].split(":")[1];

                if (paddingleft != null && paddingleft != "" && paddingleft.length > 0) {
                    paddingleft = paddingleft.substring(0, paddingleft.length - 2);
                    $("#lblPadLeft").val(paddingleft);
                    cssObjectsFormBody.lblTextPaddLeft = paddingleft;

                    if ($("#lblSpacestyle").attr('data-lblpad') != undefined && $("#lblSpacestyle").attr('data-lblpad') == "lblAllPadding") {
                        $("#lblSpacestyle").click();
                    }
                }
            }

            if (labelDesignDataFirstCss[8].indexOf("font-family") > -1) {
                var fontFamily = labelDesignDataFirstCss[8].split(":")[1];

                if (fontFamily != null && fontFamily != "" && fontFamily != undefined && fontFamily.length > 0) {
                    $("#selectFontFamily").val(fontFamily);
                    cssObjectsFormBody.lblTextFontFamily = fontFamily;
                }
            }

            if (labelDesignDataFirstCss[9].indexOf("font-size") > -1) {
                var fontSize = labelDesignDataFirstCss[9].split(":")[1];

                if (fontSize != null && fontSize != "" && fontSize != undefined && fontSize.length > 0) {
                    fontSize = fontSize.substring(0, fontSize.length - 2);
                    $("#lblTxtFontsize").val(fontSize);
                    cssObjectsFormBody.lblTextFontSize = fontSize;
                }
            }

            if (labelDesignDataFirstCss[10].indexOf("color") > -1) {
                var color = labelDesignDataFirstCss[10].split(":")[1];

                if (color != null && color != "" && color != undefined && color.length > 0) {
                    $("#lblTxtFontCol").val(color).css({ backgroundColor: color });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(color.replace("#", ""));
                    document.getElementById("lblTxtFontCol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.lblTextFontColor = color;
                }
            }

            if (labelDesignDataFirstCss[11].indexOf("font-weight") > -1) {
                var fontWeight = labelDesignDataFirstCss[11].split(":")[1];

                if (fontWeight != null && fontWeight != "" && fontWeight != undefined && fontWeight.length > 0) {
                    fontWeight = fontWeight.split(" ")[0];

                    $("#lblTxtFontWeight").val(fontWeight);
                    cssObjectsFormBody.lblTextFontWeight = fontWeight;
                }
            }

            if (labelDesignDataFirstCss[12].indexOf("font-style") > -1) {
                var fontStyle = labelDesignDataFirstCss[12].split(":")[1];

                if (fontStyle != null && fontStyle != "" && fontStyle != undefined && fontStyle.length > 0) {
                    $("#lblTxtFontWeight").attr('data-fontstyle', fontStyle);
                    cssObjectsFormBody.lblTextFontStyle = fontStyle;
                }
            }

            if (labelDesignDataFirstCss[13].indexOf("text-transform") > -1) {
                var texttransform = labelDesignDataFirstCss[13].split(":")[1];

                if (texttransform != null && texttransform != "" && texttransform.length > 0) {
                    $("#lblTxtfontCaps").val(texttransform);
                    cssObjectsFormBody.lblTextFontCaps = texttransform;
                }
            }

            if (labelDesignDataSecondCss[0].indexOf("height") > -1) {
                var height = labelDesignDataSecondCss[0].split(":")[1];

                if (height != null && height != "" && height != undefined && height.length > 0) {
                    height = height.substring(0, height.length - 2);
                    $("#txtBoxHeight").val(height);
                    cssObjectsFormBody.textBoxHeight = height;
                }
            }
        }
        else if (formDetails.IsLabelCustomCss == true) {
        }
    },
    BindTextboxDropCss: function () {

        var textboxDropdownDesignData = "";

        if (formDetails.IsTextboxDropCustomCss == false && formDetails.TextboxDropCss != null && formDetails.TextboxDropCss.length > 0) {

            textboxDropdownDesignData = formDetails.TextboxDropCss.split(";");

            if (textboxDropdownDesignData[0].indexOf("font-family") > -1) {
                var fontFamily = textboxDropdownDesignData[0].split(":")[1];

                if (fontFamily != null && fontFamily != "" && fontFamily != undefined && fontFamily.length > 0) {
                    $("#txtBoxFontFam").val(fontFamily);
                    cssObjectsFormBody.textBoxFontFamily = fontFamily;
                }
            }

            if (textboxDropdownDesignData[1].indexOf("font-size") > -1) {
                var fontSize = textboxDropdownDesignData[1].split(":")[1];

                if (fontSize != null && fontSize != "" && fontSize != undefined && fontSize.length > 0) {
                    fontSize = fontSize.substring(0, fontSize.length - 2);
                    $("#txtBoxFontSize").val(fontSize);
                    cssObjectsFormBody.textBoxFontSize = fontSize;
                }
            }

            if (textboxDropdownDesignData[2].indexOf("color") > -1) {
                var color = textboxDropdownDesignData[2].split(":")[1];

                if (color != null && color != "" && color != undefined && color.length > 0) {
                    $("#txtBoxFontCol").val(color).css({ backgroundColor: color });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(color.replace("#", ""));
                    document.getElementById("txtBoxFontCol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.textBoxFontColor = color;
                }
            }

            if (textboxDropdownDesignData[3].indexOf("font-weight") > -1) {
                var fontWeight = textboxDropdownDesignData[3].split(":")[1];

                if (fontWeight != null && fontWeight != "" && fontWeight != undefined && fontWeight.length > 0) {
                    $("#txtBoxFontStroke").val(fontWeight);
                    cssObjectsFormBody.textBoxFontWeight = fontWeight;
                }
            }

            if (textboxDropdownDesignData[4].indexOf("font-style") > -1) {
                var fontStyle = textboxDropdownDesignData[4].split(":")[1];

                if (fontStyle != null && fontStyle != "" && fontStyle != undefined && fontStyle.length > 0) {
                    $("#txtBoxFontStroke").attr('data-fontstyle', fontStyle);
                    cssObjectsFormBody.textBoxFontStyle = fontStyle;
                }
            }

            if (textboxDropdownDesignData[5].indexOf("text-indent") > -1) {
                var textindent = textboxDropdownDesignData[5].split(":")[1];

                if (textindent != null && textindent != "" && textindent.length > 0) {
                    textindent = textindent.substring(0, textindent.length - 2);
                    $("#txtBoxTextIndent").val(textindent);
                    cssObjectsFormBody.textBoxFontIndent = textindent;
                }
            }

            if (textboxDropdownDesignData[6].indexOf("height") > -1) {
                var height = textboxDropdownDesignData[6].split(":")[1];

                if (height != null && height != "" && height.length > 0) {
                    height = height.substring(0, height.length - 2);
                    $("#txtBoxHeight").val(height);
                    cssObjectsFormBody.textBoxHeight = height;
                }
            }

            if (textboxDropdownDesignData[7].indexOf("background-color") > -1) {
                var backgroundcolor = textboxDropdownDesignData[7].split(":")[1];

                if (backgroundcolor != null && backgroundcolor != "" && backgroundcolor != undefined && backgroundcolor.length > 0) {
                    var colorCode = FormUtil.RGBToHex(backgroundcolor);
                    $("#txtBoxBgCol").val("#" + colorCode.HexValue).css({ backgroundColor: "#" + colorCode.HexValue })
                    $("#txtBoxbgRange").val(colorCode.Opacity * 10).change();
                    document.getElementById("txtBoxBgCol").style.color = 0.213 * colorCode.R + 0.715 * colorCode.G + 0.072 * colorCode.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.textBoxBgColor = backgroundcolor;
                }
            }

            if (textboxDropdownDesignData[8].indexOf("border") > -1) {
                var borderstyle = textboxDropdownDesignData[8].split(":")[1];

                if (borderstyle != null && borderstyle != "" && borderstyle.length > 0) {
                    $("#txtBxAllBrd").val(borderstyle);
                    cssObjectsFormBody.textBoxAllBrd = textboxDropdownDesignData[8].split(":")[1];
                }
            }

            if (textboxDropdownDesignData[9].indexOf("border-width") > -1) {
                var borderwidth = textboxDropdownDesignData[9].split(":")[1];

                if (borderwidth != null && borderwidth != "" && borderwidth.length > 0) {
                    borderwidth = borderwidth.substring(0, borderwidth.length - 2);
                    $("#txtBxAllBrdSize").val(borderwidth);
                    cssObjectsFormBody.textBoxAllBrdsize = borderwidth;
                }
            }

            if (textboxDropdownDesignData[10].indexOf("border-color") > -1) {
                var bordercolor = textboxDropdownDesignData[10].split(":")[1];

                if (bordercolor != null && bordercolor != "" && bordercolor != undefined && bordercolor.length > 0) {
                    $("#txtBxBrdColAll").val(bordercolor).css({ backgroundColor: bordercolor });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(bordercolor.replace("#", ""));
                    document.getElementById("txtBxBrdColAll").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.textBoxAllBrdcol = bordercolor;
                }
            }

            if (textboxDropdownDesignData[11].indexOf("border-top-style") > -1) {
                var bordertopStyle = textboxDropdownDesignData[11].split(":")[1];

                if (bordertopStyle != null && bordertopStyle != "" && bordertopStyle.length > 0) {
                    $("#txtBxBrdTop").val(bordertopStyle);
                    cssObjectsFormBody.textBoxBrdTop = bordertopStyle;

                    if ($("#txtbxbrdstyle").attr('data-txtbxbrd') != undefined && $("#txtbxbrdstyle").attr('data-txtbxbrd') == "txtBxBrdAllStyle") {
                        $("#txtbxbrdstyle").click();
                    }
                }
            }

            if (textboxDropdownDesignData[12].indexOf("border-top-width") > -1) {
                var bordertopwidth = textboxDropdownDesignData[12].split(":")[1];

                if (bordertopwidth != null && bordertopwidth != "" && bordertopwidth.length > 0) {
                    bordertopwidth = bordertopwidth.substring(0, bordertopwidth.length - 2);
                    $("#txtBxBrdTopSize").val(bordertopwidth);
                    cssObjectsFormBody.textBoxBrdTopSize = bordertopwidth;

                    if ($("#txtbxbrdstyle").attr('data-txtbxbrd') != undefined && $("#txtbxbrdstyle").attr('data-txtbxbrd') == "txtBxBrdAllStyle") {
                        $("#txtbxbrdstyle").click();
                    }
                }
            }

            if (textboxDropdownDesignData[13].indexOf("border-top-color") > -1) {
                var bordertopcolor = textboxDropdownDesignData[13].split(":")[1];

                if (bordertopcolor != null && bordertopcolor != "" && bordertopcolor != undefined && bordertopcolor.length > 0) {
                    $("#txtBxBrdTopCol").val(bordertopcolor).css({ backgroundColor: bordertopcolor });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(bordertopcolor.replace("#", ""));
                    document.getElementById("txtBxBrdTopCol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.textBoxBrdTopCol = bordertopcolor;

                    if ($("#txtbxbrdstyle").attr('data-txtbxbrd') != undefined && $("#txtbxbrdstyle").attr('data-txtbxbrd') == "txtBxBrdAllStyle") {
                        $("#txtbxbrdstyle").click();
                    }
                }
            }

            if (textboxDropdownDesignData[14].indexOf("border-right-style") > -1) {
                var borderrightStyle = textboxDropdownDesignData[14].split(":")[1];

                if (borderrightStyle != null && borderrightStyle != "" && borderrightStyle.length > 0) {
                    $("#txtBxBrdRit").val(borderrightStyle);
                    cssObjectsFormBody.textBoxBrdRight = borderrightStyle;

                    if ($("#txtbxbrdstyle").attr('data-txtbxbrd') != undefined && $("#txtbxbrdstyle").attr('data-txtbxbrd') == "txtBxBrdAllStyle") {
                        $("#txtbxbrdstyle").click();
                    }
                }
            }

            if (textboxDropdownDesignData[15].indexOf("border-right-width") > -1) {
                var borderrightwidth = textboxDropdownDesignData[15].split(":")[1];

                if (borderrightwidth != null && borderrightwidth != "" && borderrightwidth.length > 0) {
                    borderrightwidth = borderrightwidth.substring(0, borderrightwidth.length - 2);
                    $("#txtBxBrdRitSize").val(borderrightwidth);
                    cssObjectsFormBody.textBoxBrdRightSize = borderrightwidth;

                    if ($("#txtbxbrdstyle").attr('data-txtbxbrd') != undefined && $("#txtbxbrdstyle").attr('data-txtbxbrd') == "txtBxBrdAllStyle") {
                        $("#txtbxbrdstyle").click();
                    }
                }
            }

            if (textboxDropdownDesignData[16].indexOf("border-right-color") > -1) {
                var borderrightcolor = textboxDropdownDesignData[16].split(":")[1];

                if (borderrightcolor != null && borderrightcolor != "" && borderrightcolor != undefined && borderrightcolor.length > 0) {
                    $("#txtBxBrdRitCol").val(borderrightcolor).css({ backgroundColor: borderrightcolor });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(borderrightcolor.replace("#", ""));
                    document.getElementById("txtBxBrdRitCol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.textBoxBrdRightCol = borderrightcolor;

                    if ($("#txtbxbrdstyle").attr('data-txtbxbrd') != undefined && $("#txtbxbrdstyle").attr('data-txtbxbrd') == "txtBxBrdAllStyle") {
                        $("#txtbxbrdstyle").click();
                    }
                }
            }

            if (textboxDropdownDesignData[17].indexOf("border-bottom-style") > -1) {
                var borderbottomStyle = textboxDropdownDesignData[17].split(":")[1];

                if (borderbottomStyle != null && borderbottomStyle != "" && borderbottomStyle.length > 0) {
                    $("#txtBxBrdBttm").val(borderbottomStyle);
                    cssObjectsFormBody.textBoxBrdBttm = borderbottomStyle;

                    if ($("#txtbxbrdstyle").attr('data-txtbxbrd') != undefined && $("#txtbxbrdstyle").attr('data-txtbxbrd') == "txtBxBrdAllStyle") {
                        $("#txtbxbrdstyle").click();
                    }
                }
            }

            if (textboxDropdownDesignData[18].indexOf("border-bottom-width") > -1) {
                var borderrightwidth = textboxDropdownDesignData[18].split(":")[1];

                if (borderrightwidth != null && borderrightwidth != "" && borderrightwidth.length > 0) {
                    borderrightwidth = borderrightwidth.substring(0, borderrightwidth.length - 2);
                    $("#txtBxBrdBttmSize").val(borderrightwidth);
                    cssObjectsFormBody.textBoxBrdBttmSize = borderrightwidth;

                    if ($("#txtbxbrdstyle").attr('data-txtbxbrd') != undefined && $("#txtbxbrdstyle").attr('data-txtbxbrd') == "txtBxBrdAllStyle") {
                        $("#txtbxbrdstyle").click();
                    }
                }
            }

            if (textboxDropdownDesignData[19].indexOf("border-bottom-color") > -1) {
                var borderrightcolor = textboxDropdownDesignData[19].split(":")[1];

                if (borderrightcolor != null && borderrightcolor != "" && borderrightcolor != undefined && borderrightcolor.length > 0) {
                    $("#txtBxBrdBttmCol").val(borderrightcolor).css({ backgroundColor: borderrightcolor });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(borderrightcolor.replace("#", ""));
                    document.getElementById("txtBxBrdBttmCol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.textBoxBrdBttmCol = borderrightcolor;

                    if ($("#txtbxbrdstyle").attr('data-txtbxbrd') != undefined && $("#txtbxbrdstyle").attr('data-txtbxbrd') == "txtBxBrdAllStyle") {
                        $("#txtbxbrdstyle").click();
                    }
                }
            }

            if (textboxDropdownDesignData[20].indexOf("border-left-style") > -1) {
                var borderleftStyle = textboxDropdownDesignData[20].split(":")[1];

                if (borderleftStyle != null && borderleftStyle != "" && borderleftStyle.length > 0) {
                    $("#txtBxBrdLeft").val(borderleftStyle);
                    cssObjectsFormBody.textBoxBrdleft = borderleftStyle;

                    if ($("#txtbxbrdstyle").attr('data-txtbxbrd') != undefined && $("#txtbxbrdstyle").attr('data-txtbxbrd') == "txtBxBrdAllStyle") {
                        $("#txtbxbrdstyle").click();
                    }
                }
            }

            if (textboxDropdownDesignData[21].indexOf("border-left-width") > -1) {
                var borderleftwidth = textboxDropdownDesignData[21].split(":")[1];

                if (borderleftwidth != null && borderleftwidth != "" && borderleftwidth.length > 0) {
                    borderleftwidth = borderleftwidth.substring(0, borderleftwidth.length - 2);
                    $("#txtBxBrdLeftSize").val(borderleftwidth);
                    cssObjectsFormBody.textBoxBrdLeftSize = borderleftwidth;

                    if ($("#txtbxbrdstyle").attr('data-txtbxbrd') != undefined && $("#txtbxbrdstyle").attr('data-txtbxbrd') == "txtBxBrdAllStyle") {
                        $("#txtbxbrdstyle").click();
                    }
                }
            }

            if (textboxDropdownDesignData[22].indexOf("border-left-color") > -1) {
                var borderleftcolor = textboxDropdownDesignData[22].split(":")[1];

                if (borderleftcolor != null && borderleftcolor != "" && borderleftcolor != undefined && borderleftcolor.length > 0) {
                    $("#txtBxBrdLeftCol").val(borderleftcolor).css({ backgroundColor: borderleftcolor });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(borderleftcolor.replace("#", ""));
                    document.getElementById("txtBxBrdLeftCol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.textBoxBrdLeftCol = borderleftcolor;

                    if ($("#txtbxbrdstyle").attr('data-txtbxbrd') != undefined && $("#txtbxbrdstyle").attr('data-txtbxbrd') == "txtBxBrdAllStyle") {
                        $("#txtbxbrdstyle").click();
                    }
                }
            }

            if (textboxDropdownDesignData[23].indexOf("justify-content") > -1) {
                var justifycontent = textboxDropdownDesignData[23].split(":")[1];

                if (justifycontent != null && justifycontent != "" && justifycontent != undefined && justifycontent.length > 0) {
                    $('#lblBtnAlignLeft').addClass('txt-active');
                    $('#lblBtnAlignRight,#lblBtnAlignCenter').removeClass('txt-active');
                    cssObjectsFormBody.btnAlignLeft = "";
                }
            }

            if (textboxDropdownDesignData[24].indexOf("border-radius") > -1) {
                var borderradius = textboxDropdownDesignData[24].split(":")[1];

                if (borderradius != null && borderradius != "" && borderradius != undefined && borderradius.length > 0) {
                    borderradius = borderradius.substring(0, borderradius.length - 2);
                    $("#txtBoxRadiAll").val(borderradius);
                    cssObjectsFormBody.textBoxBrdRadiusAll = borderradius;
                }
            }

            if (textboxDropdownDesignData[25].indexOf("border-top-left-radius") > -1) {
                var bordertopleftradius = textboxDropdownDesignData[25].split(":")[1];

                if (bordertopleftradius != null && bordertopleftradius != "" && bordertopleftradius.length > 0) {
                    bordertopleftradius = bordertopleftradius.substring(0, bordertopleftradius.length - 2);
                    $("#txtBoxRadiTopLeft").val(bordertopleftradius);
                    cssObjectsFormBody.textBoxBrdRadiusTopLeft = bordertopleftradius;

                    if ($("#textBoxRadiusall").attr('data-textboxradius') != undefined && $("#textBoxRadiusall").attr('data-textboxradius') == "txtBoxRadiusAll") {
                        $("#textBoxRadiusall").click();
                    }
                }
            }

            if (textboxDropdownDesignData[26].indexOf("border-top-right-radius") > -1) {
                var bordertoprightradius = textboxDropdownDesignData[26].split(":")[1];

                if (bordertoprightradius != null && bordertoprightradius != "" && bordertoprightradius.length > 0) {
                    bordertoprightradius = bordertoprightradius.substring(0, bordertoprightradius.length - 2);
                    $("#txtBoxRadiTopRight").val(bordertoprightradius);
                    cssObjectsFormBody.textBoxBrdRadiusTopRight = bordertoprightradius;

                    if ($("#textBoxRadiusall").attr('data-textboxradius') != undefined && $("#textBoxRadiusall").attr('data-textboxradius') == "txtBoxRadiusAll") {
                        $("#textBoxRadiusall").click();
                    }
                }
            }

            if (textboxDropdownDesignData[27].indexOf("border-bottom-left-radius") > -1) {
                var borderbottomleftradius = textboxDropdownDesignData[27].split(":")[1];

                if (borderbottomleftradius != null && borderbottomleftradius != "" && borderbottomleftradius.length > 0) {
                    borderbottomleftradius = borderbottomleftradius.substring(0, borderbottomleftradius.length - 2);
                    $("#txtBoxRadiBottomLeft").val(borderbottomleftradius);
                    cssObjectsFormBody.textBoxBrdRadiusBttmLeft = borderbottomleftradius;

                    if ($("#textBoxRadiusall").attr('data-textboxradius') != undefined && $("#textBoxRadiusall").attr('data-textboxradius') == "txtBoxRadiusAll") {
                        $("#textBoxRadiusall").click();
                    }
                }
            }

            if (textboxDropdownDesignData[28].indexOf("border-bottom-right-radius") > -1) {
                var borderbottomrightradius = textboxDropdownDesignData[28].split(":")[1];

                if (borderbottomrightradius != null && borderbottomrightradius != "" && borderbottomrightradius.length > 0) {
                    borderbottomrightradius = borderbottomrightradius.substring(0, borderbottomrightradius.length - 2);
                    $("#txtBoxRadiBottomRight").val(borderbottomrightradius);
                    cssObjectsFormBody.textBoxBrdRadiusBttmRight = borderbottomrightradius;

                    if ($("#textBoxRadiusall").attr('data-textboxradius') != undefined && $("#textBoxRadiusall").attr('data-textboxradius') == "txtBoxRadiusAll") {
                        $("#textBoxRadiusall").click();
                    }
                }
            }
        }
        else if (formDetails.IsTextboxDropCustomCss == true) {
        }
    },
    BindButtonCss: function () {

        var buttonDesignData = "";
        var buttonDesignDataFirstCss = "";
        var buttonDesignDataSecondCss = "";
        var buttonDesignDataThirdCss = "";
        var buttonDesignDataFourthCss = "";

        if (formDetails.IsButtonCustomCss == false && formDetails.ButtonCss != null && formDetails.ButtonCss.length > 0) {

            buttonDesignData = formDetails.ButtonCss.split("@$@");

            buttonDesignDataFirstCss = buttonDesignData[0];
            buttonDesignDataSecondCss = buttonDesignData[1];
            buttonDesignDataThirdCss = buttonDesignData[2];
            buttonDesignDataFourthCss = buttonDesignData[3];

            buttonDesignDataFirstCss = $.trim(buttonDesignDataFirstCss);
            buttonDesignDataSecondCss = $.trim(buttonDesignDataSecondCss);
            buttonDesignDataThirdCss = $.trim(buttonDesignDataThirdCss);
            buttonDesignDataFourthCss = $.trim(buttonDesignDataFourthCss);

            buttonDesignDataFirstCss = buttonDesignDataFirstCss.split(";");
            buttonDesignDataSecondCss = buttonDesignDataSecondCss.split(";");
            buttonDesignDataThirdCss = buttonDesignDataThirdCss.split(";");
            buttonDesignDataFourthCss = buttonDesignDataFourthCss.split(";");

            if (buttonDesignDataFirstCss[0].indexOf("justify-content") > -1) {
                var TextAlign = buttonDesignDataFirstCss[0].split(":")[1];

                if (TextAlign != null && TextAlign != "" && TextAlign != undefined && TextAlign.length > 0) {
                    $('#lblBtnAlignCenter').addClass('txt-active');
                    $('#lblBtnAlignLeft,#lblBtnAlignRight').removeClass('txt-active');
                    cssObjectsFormBody.btnAlignCenter = "center";
                }
            }

            if (buttonDesignDataFirstCss[1].indexOf("justify-content") > -1) {
                var TextAlign = buttonDesignDataFirstCss[1].split(":")[1];

                if (TextAlign != null && TextAlign != "" && TextAlign != undefined && TextAlign.length > 0) {
                    $('#lblBtnAlignRight').addClass('txt-active');
                    $('#lblBtnAlignLeft,#lblBtnAlignCenter').removeClass('txt-active');
                    cssObjectsFormBody.btnAlignRight = "flex-end";
                }
            }

            if (buttonDesignDataSecondCss[0].indexOf("width") > -1) {
                var width = buttonDesignDataSecondCss[0].split(":")[1];

                if (width != null && width != "" && width != undefined && width.length > 0) {
                    //need to ask yakkub where it is binding
                }
            }

            if (buttonDesignDataSecondCss[1].indexOf("margin") > -1) {
                var margin = buttonDesignDataSecondCss[1].split(":")[1];

                if (margin != null && margin != "" && margin != undefined && margin.length > 0) {
                    margin = margin.split(" ")[0];
                    margin = margin.substring(0, margin.length - 2);
                    $("#subBtnMargAll").val(margin);
                    cssObjectsFormBody.subBtnMarginAll = margin;
                }
            }

            if (buttonDesignDataSecondCss[2].indexOf("margin-top") > -1) {
                var margintop = buttonDesignDataSecondCss[2].split(":")[1];

                if (margintop != null && margintop != "" && margintop.length > 0) {

                    margintop = margintop.split(" ")[0];
                    margintop = margintop.substring(0, margintop.length - 2);
                    $("#subBtnMargTop").val(margintop);
                    cssObjectsFormBody.subBtnMarginTop = margintop;

                    if ($("#btnMarginall").attr('data-btnradius') != undefined && $("#btnMarginall").attr('data-btnradius') == "subBtnMarginAll") {
                        $("#btnMarginall").click();
                    }
                }
            }

            if (buttonDesignDataSecondCss[3].indexOf("margin-bottom") > -1) {
                var marginbottom = buttonDesignDataSecondCss[3].split(":")[1];

                if (marginbottom != null && marginbottom != "" && marginbottom.length > 0) {
                    marginbottom = marginbottom.split(" ")[0];
                    marginbottom = marginbottom.substring(0, marginbottom.length - 2);
                    $("#subBtnMargBottom").val(marginbottom);
                    cssObjectsFormBody.subBtnMarginBttm = marginbottom;

                    if ($("#btnMarginall").attr('data-btnradius') != undefined && $("#btnMarginall").attr('data-btnradius') == "subBtnMarginAll") {
                        $("#btnMarginall").click();
                    }
                }
            }

            if (buttonDesignDataSecondCss[4].indexOf("margin-left") > -1) {
                var marginleft = buttonDesignDataSecondCss[4].split(":")[1];

                if (marginleft != null && marginleft != "" && marginleft.length > 0) {
                    marginleft = marginleft.split(" ")[0];
                    marginleft = marginleft.substring(0, marginleft.length - 2);
                    $("#subBtnMargLeft").val(marginleft);
                    cssObjectsFormBody.subBtnMarginLeft = marginleft;

                    if ($("#btnMarginall").attr('data-btnradius') != undefined && $("#btnMarginall").attr('data-btnradius') == "subBtnMarginAll") {
                        $("#btnMarginall").click();
                    }
                }
            }

            if (buttonDesignDataSecondCss[5].indexOf("margin-right") > -1) {
                var marginright = buttonDesignDataSecondCss[5].split(":")[1];

                if (marginright != null && marginright != "" && marginright.length > 0) {
                    marginright = marginright.split(" ")[0];
                    marginright = marginright.substring(0, marginright.length - 2);
                    $("#subBtnMargRight").val(marginright);
                    cssObjectsFormBody.subBtnMarginRight = marginright;

                    if ($("#btnMarginall").attr('data-btnradius') != undefined && $("#btnMarginall").attr('data-btnradius') == "subBtnMarginAll") {
                        $("#btnMarginall").click();
                    }
                }
            }

            if (buttonDesignDataThirdCss[0].indexOf("width") > -1) {
                var width = buttonDesignDataThirdCss[0].split(":")[1];

                if (width != null && width != "" && width != undefined && width.length > 0) {

                    width = width.split(" ")[0];

                    width = width.substring(0, width.length - 2);
                    $("#btnWidth").val(width);
                    cssObjectsFormBody.btnWidth = width;
                }
            }

            if (buttonDesignDataThirdCss[1].indexOf("height") > -1) {
                var height = buttonDesignDataThirdCss[1].split(":")[1];

                if (height != null && height != "" && height != undefined && height.length > 0) {
                    height = height.split(" ")[0];

                    height = height.substring(0, height.length - 2);
                    $("#btnHeight").val(height);
                    cssObjectsFormBody.subBtnHeight = height;
                }
            }

            if (buttonDesignDataThirdCss[2].indexOf("background-color") > -1) {
                var backgroundcolor = buttonDesignDataThirdCss[2].split(":")[1];

                if (backgroundcolor != null && backgroundcolor != "" && backgroundcolor != undefined && backgroundcolor.length > 0) {
                    $("#btnBgcol").val(backgroundcolor).css({ backgroundColor: backgroundcolor });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(backgroundcolor.replace("#", ""));
                    document.getElementById("btnBgcol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.subBtnBgCol = backgroundcolor;
                }
            }

            if (buttonDesignDataThirdCss[3].indexOf("font-family") > -1) {
                var fontFamily = buttonDesignDataThirdCss[3].split(":")[1];

                if (fontFamily != null && fontFamily != "" && fontFamily != undefined && fontFamily.length > 0) {
                    $("#btnfontfamall").val(fontFamily);
                    cssObjectsFormBody.subBtnFontFamily = fontFamily;
                }
            }

            if (buttonDesignDataThirdCss[4].indexOf("font-size") > -1) {
                var fontSize = buttonDesignDataThirdCss[4].split(":")[1];

                if (fontSize != null && fontSize != "" && fontSize != undefined && fontSize.length > 0) {

                    fontSize = fontSize.split(" ")[0];

                    fontSize = fontSize.substring(0, fontSize.length - 2);
                    $("#btnfontsizall").val(fontSize);
                    cssObjectsFormBody.subBtnFontSize = fontSize;
                }
            }

            if (buttonDesignDataThirdCss[5].indexOf("color") > -1) {
                var color = buttonDesignDataThirdCss[5].split(":")[1];

                if (color != null && color != "" && color != undefined && color.length > 0) {
                    color = color.split("!")[0];
                    $("#btnFontColall").val(color).css({ backgroundColor: color });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(color.replace("#", ""));
                    document.getElementById("btnFontColall").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.subBtnFontcol = color + "!important";
                }
            }

            if (buttonDesignDataThirdCss[6].indexOf("font-weight") > -1) {
                var fontWeight = buttonDesignDataThirdCss[6].split(":")[1];

                if (fontWeight != null && fontWeight != "" && fontWeight != undefined && fontWeight.length > 0) {
                    $("#btnfontStrokeall").val(fontWeight);
                    cssObjectsFormBody.subBtnFontStroke = fontWeight;
                }
            }

            if (buttonDesignDataThirdCss[7].indexOf("font-style") > -1) {
                var fontStyle = buttonDesignDataThirdCss[7].split(":")[1];

                if (fontStyle != null && fontStyle != "" && fontStyle != undefined && fontStyle.length > 0) {
                    $("#btnfontStrokeall").attr('data-btnfontstyle', fontStyle);
                    cssObjectsFormBody.subBtnFontStyle = fontStyle;
                }
            }

            if (buttonDesignDataThirdCss[8].indexOf("text-transform") > -1) {
                var texttransform = buttonDesignDataThirdCss[8].split(":")[1];

                if (texttransform != null && texttransform != "" && texttransform.length > 0) {
                    $("#btnfontCaps").val(texttransform);
                    cssObjectsFormBody.subBtnTxtTransform = texttransform;
                }
            }

            if (buttonDesignDataThirdCss[9].indexOf("border-radius") > -1) {
                var borderradius = buttonDesignDataThirdCss[9].split(":")[1];

                if (borderradius != null && borderradius != "" && borderradius != undefined && borderradius.length > 0) {
                    borderradius = borderradius.split(" ")[0];
                    borderradius = borderradius.substring(0, borderradius.length - 2);
                    $("#subBtnRadiAll").val(borderradius);
                    cssObjectsFormBody.subBtnBorderRadius = borderradius;
                }
            }

            if (buttonDesignDataThirdCss[10].indexOf("border-top-left-radius") > -1) {
                var bordertopleftradius = buttonDesignDataThirdCss[10].split(":")[1];

                if (bordertopleftradius != null && bordertopleftradius != "" && bordertopleftradius.length > 0) {
                    bordertopleftradius = bordertopleftradius.split(" ")[0];

                    bordertopleftradius = bordertopleftradius.substring(0, bordertopleftradius.length - 2);
                    $("#subBtnRadiTop").val(bordertopleftradius);
                    cssObjectsFormBody.subBtnBorderRadiusTopLeft = bordertopleftradius;

                    if ($("#btnRadiusall").attr('data-btnradius') != undefined && $("#btnRadiusall").attr('data-btnradius') == "subBtnRadiusAll") {
                        $("#btnRadiusall").click();
                    }
                }
            }

            if (buttonDesignDataThirdCss[11].indexOf("border-top-right-radius") > -1) {
                var bordertoprightradius = buttonDesignDataThirdCss[11].split(":")[1];

                if (bordertoprightradius != null && bordertoprightradius != "" && bordertoprightradius.length > 0) {
                    bordertoprightradius = bordertoprightradius.split(" ")[0];
                    bordertoprightradius = bordertoprightradius.substring(0, bordertoprightradius.length - 2);
                    $("#subBtnRadiRight").val(bordertoprightradius);
                    cssObjectsFormBody.subBtnBorderRadiusTopRight = bordertoprightradius;

                    if ($("#btnRadiusall").attr('data-btnradius') != undefined && $("#btnRadiusall").attr('data-btnradius') == "subBtnRadiusAll") {
                        $("#btnRadiusall").click();
                    }
                }
            }

            if (buttonDesignDataThirdCss[12].indexOf("border-bottom-left-radius") > -1) {
                var borderbottomleftradius = buttonDesignDataThirdCss[12].split(":")[1];

                if (borderbottomleftradius != null && borderbottomleftradius != "" && borderbottomleftradius.length > 0) {
                    borderbottomleftradius = borderbottomleftradius.split(" ")[0];
                    borderbottomleftradius = borderbottomleftradius.substring(0, borderbottomleftradius.length - 2);
                    $("#subBtnRadiBottom").val(borderbottomleftradius);
                    cssObjectsFormBody.subBtnBorderRadiusbottomLeft = borderbottomleftradius;

                    if ($("#btnRadiusall").attr('data-btnradius') != undefined && $("#btnRadiusall").attr('data-btnradius') == "subBtnRadiusAll") {
                        $("#btnRadiusall").click();
                    }
                }
            }

            if (buttonDesignDataThirdCss[13].indexOf("border-bottom-right-radius") > -1) {
                var borderbottomrightradius = buttonDesignDataThirdCss[13].split(":")[1];

                if (borderbottomrightradius != null && borderbottomrightradius != "" && borderbottomrightradius.length > 0) {
                    borderbottomrightradius = borderbottomrightradius.split(" ")[0];
                    borderbottomrightradius = borderbottomrightradius.substring(0, borderbottomrightradius.length - 2);
                    $("#subBtnRadiLeft").val(borderbottomrightradius);
                    cssObjectsFormBody.subBtnBorderRadiusbottomRight = borderbottomrightradius;

                    if ($("#btnRadiusall").attr('data-btnradius') != undefined && $("#btnRadiusall").attr('data-btnradius') == "subBtnRadiusAll") {
                        $("#btnRadiusall").click();
                    }
                }
            }

            if (buttonDesignDataThirdCss[14].indexOf("border-style") > -1) {
                var borderstyle = buttonDesignDataThirdCss[14].split(":")[1];

                if (borderstyle != null && borderstyle != "" && borderstyle.length > 0) {
                    $("#subBtnBorderStyleAll").val(borderstyle);
                    cssObjectsFormBody.subBtnBorderAll = borderstyle;
                }
            }

            if (buttonDesignDataThirdCss[15].indexOf("border-width") > -1) {
                var borderwidth = buttonDesignDataThirdCss[15].split(":")[1];

                if (borderwidth != null && borderwidth != "" && borderwidth.length > 0) {
                    borderwidth = borderwidth.split(" ")[0];
                    borderwidth = borderwidth.substring(0, borderwidth.length - 2);
                    $("#subBtnBorderSizeAll").val(borderwidth);
                    cssObjectsFormBody.subBtnBorderSizeAll = borderwidth;
                }
            }

            if (buttonDesignDataThirdCss[16].indexOf("border-color") > -1) {
                var bordercolor = buttonDesignDataThirdCss[16].split(":")[1];

                if (bordercolor != null && bordercolor != "" && bordercolor != undefined && bordercolor.length > 0) {
                    $("#subBtnBordercolAll").val(bordercolor).css({ backgroundColor: borderleftcolor });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(bordercolor.replace("#", ""));
                    document.getElementById("subBtnBordercolAll").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.subBtnBorderColAll = buttonDesignDataThirdCss[16].split(":")[1];
                }
            }

            if (buttonDesignDataThirdCss[17].indexOf("border-top-style") > -1) {
                var bordertopStyle = buttonDesignDataThirdCss[17].split(":")[1];

                if (bordertopStyle != null && bordertopStyle != "" && bordertopStyle.length > 0) {
                    $("#subBtnBrdIndiTop").val(bordertopStyle);
                    cssObjectsFormBody.subBtnBrdIndivTop = buttonDesignDataThirdCss[17].split(":")[1];

                    if ($("#mainBtnbrdstyle").attr('data-subbtnbrd') != undefined && $("#mainBtnbrdstyle").attr('data-subbtnbrd') == "subBtnBrdAll") {
                        $("#mainBtnbrdstyle").click();
                    }
                }
            }

            if (buttonDesignDataThirdCss[18].indexOf("border-top-width") > -1) {
                var bordertopwidth = buttonDesignDataThirdCss[18].split(":")[1];

                if (bordertopwidth != null && bordertopwidth != "" && bordertopwidth.length > 0) {
                    bordertopwidth = bordertopwidth.split(" ")[0];

                    bordertopwidth = bordertopwidth.substring(0, bordertopwidth.length - 2);
                    $("#subBtnBrdIndiTopSize").val(bordertopwidth);
                    cssObjectsFormBody.subBtnBrdIndivTopSize = bordertopwidth;

                    if ($("#mainBtnbrdstyle").attr('data-subbtnbrd') != undefined && $("#mainBtnbrdstyle").attr('data-subbtnbrd') == "subBtnBrdAll") {
                        $("#mainBtnbrdstyle").click();
                    }
                }
            }

            if (buttonDesignDataThirdCss[19].indexOf("border-top-color") > -1) {
                var bordertopcolor = buttonDesignDataThirdCss[19].split(":")[1];

                if (bordertopcolor != null && bordertopcolor != "" && bordertopcolor != undefined && bordertopcolor.length > 0) {
                    $("#subBtnBrdIndiTopCol").val(bordercolor).css({ backgroundColor: bordercolor });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(bordercolor.replace("#", ""));
                    document.getElementById("subBtnBrdIndiTopCol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.subBtnBrdIndivTopCol = bordertopcolor;

                    if ($("#mainBtnbrdstyle").attr('data-subbtnbrd') != undefined && $("#mainBtnbrdstyle").attr('data-subbtnbrd') == "subBtnBrdAll") {
                        $("#mainBtnbrdstyle").click();
                    }
                }
            }

            if (buttonDesignDataThirdCss[20].indexOf("border-right-style") > -1) {
                var borderrightStyle = buttonDesignDataThirdCss[20].split(":")[1];

                if (borderrightStyle != null && borderrightStyle != "" && borderrightStyle.length > 0) {
                    $("#subBtnBrdIndiRit").val(borderrightStyle);
                    cssObjectsFormBody.subBtnBrdIndivRit = borderrightStyle;

                    if ($("#mainBtnbrdstyle").attr('data-subbtnbrd') != undefined && $("#mainBtnbrdstyle").attr('data-subbtnbrd') == "subBtnBrdAll") {
                        $("#mainBtnbrdstyle").click();
                    }
                }
            }

            if (buttonDesignDataThirdCss[21].indexOf("border-right-width") > -1) {
                var borderrightwidth = buttonDesignDataThirdCss[21].split(":")[1];

                if (borderrightwidth != null && borderrightwidth != "" && borderrightwidth.length > 0) {

                    borderrightwidth = borderrightwidth.split(" ")[0];
                    borderrightwidth = borderrightwidth.substring(0, borderrightwidth.length - 2);
                    $("#subBtnBrdIndiRitSiz").val(borderrightwidth);
                    cssObjectsFormBody.subBtnBrdIndivRitSize = borderrightwidth;

                    if ($("#mainBtnbrdstyle").attr('data-subbtnbrd') != undefined && $("#mainBtnbrdstyle").attr('data-subbtnbrd') == "subBtnBrdAll") {
                        $("#mainBtnbrdstyle").click();
                    }
                }
            }

            if (buttonDesignDataThirdCss[22].indexOf("border-right-color") > -1) {
                var borderrightcolor = buttonDesignDataThirdCss[22].split(":")[1];

                if (borderrightcolor != null && borderrightcolor != "" && borderrightcolor != undefined && borderrightcolor.length > 0) {
                    $("#subBtnBrdIndiRitCol").val(borderrightcolor).css({ backgroundColor: borderrightcolor });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(borderrightcolor.replace("#", ""));
                    document.getElementById("subBtnBrdIndiRitCol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.subBtnBrdIndivRitCol = borderrightcolor;

                    if ($("#mainBtnbrdstyle").attr('data-subbtnbrd') != undefined && $("#mainBtnbrdstyle").attr('data-subbtnbrd') == "subBtnBrdAll") {
                        $("#mainBtnbrdstyle").click();
                    }
                }
            }

            if (buttonDesignDataThirdCss[23].indexOf("border-bottom-style") > -1) {
                var borderbottomStyle = buttonDesignDataThirdCss[23].split(":")[1];

                if (borderbottomStyle != null && borderbottomStyle != "" && borderbottomStyle.length > 0) {
                    $("#subBtnBrdIndiBttm").val(borderbottomStyle);
                    cssObjectsFormBody.subBtnBrdIndivBottom = borderbottomStyle;

                    if ($("#mainBtnbrdstyle").attr('data-subbtnbrd') != undefined && $("#mainBtnbrdstyle").attr('data-subbtnbrd') == "subBtnBrdAll") {
                        $("#mainBtnbrdstyle").click();
                    }
                }
            }

            if (buttonDesignDataThirdCss[24].indexOf("border-bottom-width") > -1) {
                var borderrightwidth = buttonDesignDataThirdCss[24].split(":")[1];

                if (borderrightwidth != null && borderrightwidth != "" && borderrightwidth.length > 0) {
                    borderrightwidth = borderrightwidth.split(" ")[0];
                    borderrightwidth = borderrightwidth.substring(0, borderrightwidth.length - 2);
                    $("#subBtnBrdIndiBttmSiz").val(borderrightwidth);
                    cssObjectsFormBody.subBtnBrdIndivBttmSiz = borderrightwidth;

                    if ($("#mainBtnbrdstyle").attr('data-subbtnbrd') != undefined && $("#mainBtnbrdstyle").attr('data-subbtnbrd') == "subBtnBrdAll") {
                        $("#mainBtnbrdstyle").click();
                    }
                }
            }

            if (buttonDesignDataThirdCss[25].indexOf("border-bottom-color") > -1) {
                var borderrightcolor = buttonDesignDataThirdCss[25].split(":")[1];

                if (borderrightcolor != null && borderrightcolor != "" && borderrightcolor != undefined && borderrightcolor.length > 0) {
                    $("#subBtnBrdIndiBttmCol").val(borderrightcolor).css({ backgroundColor: borderrightcolor });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(borderrightcolor.replace("#", ""));
                    document.getElementById("subBtnBrdIndiBttmCol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.subBtnBrdIndivBttmCol = buttonDesignDataThirdCss[25].split(":")[1];

                    if ($("#mainBtnbrdstyle").attr('data-subbtnbrd') != undefined && $("#mainBtnbrdstyle").attr('data-subbtnbrd') == "subBtnBrdAll") {
                        $("#mainBtnbrdstyle").click();
                    }
                }
            }

            if (buttonDesignDataThirdCss[26].indexOf("border-left-style") > -1) {
                var borderleftStyle = buttonDesignDataThirdCss[26].split(":")[1];

                if (borderleftStyle != null && borderleftStyle != "" && borderleftStyle.length > 0) {
                    $("#subBtnBrdIndiLft").val(borderleftStyle);
                    cssObjectsFormBody.subBtnBrdIndivLeft = borderleftStyle;

                    if ($("#mainBtnbrdstyle").attr('data-subbtnbrd') != undefined && $("#mainBtnbrdstyle").attr('data-subbtnbrd') == "subBtnBrdAll") {
                        $("#mainBtnbrdstyle").click();
                    }
                }
            }

            if (buttonDesignDataThirdCss[27].indexOf("border-left-width") > -1) {
                var borderleftwidth = buttonDesignDataThirdCss[27].split(":")[1];

                if (borderleftwidth != null && borderleftwidth != "" && borderleftwidth.length > 0) {
                    borderleftwidth = borderleftwidth.split(" ")[0];
                    borderleftwidth = borderleftwidth.substring(0, borderleftwidth.length - 2);
                    $("#subBtnBrdIndiLftSiz").val(borderleftwidth);
                    cssObjectsFormBody.subBtnBrdIndivLftSiz = borderleftwidth;

                    if ($("#mainBtnbrdstyle").attr('data-subbtnbrd') != undefined && $("#mainBtnbrdstyle").attr('data-subbtnbrd') == "subBtnBrdAll") {
                        $("#mainBtnbrdstyle").click();
                    }
                }
            }

            if (buttonDesignDataThirdCss[28].indexOf("border-left-color") > -1) {
                var borderleftcolor = buttonDesignDataThirdCss[28].split(":")[1];

                if (borderleftcolor != null && borderleftcolor != "" && borderleftcolor != undefined && borderleftcolor.length > 0) {
                    $("#subBtnBrdIndiLftCol").val(borderleftcolor).css({ backgroundColor: borderleftcolor });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(borderleftcolor.replace("#", ""));
                    document.getElementById("subBtnBrdIndiLftCol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.subBtnBrdIndivLftCol = borderleftcolor;

                    if ($("#mainBtnbrdstyle").attr('data-subbtnbrd') != undefined && $("#mainBtnbrdstyle").attr('data-subbtnbrd') == "subBtnBrdAll") {
                        $("#mainBtnbrdstyle").click();
                    }
                }
            }

            if (buttonDesignDataFourthCss[0].indexOf("background-color") > -1) {
                var borderrightcolor = buttonDesignDataFourthCss[0].split(":")[1];

                if (borderrightcolor != null && borderrightcolor != "" && borderrightcolor != undefined && borderrightcolor.length > 0) {
                    $("#btnHvrBgcol").val(borderrightcolor).css({ backgroundColor: borderrightcolor });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(borderrightcolor.replace("#", ""));
                    document.getElementById("btnHvrBgcol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.subBtnBgHvCol = borderrightcolor;
                }
            }

            if (buttonDesignDataFourthCss[1].indexOf("color") > -1) {
                var borderrightcolor = buttonDesignDataFourthCss[1].split(":")[1];

                if (borderrightcolor != null && borderrightcolor != "" && borderrightcolor != undefined && borderrightcolor.length > 0) {
                    borderrightcolor = borderrightcolor.split("!")[0];
                    $("#btnHvrTxtcol").val(borderrightcolor).css({ backgroundColor: borderrightcolor });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(borderrightcolor.replace("#", ""));
                    document.getElementById("btnHvrTxtcol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.subBtnTxtHvrCol = borderrightcolor + "!important";
                }
            }
        }
        else if (formDetails.IsButtonCustomCss == true) {
        }
    },
    BindCloseCss: function () {

        var closeDesignData = "";
        var closeDesignDataFirstCss = "";
        var closeDesignDataSecondCss = "";

        if (formDetails.IsCloseCustomCss == false && formDetails.CloseCss != null && formDetails.CloseCss.length > 0) {
            closeDesignData = formDetails.CloseCss.split("@$@");

            closeDesignDataFirstCss = closeDesignData[0];
            closeDesignDataSecondCss = closeDesignData[1];

            closeDesignDataFirstCss = $.trim(closeDesignDataFirstCss);
            closeDesignDataSecondCss = $.trim(closeDesignDataSecondCss);

            closeDesignDataFirstCss = closeDesignDataFirstCss.split(";");
            closeDesignDataSecondCss = closeDesignDataSecondCss.split(";");

            if (closeDesignDataFirstCss[0].indexOf("width") > -1) {
                var width = closeDesignDataFirstCss[0].split(":")[1];

                if (width != null && width != "" && width.length > 0) {
                    width = width.substring(0, width.length - 2);
                    $("#frmClsWid").val(width);
                    cssObjectsFormBody.frmClsWidth = width;
                }
            }

            if (closeDesignDataFirstCss[1].indexOf("height") > -1) {
                var height = closeDesignDataFirstCss[1].split(":")[1];

                if (height != null && height != "" && height.length > 0) {
                    height = height.substring(0, height.length - 2);
                    $("#frmClsHite").val(height);
                    cssObjectsFormBody.frmClsWidth = height;
                }
            }

            if (closeDesignDataFirstCss[2].indexOf("font-size") > -1) {
                var fontSize = closeDesignDataFirstCss[2].split(":")[1];

                if (fontSize != null && fontSize != "" && fontSize != undefined && fontSize.length > 0) {
                    fontSize = fontSize.substring(0, fontSize.length - 2);
                    $("#clsFontSiz").val(fontSize);
                    cssObjectsFormBody.frmClsFontSize = fontSize;
                }
            }

            if (closeDesignDataFirstCss[3].indexOf("color") > -1) {
                var color = closeDesignDataFirstCss[3].split(":")[1];

                if (color != null && color != "" && color != undefined && color.length > 0) {
                    $("#clsFontCol").val(color).css({ backgroundColor: color });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(color.replace("#", ""));
                    document.getElementById("clsFontCol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.frmClsFontCol = closeDesignDataFirstCss[3].split(":")[1];
                }
            }

            if (closeDesignDataFirstCss[4].indexOf("background-color") > -1) {
                var backgroundcolor = closeDesignDataFirstCss[4].split(":")[1];

                if (backgroundcolor != null && backgroundcolor != "" && backgroundcolor != undefined && backgroundcolor.length > 0) {
                    var colorCode = FormUtil.RGBToHex(backgroundcolor);
                    $("#clsBgCol").val("#" + colorCode.HexValue).css({ backgroundColor: "#" + colorCode.HexValue })
                    $("#clsbgRange").val(colorCode.Opacity * 10).change();
                    document.getElementById("clsBgCol").style.color = 0.213 * colorCode.R + 0.715 * colorCode.G + 0.072 * colorCode.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.frmClsBgCol = backgroundcolor;
                }
            }

            if (closeDesignDataFirstCss[5].indexOf("border-style") > -1) {
                var borderstyle = closeDesignDataFirstCss[5].split(":")[1];

                if (borderstyle != null && borderstyle != "" && borderstyle.length > 0) {
                    $("#clsBrdStyle").val(borderstyle);
                    cssObjectsFormBody.frmClsBrdStyle = borderstyle;
                }
            }

            if (closeDesignDataFirstCss[6].indexOf("border-width") > -1) {
                var borderwidth = closeDesignDataFirstCss[6].split(":")[1];

                if (borderwidth != null && borderwidth != "" && borderwidth.length > 0) {
                    borderwidth = borderwidth.substring(0, borderwidth.length - 2);
                    $("#clsBrdSiz").val(borderwidth);
                    cssObjectsFormBody.frmClsBrdSiz = borderwidth;
                }
            }

            if (closeDesignDataFirstCss[7].indexOf("border-color") > -1) {
                var bordercolor = closeDesignDataFirstCss[7].split(":")[1];

                if (bordercolor != null && bordercolor != "" && bordercolor != undefined && bordercolor.length > 0) {
                    $("#clsBrdCol").val(bordercolor).css({ backgroundColor: bordercolor });
                    var rgbColor = FormUtil.ConvertHexColorToRGB(bordercolor.replace("#", ""));
                    document.getElementById("clsBrdCol").style.color = 0.213 * rgbColor.R + 0.715 * rgbColor.G + 0.072 * rgbColor.B < 0.5 ? '#FFF' : '#000';
                    cssObjectsFormBody.frmClsBrdCol = bordercolor;
                }
            }

            if (closeDesignDataFirstCss[8].indexOf("top") > -1) {
                var top = closeDesignDataFirstCss[8].split(":")[1];

                if (top != null && top != "" && top.length > 0) {
                    top = top.substring(0, top.length - 2);
                    $("#clsBtnMarTop").val(top);
                    cssObjectsFormBody.frmClsSpacTop = top;
                }
            }

            if (closeDesignDataFirstCss[9].indexOf("right") > -1) {
                var right = closeDesignDataFirstCss[9].split(":")[1];

                if (height != null && right != "" && right.length > 0) {
                    right = right.substring(0, right.length - 2);
                    $("#clsBtnMarRight").val(right);
                    cssObjectsFormBody.frmClsSpacRight = right;
                }
            }

            if (closeDesignDataFirstCss[10].indexOf("bottom") > -1) {
                var bottom = closeDesignDataFirstCss[10].split(":")[1];

                if (bottom != null && bottom != "" && bottom.length > 0) {
                    bottom = bottom.substring(0, bottom.length - 2);
                    $("#clsBtnBttm").val(bottom);
                    cssObjectsFormBody.frmClsSpacBottom = bottom;
                }
            }

            if (closeDesignDataSecondCss[0].indexOf("left") > -1) {
                var left = closeDesignDataSecondCss[0].split(":")[1];

                if (left != null && left != "" && left.length > 0) {
                    left = left.substring(0, left.length - 2);
                    $("#clsBtnLeft").val(left);
                    cssObjectsFormBody.frmClsSpacLeft = left;
                }
            }

            if (formDetails.CloseDesignType == "square") {
                $(".clsWrap").removeClass('clsRound');
                $("#squareRadi").prop("checked", true);
            }
            else if (formDetails.CloseDesignType == "round") {
                $(".clsWrap").addClass('clsRound');
                $("#roundRadi").prop("checked", true);
            }

            if (formDetails.CloseAlignmentSetting == "clsleft") {
                $(".clsWrap").addClass('clsleftalign');
                $("#leftRadi").prop("checked", true);
            }
            else if (formDetails.CloseAlignmentSetting == "clsright") {
                $(".clsWrap").removeClass('clsleftalign');
                $("#rightRadi").prop("checked", true);
            }

            $(".clsWrap").addClass("showflex");
        }
        else if (formDetails.IsCloseCustomCss == true) {
        }
    },
    BindFormEffects: function () {

        $("#ui_txtTimeDelay").val(formDetails.TimeDelay);

        if (formDetails.AppearOnLoadOnExitOnScroll == 0) {
            $("#ui_radAppearOnPageLoad").prop("checked", true);
            $("#ui_radAppearOnScroll").addClass('hideDiv');
        }
        else if (formDetails.AppearOnLoadOnExitOnScroll == 1) {
            $("#ui_radAppearOnPageExit").prop("checked", true);
            $("#ui_radAppearOnScroll").addClass('hideDiv');
        }
        else {
            $("#ui_radAppearOnScroll").prop("checked", true);
            $("#ui_radAppearOnScroll").removeClass("hideDiv");
            $("#dvScrollDownValue").removeClass('hideDiv');
            $("#ui_txtShowOnScrollDownHeight").val(formDetails.ShowOnScrollDownHeight)
        }

        if (formDetails.PositionAlign == 1) {
            $("#frmaligndesign").val("frmtop-left").change();
        }
        else if (formDetails.PositionAlign == 2) {
            $("#frmaligndesign").val("frmtop-center").change();
        }
        else if (formDetails.PositionAlign == 3) {
            $("#frmaligndesign").val("frmtop-right").change();
        }
        else if (formDetails.PositionAlign == 4) {
            $("#frmaligndesign").val("frmbottom-screencenter").change();
        }
        else if (formDetails.PositionAlign == 5) {
            $("#frmaligndesign").val("frmbottom-left").change();
        }
        else if (formDetails.PositionAlign == 6) {
            $("#frmaligndesign").val("frmbottom-center").change();
        }
        else if (formDetails.PositionAlign == 7) {
            $("#frmaligndesign").val("frmbottom-right").change();
        }

        //$("#frmaligndesign").val(formDetails.PositionAlign); //need to check with yakkub for values

        $("#ui_txtBottomPadding").val(formDetails.TopOrBottomPadding);

        $("#ui_txtPadding").val(formDetails.RightOrLeftPadding);

        if (formDetails.ThankYouMessage != null && formDetails.ThankYouMessage.length > 0) {
            $("#ui_txtThankYouMessage").val(formDetails.ThankYouMessage);
        }
    },
    BindDefaultCss: function () {
        cssObjectsFormBody = {

            //main css
            width: "300", height: "300", bodyBgCol: "rgba(255,255,255,1)", bdyBrdStyleAll: "", bdyBrdSizeAll: null, bdyBrdColAll: "", bdyBrdStyleTop: "", bdyBrdWidthTop: null,
            bdyBrdColTop: "", bdyBrdStyleRight: "", bdyBrdWidthRight: null, bdyBrdColRight: "", bdyBrdStyleBottm: "", bdyBrdWidthBottm: null, bdyBrdColBottm: "",
            bdyBrdStyleLft: "", bdyBrdWidthLft: null, bdyBrdColLft: "", bdyPaddAll: null, bdyPaddTop: null, bdyPaddRit: null, bdyPaddBottm: null, bdyPaddLft: null,
            bdyBrdradiAll: null, bdyBrdraditopleft: null, bdyBrdraditopright: null, bdyBrdradibttmleft: null, bdyBrdradibttmright: null,

            //label css
            lblTextAlignLeft: "", lblTextAlignCenter: "", lblTextAlignRight: "", lblTextPaddAll: null, lblTextPaddTop: null, lblTextPaddRight: null, lblTextPaddBottom: null,
            lblTextPaddLeft: null, lblTextFontFamily: "", lblTextFontSize: null, lblTextFontColor: null, lblTextFontWeight: null, lblTextFontStyle: "", lblTextFontCaps: "",

            //text box css
            textBoxFontFamily: "", textBoxFontSize: null, textBoxFontColor: null, textBoxFontWeight: "", textBoxFontStyle: "", textBoxFontIndent: null, textBoxHeight: null,
            textBoxBgColor: null, textBoxAllBrd: "", textBoxAllBrdsize: null, textBoxAllBrdcol: null, textBoxBrdTop: "", textBoxBrdTopSize: null,
            textBoxBrdTopCol: null, textBoxBrdRight: "", textBoxBrdRightSize: null, textBoxBrdRightCol: null, textBoxBrdBttm: "",
            textBoxBrdBttmSize: null, textBoxBrdBttmCol: null, textBoxBrdleft: "", textBoxBrdLeftSize: null, textBoxBrdLeftCol: null,
            textBoxBrdRadiusAll: null, textBoxBrdRadiusTopLeft: null, textBoxBrdRadiusTopRight: null, textBoxBrdRadiusBttmLeft: null, textBoxBrdRadiusBttmRight: null,

            //btn css
            btnAlignLeft: "", btnAlignCenter: "", btnAlignRight: "", btnWidth: null,

            subBtnHeight: null, subBtnBgCol: null, subBtnBgHvCol: null, subBtnTxtHvrCol: null, subBtnFontFamily: "",

            subBtnFontSize: null, subBtnFontcol: null, subBtnFontStroke: null, subBtnFontStyle: "", subBtnTxtTransform: "", subBtnBorderRadius: null,
            subBtnBorderRadiusTopLeft: null, subBtnBorderRadiusTopRight: null, subBtnBorderRadiusbottomLeft: null, subBtnBorderRadiusbottomRight: null,
            subBtnBorderAll: "", subBtnBorderSizeAll: null, subBtnBorderColAll: null, subBtnBrdIndivTop: "", subBtnBrdIndivTopSize: null, subBtnBrdIndivTopCol: null,
            subBtnBrdIndivRit: "", subBtnBrdIndivRitSize: null, subBtnBrdIndivRitCol: null, subBtnBrdIndivBottom: "", subBtnBrdIndivBttmSiz: null,
            subBtnBrdIndivBttmCol: null, subBtnBrdIndivLeft: "", subBtnBrdIndivLftSiz: null, subBtnBrdIndivLftCol: null, subBtnMarginAll: null, subBtnMarginTop: null,
            subBtnMarginRight: null, subBtnMarginBttm: null, subBtnMarginLeft: null,

            //Close css
            frmClsWidth: 20, frmClsFontSize: "", frmClsFontCol: "", frmClsBgCol: "", frmClsBrdStyle: "",
            frmClsBrdSiz: "", frmClsBrdCol: "", frmClsSpacTop: "", frmClsSpacRight: "", frmClsSpacBottom: "", frmClsSpacLeft: "", frmTitAlignType: "",

            //Title Css
            frmTitFontStyle: null, frmTitTextCapital: "", frmTitFontFamily: "'Open Sans', sans-serif;", frmtTitFontSiz: "16", frmTitFontCol: "#222", frmTitFontStroke: null, frmtitFontMargin: null,
            frmtitFontMarginTop: null, frmtitFontMarginRight: null, frmtitFontMarginBttm: null, frmtitFontMarginLeft: null, frmTitFontPaddAll: null, frmTitFontPaddTop: null,
            frmTitFontPaddRight: "10", frmTitFontPaddBttm: null, frmTitFontPaddLeft: "10", frmTitBgcolor: null, frmTitRadiusAll: null, frmTitRadiusTopLeft: null,
            frmTitRadiusTopRight: null, frmTitRadiusBttmLeft: null, frmTitRadiusBttmRight: null, frmTitBrdStylAll: null, frmTitBrdWidAll: null, frmTitBrdColAll: null,
            frmTitBrdStylTop: null, frmTitBrdWidTop: null, frmTitBrdColTop: null, frmTitBrdStylRight: null, frmTitBrdWidRight: null, frmTitBrdColRight: null, frmTitBrdStyleBttm: null,
            frmTitBrdWidBttm: null, frmTitBrdColBttm: null, frmTitBrdStylLeft: null, frmTitBrdWidLeft: null, frmTitBrdColLeft: null, frmDesTxtAlign: null, frmDesFont: null,

            //Desc Css
            frmDesFontSize: "12", frmDesFontCol: "#3F3F3F", frmDesFontStroke: "'Open Sans', sans-serif;", frmDesFontStyle: "", frmDesFontCaps: "", frmDesFontMarg: null, frmDesFontMargTop: null,
            frmDesFontMargRighted: null, frmDesFontMargBttm: null, frmDesFontMargLeft: null, frmDesTxtBgCol: "", frmDesFontPaddAll: null, frmDesFontPaddTop: null,
            frmDesFontPaddRight: "10", frmDesFontPaddBttm: null, frmDesFontPaddLeft: "10", frmDesRadiusAll: null, frmDesRadiusTopLeft: null, frmDesRadiusTopRight: null,
            frmDesRadiusBttmLeft: null, frmDesRadiusBttmRight: null, frmDesBrdStylAll: "", frmDesBrdWidAll: null, frmDesBrdColAll: "", frmDesBrdStylRight: "",
            frmDesBrdWidRight: null, frmDesBrdColRight: "", frmDesBrdStylTop: "", frmDesBrdWidTop: null, frmDesBrdColTop: "", frmDesBrdStyleBttm: "", frmDesBrdWidBttm: null,
            frmDesBrdColBttm: "", frmDesBrdStylLeft: "", frmDesBrdWidLeft: null, frmDesBrdColLeft: ""
        };
    },

    ConvertHexColorToRGB: function (hex) {
        var r = parseInt(hex.substring(0, 2), 16);
        var g = parseInt(hex.substring(2, 4), 16);
        var b = parseInt(hex.substring(4, 6), 16);
        return { R: r, G: g, B: b };
    },
    RGBToHex: function (rgbaValue) {
        rgbaValue = rgbaValue.replace("rgba", "").replace("(", "").replace(")", "").split(",")
        return { R: rgbaValue[0], G: rgbaValue[1], B: rgbaValue[2], HexValue: FormUtil.ToHex(rgbaValue[0]) + FormUtil.ToHex(rgbaValue[1]) + FormUtil.ToHex(rgbaValue[2]), Opacity: parseFloat(rgbaValue[3]) * 10 };
    },
    ToHex: function (n) {
        n = parseInt(n, 10);
        if (isNaN(n)) return "00";
        n = Math.max(0, Math.min(n, 255));
        return "0123456789ABCDEF".charAt((n - n % 16) / 16)
            + "0123456789ABCDEF".charAt(n % 16);
    },

    MailGetValues: function () {

        if ($("#ui_chkReportMail").is(":checked")) {

            if ($("#ui_radReportMailUnCondition").is(":checked")) {
                responseMailSettingFieldIndex = -1;
                responseSettings.ReportToFormsMailFieldId = 0;
                responseSettings.ReportToDetailsByMail = CleanText($("#ui_txtReportThroughEmail").val());
            }
            else {

                var ResponseCheckedFieldName = "";

                if ($("input:radio[name='ReportToMailDependencyFieldOption']:checked").attr("field") != undefined) {
                    ResponseCheckedFieldName = $("input:radio[name='ReportToMailDependencyFieldOption']:checked").attr("field");
                }

                var fieldIndexValue = -1;

                allFormFields.map(function (item, i) {
                    if (item.Name === ResponseCheckedFieldName) fieldIndexValue = i
                });

                if (fieldIndexValue > -1) {
                    responseMailSettingFieldIndex = fieldIndexValue;

                    if ($("input:radio[name='ReportToMailDependencyFieldOption']:checked").val() != undefined)
                        responseSettings.ReportToFormsMailFieldId = $("input:radio[name='ReportToMailDependencyFieldOption']:checked").val();

                    var field = allFormFields[responseMailSettingFieldIndex];

                    if (field != undefined && field.SubFields.length > 0) {
                        responseSettings.ReportToDetailsByMail = "";
                        var locaSubFields = field.SubFields.split(",");
                        for (var m = 0; m < locaSubFields.length; m++) {
                            if ($("#ui_txtReportToMail_" + m).length > 0)
                                responseSettings.ReportToDetailsByMail += "@$" + CleanText($("#ui_txtReportToMail_" + m).val());
                        }
                        responseSettings.ReportToDetailsByMail = responseSettings.ReportToDetailsByMail.substring(2);
                    }
                }
            }
        }
        else {
            responseSettings.ReportToDetailsByMail = "";
            responseSettings.ReportToFormsMailFieldId = 0;
            responseMailSettingFieldIndex = -1;
        }
    },
    SMSGetValues: function () {

        if ($("#ui_chkReportSMS").is(":checked")) {

            if ($("#ui_radReportSMSUnCondition").is(":checked")) {
                responseSMSSettingFieldIndex = -1;
                responseSettings.ReportToFormsSMSFieldId = 0;
                responseSettings.ReportToDetailsBySMS = CleanText($("#ui_txtReportThroughSMSAlert").val());
            }
            else {

                var ResponseCheckedFieldName = "";

                if ($("input:radio[name='ReportToSMSDependencyFieldOption']:checked").attr("field") != undefined) {
                    ResponseCheckedFieldName = $("input:radio[name='ReportToSMSDependencyFieldOption']:checked").attr("field");
                }

                var fieldIndexValue = -1;

                allFormFields.map(function (item, i) {
                    if (item.Name === ResponseCheckedFieldName) fieldIndexValue = i
                });

                if (fieldIndexValue > -1) {
                    responseSMSSettingFieldIndex = fieldIndexValue;

                    if ($("input:radio[name='ReportToSMSDependencyFieldOption']:checked").val() != undefined)
                        responseSettings.ReportToFormsSMSFieldId = $("input:radio[name='ReportToSMSDependencyFieldOption']:checked").val();

                    var field = allFormFields[responseSMSSettingFieldIndex];

                    if (field != undefined && field.SubFields.length > 0) {
                        responseSettings.ReportToDetailsBySMS = "";
                        var locaSubFields = field.SubFields.split(",");
                        for (var m = 0; m < locaSubFields.length; m++) {
                            if ($("#ui_txtReportToSMS_" + m).length > 0)
                                responseSettings.ReportToDetailsBySMS += "@$" + CleanText($("#ui_txtReportToSMS_" + m).val());
                        }
                        responseSettings.ReportToDetailsBySMS = responseSettings.ReportToDetailsBySMS.substring(2);
                    }
                }
            }
        }
        else {
            responseSettings.ReportToDetailsBySMS = "";
            responseSettings.ReportToFormsSMSFieldId = 0;
            responseSMSSettingFieldIndex = -1;
        }
    },
    WhatsAppGetValues: function () {

        if ($("#ui_chkReportWhatsApp").is(":checked")) {

            if ($("#ui_radReportWhatsAppUnCondition").is(":checked")) {
                responseWhatsAppSettingFieldIndex = -1;
                responseSettings.ReportToFormsWhatsAppFieldId = 0;
                responseSettings.ReportToDetailsByWhatsApp = CleanText($("#ui_txtReportThroughWhatsAppAlert").val());
            }
            else {

                var ResponseCheckedFieldName = "";

                if ($("input:radio[name='ReportToWhatsAppDependencyFieldOption']:checked").attr("field") != undefined) {
                    ResponseCheckedFieldName = $("input:radio[name='ReportToWhatsAppDependencyFieldOption']:checked").attr("field");
                }

                var fieldIndexValue = -1;

                allFormFields.map(function (item, i) {
                    if (item.Name === ResponseCheckedFieldName) fieldIndexValue = i
                });

                if (fieldIndexValue > -1) {
                    responseWhatsAppSettingFieldIndex = fieldIndexValue;

                    if ($("input:radio[name='ReportToWhatsAppDependencyFieldOption']:checked").val() != undefined)
                        responseSettings.ReportToFormsWhatsAppFieldId = $("input:radio[name='ReportToWhatsAppDependencyFieldOption']:checked").val();

                    var field = allFormFields[responseWhatsAppSettingFieldIndex];

                    if (field != undefined && field.SubFields.length > 0) {
                        responseSettings.ReportToDetailsByWhatsApp = "";
                        var locaSubFields = field.SubFields.split(",");
                        for (var m = 0; m < locaSubFields.length; m++) {
                            if ($("#ui_txtReportToWhatsApp_" + m).length > 0)
                                responseSettings.ReportToDetailsByWhatsApp += "@$" + CleanText($("#ui_txtReportToWhatsApp_" + m).val());
                        }
                        responseSettings.ReportToDetailsByWhatsApp = responseSettings.ReportToDetailsByWhatsApp.substring(2);
                    }
                }
            }
        }
        else {
            responseSettings.ReportToDetailsByWhatsApp = "";
            responseSettings.ReportToFormsWhatsAppFieldId = 0;
            responseWhatsAppSettingFieldIndex = -1;
        }
    },
    MailOutSetting: function () {

        mailSettingList.length = 0;

        if ($("#ui_chkSendMailOut").is(":checked")) {

            if ($("#ui_chkUnConditionalMailOut").is(":checked")) {
                responseSettings.MailOutDependencyFieldId = 0;
                responseMailOutSettingIndex = -1;

                mailSettings.MailTemplateId = $("#ui_ddlMailUnConditionTemplate").val();
                mailSettings.Subject = CleanText($("#ui_txtMailUnConditionSubject").val());
                mailSettings.FromName = CleanText($("#ui_txtUnConditionalMailFromName").val());
                mailSettings.FromEmailId = $("#ui_ddlFromEmailSender").val();
                mailSettings.ReplyTo = $("#ui_ddlFromEmailSender").val();

                mailSettingList.push(mailSettings);
            }
            else {
                var ResponseCheckedFieldName = "";

                if ($("input:radio[name='MailOutDependencyFieldOption']:checked").attr("field") != undefined) {
                    ResponseCheckedFieldName = $("input:radio[name='MailOutDependencyFieldOption']:checked").attr("field");
                }

                var fieldIndexValue = -1;

                allFormFields.map(function (item, i) {
                    if (item.Name === ResponseCheckedFieldName) fieldIndexValue = i
                });

                if (fieldIndexValue > -1) {
                    responseMailOutSettingIndex = fieldIndexValue

                    if ($("input:radio[name='MailOutDependencyFieldOption']:checked").val() != undefined)
                        responseSettings.MailOutDependencyFieldId = $("input:radio[name='MailOutDependencyFieldOption']:checked").val();

                    var field = allFormFields[responseMailOutSettingIndex];

                    if (field != undefined && field.SubFields.length > 0) {
                        var locaSubFields = field.SubFields.split(",");
                        for (var m = 0; m < locaSubFields.length; m++) {

                            var mail = Object();

                            if ($("#ui_ddlMailOut_" + m).length > 0)
                                mail.MailTemplateId = $("#ui_ddlMailOut_" + m).val();

                            if ($("#ui_txtMailConditionSubject_" + m).length > 0)
                                mail.Subject = CleanText($("#ui_txtMailConditionSubject_" + m).val());

                            if ($("#ui_txtConditionalMailFromName_" + m).length > 0)
                                mail.FromName = CleanText($("#ui_txtConditionalMailFromName_" + m).val());

                            if ($("#ui_ddlMailFormEmailIdMailOut_" + m).length > 0) {
                                mail.FromEmailId = $("#ui_ddlMailFormEmailIdMailOut_" + m).val();
                                mail.ReportMailId = $("#ui_ddlMailFormEmailIdMailOut_" + m).val();
                            }

                            //if ($("#ui_txtConditionalMailFromId_" + m).length > 0) {
                            //    mail.FromEmailId = CleanText($("#ui_txtConditionalMailFromId_" + m).val());
                            //    mail.ReportMailId = CleanText($("#ui_txtConditionalMailFromId_").val());
                            //}
                            mailSettingList.push(mail);
                        }
                    }
                }
            }
        }
        else {
            responseSettings.MailIdList = "";
            responseSettings.MailOutDependencyFieldId = 0;
            responseMailOutSettingIndex = -1;
        }
        return mailSettings;
    },
    SmsOutSetting: function () {

        smsSettingList.length = 0;

        if ($("#ui_chkSendSmsOut").is(":checked")) {

            if ($("#ui_chkUnConditionalSmsOut").is(":checked")) {
                responseSettings.SmsOutDependencyFieldId = 0;
                responseSmsOutSettingIndex = -1;

                smsSettings.SmsTemplateId = $("#ui_ddlSmsTemplate").val();
                smsSettingList.push(smsSettings);
            }
            else {

                var ResponseCheckedFieldName = "";

                if ($("input:radio[name='SmsOutDependencyFieldOption']:checked").attr("field") != undefined) {
                    ResponseCheckedFieldName = $("input:radio[name='SmsOutDependencyFieldOption']:checked").attr("field");
                }

                var fieldIndexValue = -1;

                allFormFields.map(function (item, i) {
                    if (item.Name === ResponseCheckedFieldName) fieldIndexValue = i
                });

                if (fieldIndexValue > -1) {
                    responseSmsOutSettingIndex = fieldIndexValue;

                    if ($("input:radio[name='SmsOutDependencyFieldOption']:checked").val() != undefined)
                        responseSettings.SmsOutDependencyFieldId = $("input:radio[name='SmsOutDependencyFieldOption']:checked").val();

                    var field = allFormFields[responseSmsOutSettingIndex];

                    if (field != undefined && field.SubFields.length > 0) {
                        var locaSubFields = field.SubFields.split(",");
                        for (var m = 0; m < locaSubFields.length; m++) {

                            var sms = Object();

                            if ($("#ui_ddlSmsOut_" + m).length > 0)
                                sms.SmsTemplateId = $("#ui_ddlSmsOut_" + m).val();

                            smsSettingList.push(sms);
                        }
                    }
                }
            }
        }
        else {
            responseSettings.SmsOutDependencyFieldId = 0;
            responseSmsOutSettingIndex = -1;
        }
        return smsSettings;
    },
    WhatsAppOutSetting: function () {

        WhatsAppSettingList.length = 0;

        if ($("#ui_chkSendWhatsAppOut").is(":checked")) {

            if ($("#ui_chkUnConditionalWhatsAppOut").is(":checked")) {
                responseSettings.WhatsAppOutDependencyFieldId = 0;
                responseWhatsAppOutSettingIndex = -1;

                WhatsAppSettings.WhatsAppTemplateId = $("#ui_ddlWhatsAppTemplate").val();
                WhatsAppSettingList.push(WhatsAppSettings);
            }
            else {

                var ResponseCheckedFieldName = "";

                if ($("input:radio[name='WhatsAppOutDependencyFieldOption']:checked").attr("field") != undefined) {
                    ResponseCheckedFieldName = $("input:radio[name='WhatsAppOutDependencyFieldOption']:checked").attr("field");
                }

                var fieldIndexValue = -1;

                allFormFields.map(function (item, i) {
                    if (item.Name === ResponseCheckedFieldName) fieldIndexValue = i
                });

                if (fieldIndexValue > -1) {
                    responseWhatsAppOutSettingIndex = fieldIndexValue;

                    if ($("input:radio[name='WhatsAppOutDependencyFieldOption']:checked").val() != undefined)
                        responseSettings.WhatsAppOutDependencyFieldId = $("input:radio[name='WhatsAppOutDependencyFieldOption']:checked").val();

                    var field = allFormFields[responseWhatsAppOutSettingIndex];

                    if (field != undefined && field.SubFields.length > 0) {
                        var locaSubFields = field.SubFields.split(",");
                        for (var m = 0; m < locaSubFields.length; m++) {

                            var WhatsApp = Object();

                            if ($("#ui_ddlWhatsAppOut_" + m).length > 0)
                                WhatsApp.WhatsAppTemplateId = $("#ui_ddlWhatsAppOut_" + m).val();

                            WhatsAppSettingList.push(WhatsApp);
                        }
                    }
                }
            }
        }
        else {
            responseSettings.WhatsAppOutDependencyFieldId = 0;
            responseWhatsAppOutSettingIndex = -1;
        }
        return WhatsAppSettings;
    },
    AssignmentGetValues: function () {

        if ($("#ui_chkSalesPerson").is(":checked")) {

            if ($("#ui_chkIsOverrideAssignment").is(":checked"))
                responseSettings.IsOverrideAssignment = 1;
            else if ($("#ui_chkIsOverrideAssignmentBasedOnRule").is(":checked"))
                responseSettings.IsOverrideAssignment = 2;
            else
                responseSettings.IsOverrideAssignment = 0;

            if (!$("#ui_chkIsOverrideAssignmentBasedOnRule").is(":checked")) {
                if ($("#ui_radUnConditionalAssignToSales").is(":checked")) {
                    responseSalesAssigmentSettingIndex = -1;
                    responseSettings.ReportToAssignLeadToUserIdFieldId = 0;
                    responseSettings.AccesLeadToUserId = $("#ui_ddlUserList").val();
                }
                else {

                    var ResponseCheckedFieldName = "";

                    if ($("input:radio[name='AssignToSalesDependencyFieldOption']:checked").attr("field") != undefined) {
                        ResponseCheckedFieldName = $("input:radio[name='AssignToSalesDependencyFieldOption']:checked").attr("field");
                    }

                    var fieldIndexValue = -1;

                    allFormFields.map(function (item, i) {
                        if (item.Name === ResponseCheckedFieldName) fieldIndexValue = i
                    });

                    if (fieldIndexValue > -1) {
                        responseSalesAssigmentSettingIndex = fieldIndexValue

                        if ($("input:radio[name='AssignToSalesDependencyFieldOption']:checked").val() != undefined)
                            responseSettings.ReportToAssignLeadToUserIdFieldId = $("input:radio[name='AssignToSalesDependencyFieldOption']:checked").val();

                        var field = allFormFields[responseSalesAssigmentSettingIndex];

                        if (field != undefined && field.SubFields.length > 0) {
                            responseSettings.AccesLeadToUserId = "";
                            var locaSubFields = field.SubFields.split(",");
                            for (var m = 0; m < locaSubFields.length; m++) {
                                if ($("#ui_txtAssignToSales_" + m).length > 0)
                                    responseSettings.AccesLeadToUserId += "@$" + CleanText($("#ui_txtAssignToSales_" + m).val());
                            }
                            responseSettings.AccesLeadToUserId = responseSettings.AccesLeadToUserId.substring(2);
                        }
                    }
                }
            }
            else {
                responseSettings.AccesLeadToUserId = "";
                responseSettings.ReportToAssignLeadToUserIdFieldId = 0;
                responseSalesAssigmentSettingIndex = -1;
            }
        }
        else {
            responseSettings.AccesLeadToUserId = "";
            responseSettings.ReportToAssignLeadToUserIdFieldId = 0;
            responseSettings.IsOverrideAssignment = 0;
            responseSalesAssigmentSettingIndex = -1;
        }
    },
    AutoAssignToGroup: function () {
        if ($("#ui_chkGroups").is(":checked")) {
            var filterConditions = { DependencyFieldId: "", UnconditionalGroupId: 0, FieldName: "", Subfields: "" };
            var FinalArrayValues = new Array();
            AutoAssignToGroupIndexValues.length = 0;
            AutoAssignToGroupIdIndexValues.length = 0;

            if ($("#ui_chkUnConditionalGroups").is(":checked")) {
                filterConditions.DependencyFieldId = "0";
                filterConditions.UnconditionalGroupId = $("#ui_ddlGroupList").val();
                filterConditions.FieldName = filterConditions.Subfields = "";
                FinalArrayValues.push(filterConditions);

                responseSettings.GroupId = JSON.stringify(FinalArrayValues);
            }
            else {
                if ($("input:checkbox[name='AutoAssignGroupDependencyFieldOption']:checked").length > 0) {
                    $("input:checkbox[name='AutoAssignGroupDependencyFieldOption']:checked").map(function () {
                        var FieldValues = { Id: "", FieldIndex: 0, FieldName: "" };
                        FieldValues.Id = $(this).val();
                        FieldValues.FieldIndex = $(this).attr("fieldat");
                        FieldValues.FieldName = $(this).attr("field");
                        //AutoAssignToGroupIndexValues.push($(this).attr("fieldat"));
                        AutoAssignToGroupIdIndexValues.push(FieldValues);
                    });

                    if (AutoAssignToGroupIdIndexValues != null && AutoAssignToGroupIdIndexValues.length > 0) {
                        for (var i = 0; i < AutoAssignToGroupIdIndexValues.length; i++) {
                            var filterConditions = { DependencyFieldId: "", UnconditionalGroupId: 0, FieldName: "", Subfields: "" };
                            var subFieldsList = subfields = "";

                            var fieldIndexValue = -1;
                            var FieldName = AutoAssignToGroupIdIndexValues[i].FieldName;

                            allFormFields.map(function (item, i) {
                                if (item.Name === FieldName) fieldIndexValue = i
                            });

                            if (fieldIndexValue > -1) {
                                AutoAssignToGroupIndexValues.push(fieldIndexValue);

                                var field = allFormFields[fieldIndexValue];

                                if (field != undefined && field.SubFields.length > 0) {
                                    subFieldsList = field.SubFields.split(",");

                                    for (var m = 0; m < subFieldsList.length; m++) {
                                        if ($("[id='ui_ddlAutoAssignGroup_" + m + "_" + AutoAssignToGroupIdIndexValues[i].FieldName.replace(/\s/g, "") + "']").length > 0) {
                                            subfields += '{"' + subFieldsList[m] + '" : "' + $("[id='ui_ddlAutoAssignGroup_" + m + "_" + AutoAssignToGroupIdIndexValues[i].FieldName.replace(/\s/g, "") + "']").val() + '"},';
                                        }
                                    }

                                    subfields = subfields.substring(0, subfields.length - 1);
                                    var SubFieldsAppendUrl = '[' + subfields + ']';

                                    filterConditions.DependencyFieldId = "ReplaceDependencyId_" + i + "";
                                    filterConditions.UnconditionalGroupId = "0";
                                    filterConditions.FieldName = AutoAssignToGroupIdIndexValues[i].FieldName;
                                    filterConditions.Subfields = JSON.parse(SubFieldsAppendUrl);

                                    FinalArrayValues.push(filterConditions);
                                }
                            }
                        }
                    }
                    responseSettings.GroupId = JSON.stringify(FinalArrayValues);
                    window.console.log(responseSettings.GroupId);
                }
                else {
                    responseSettings.GroupId = "";
                    AutoAssignToGroupIndexValues.length = 0;
                }
            }
        }
        else {
            responseSettings.GroupId = "";
            AutoAssignToGroupIndexValues.length = 0;
        }
    },
    Isoverridesource: function () {
        if ($("#ui_chkoverridesource").is(":checked")) {
            var filterConditions = { DependencyFieldId: "", UnconditionalOverSourceId: 0, FieldName: "", Subfields: "" };
            var FinalArrayValues = new Array();
            IsOverSourceIndexValues.length = 0;
            OverSourceIdIndexValues.length = 0;

            if ($("#ui_chkUnConditionaloverridesource").is(":checked")) {
                filterConditions.DependencyFieldId = "0";
                filterConditions.UnconditionalOverSourceId = $("#ui_ddlIsoverridesourceList").val();
                filterConditions.FieldName = filterConditions.Subfields = "";
                FinalArrayValues.push(filterConditions);

                responseSettings.IsOverRideSource = JSON.stringify(FinalArrayValues);
            }
            else {
                if ($("input:checkbox[name='IsoverridesourceDependencyFieldOption']:checked").length > 0) {
                    $("input:checkbox[name='IsoverridesourceDependencyFieldOption']:checked").map(function () {
                        var FieldValues = { Id: "", FieldIndex: 0, FieldName: "" };
                        FieldValues.Id = $(this).val();
                        FieldValues.FieldIndex = $(this).attr("fieldat");
                        FieldValues.FieldName = $(this).attr("field");
                        //IsOverSourceIndexValues.push($(this).attr("fieldat"));
                        OverSourceIdIndexValues.push(FieldValues);
                    });

                    if (OverSourceIdIndexValues != null && OverSourceIdIndexValues.length > 0) {
                        for (var i = 0; i < OverSourceIdIndexValues.length; i++) {
                            var filterConditions = { DependencyFieldId: "", UnconditionalOverSourceId: 0, FieldName: "", Subfields: "" };
                            var subFieldsList = subfields = "";

                            var fieldIndexValue = -1;
                            var FieldName = OverSourceIdIndexValues[i].FieldName;

                            allFormFields.map(function (item, i) {
                                if (item.Name === FieldName) fieldIndexValue = i
                            });

                            if (fieldIndexValue > -1) {
                                IsOverSourceIndexValues.push(fieldIndexValue);

                                var field = allFormFields[fieldIndexValue];

                                if (field != undefined && field.SubFields.length > 0) {
                                    subFieldsList = field.SubFields.split(",");

                                    for (var m = 0; m < subFieldsList.length; m++) {
                                        if ($("[id='ui_ddlIsoverridesource_" + m + "_" + OverSourceIdIndexValues[i].FieldName.replace(/\s/g, "") + "']").length > 0) {
                                            subfields += '{"' + subFieldsList[m].replace(/\s/g, "") + '" : "' + $("[id='ui_ddlIsoverridesource_" + m + "_" + OverSourceIdIndexValues[i].FieldName.replace(/\s/g, "") + "']").val() + '"},';
                                        }
                                    }

                                    subfields = subfields.substring(0, subfields.length - 1);
                                    var SubFieldsAppendUrl = '[' + subfields + ']';

                                    filterConditions.DependencyFieldId = "ReplaceDependencyId_" + i + "";                                    
                                    filterConditions.UnconditionalOverSourceId = "0";
                                    filterConditions.FieldName = OverSourceIdIndexValues[i].FieldName;
                                    filterConditions.Subfields = JSON.parse(SubFieldsAppendUrl);

                                    FinalArrayValues.push(filterConditions);
                                }
                            }
                        }
                    }
                    responseSettings.IsOverRideSource = JSON.stringify(FinalArrayValues);
                    window.console.log(responseSettings.GroupId);
                }
                else {
                    responseSettings.IsOverRideSource = "";
                    IsOverSourceIndexValues.length = 0;
                }
            }

            if ($("#lmsStaySource").is(":checked")) {
                responseSettings.SourceType = 0;
            }
            else if ($("#lmsOverrideSource").is(":checked")) {
                responseSettings.SourceType = 1;
            }
            else if ($("#lmsNewSource").is(":checked")) {
                responseSettings.SourceType = 2;
            }
        }
        else {
            responseSettings.IsOverRideSource = "";
            IsOverSourceIndexValues.length = 0;
        }
    },
    RedirectUrlValues: function () {

        if ($("#ui_chkRedirectUrl").is(":checked")) {

            if ($("#ui_chkIsRedirectUrlNewWindow").is(":checked"))
                responseSettings.IsRedirectUrlNewWindow = 1;
            else
                responseSettings.IsRedirectUrlNewWindow = 0;

            if ($("#ui_chkUnConditionalRedirectUrl").is(":checked")) {
                responseSettings.RedirectUrl = '{"DependencyFieldId":"0","UnconditionalStaticUrl":"' + $("#ui_txtRedirectUrl").val() + '","Subfields":""}';
                responseRedirectUrlSettingIndex = -1;
            }
            else {

                var ResponseCheckedFieldName = "";

                if ($("input:radio[name='RedirectUrlDependencyFieldOption']:checked").attr("field") != undefined) {
                    ResponseCheckedFieldName = $("input:radio[name='RedirectUrlDependencyFieldOption']:checked").attr("field");
                }

                var fieldIndexValue = -1;

                allFormFields.map(function (item, i) {
                    if (item.Name === ResponseCheckedFieldName) fieldIndexValue = i
                });

                if (fieldIndexValue > -1) {
                    responseRedirectUrlSettingIndex = fieldIndexValue;

                    if ($("input:radio[name='RedirectUrlDependencyFieldOption']:checked").val() != undefined)
                        var DependencyId = $("input:radio[name='RedirectUrlDependencyFieldOption']:checked").val();

                    var field = allFormFields[responseRedirectUrlSettingIndex];

                    if (field != undefined && field.SubFields.length > 0) {
                        var locaSubFields = field.SubFields.split(",");
                        var subfields = ""
                        for (var m = 0; m < locaSubFields.length; m++) {
                            if ($("#ui_txtRedirectUrl_" + m).length > 0)
                                subfields += '{"' + locaSubFields[m] + '" : "' + CleanText($("#ui_txtRedirectUrl_" + m).val()) + '"},';
                        }

                        subfields = subfields.substring(0, subfields.length - 1);
                        var SubFieldsAppendUrl = '[' + subfields + ']';
                        responseSettings.RedirectUrl = '{"DependencyFieldId":"ReplaceDependencyId","UnconditionalStaticUrl":"","Subfields":' + SubFieldsAppendUrl + '}';
                    }
                }
            }
        }
        else {
            responseSettings.RedirectUrl = "";
            responseSettings.IsRedirectUrlNewWindow = 0;
            responseRedirectUrlSettingIndex = -1;
        }
    },
    AutoAssignToGroupOptin: function () {
        if ($("#ui_optinGroups").is(":checked")) {

            var AutoAssigntoGroupByOptin = new Array();

            if ($("#ui_chkMailSpecificOptin").is(":checked")) {

                if ($("#ui_chkMailSpecificOptinYes").is(":checked")) {

                    var filterConditions = { GroupId: 0, FieldType: "", OptinType: "" };

                    if ($("#ui_ddlGroupList_MailSpecificOptinYes").get(0).selectedIndex > 0) {
                        filterConditions.GroupId = $("#ui_ddlGroupList_MailSpecificOptinYes").val();
                        filterConditions.FieldType = "MailSpecific";
                        filterConditions.OptinType = "Optin";

                        AutoAssigntoGroupByOptin.push(filterConditions);

                    }
                }
                if ($("#ui_chkMailSpecificOptinNo").is(":checked")) {
                    var filterConditions = { GroupId: 0, FieldType: "", OptinType: "" };

                    if ($("#ui_ddlGroupList_MailSpecificOptinNo").get(0).selectedIndex > 0) {
                        filterConditions.GroupId = $("#ui_ddlGroupList_MailSpecificOptinNo").val();
                        filterConditions.FieldType = "MailSpecific";
                        filterConditions.OptinType = "WithoutOptin";

                        AutoAssigntoGroupByOptin.push(filterConditions);
                    }
                }
            }
            if ($("#ui_chkSmsSpecificOptin").is(":checked")) {

                if ($("#ui_chkSmsSpecificOptinYes").is(":checked")) {
                    var filterConditions = { GroupId: 0, FieldType: "", OptinType: "" };

                    if ($("#ui_ddlGroupList_SmsSpecificOptinYes").get(0).selectedIndex > 0) {
                        filterConditions.GroupId = $("#ui_ddlGroupList_SmsSpecificOptinYes").val();
                        filterConditions.FieldType = "SmsSpecific";
                        filterConditions.OptinType = "Optin";

                        AutoAssigntoGroupByOptin.push(filterConditions);
                    }
                }
                if ($("#ui_chkSmsSpecificOptinNo").is(":checked")) {
                    var filterConditions = { GroupId: 0, FieldType: "", OptinType: "" };

                    if ($("#ui_ddlGroupList_SmsSpecificOptinNo").get(0).selectedIndex > 0) {
                        filterConditions.GroupId = $("#ui_ddlGroupList_SmsSpecificOptinNo").val();
                        filterConditions.FieldType = "SmsSpecific";
                        filterConditions.OptinType = "WithoutOptin";

                        AutoAssigntoGroupByOptin.push(filterConditions);
                    }
                }
            }

            if ($("#ui_chkMailSpecificOptin").is(":checked") && $("#ui_chkSmsSpecificOptin").is(":checked")) {
                var filterConditions = { GroupId: 0, FieldType: "", OptinType: "" };

                if ($("#ui_chkMailSpecificOptinYes").is(":checked") && $("#ui_chkSmsSpecificOptinYes").is(":checked")) {

                    if ($("#ui_ddlGroupList_MailSpecificOptinYes").get(0).selectedIndex > 0 && $("#ui_ddlGroupList_SmsSpecificOptinYes").get(0).selectedIndex > 0) {
                        if ($("#ui_ddlGroupList_MailSpecificOptinYes").val() == $("#ui_ddlGroupList_SmsSpecificOptinYes").val()) {
                            filterConditions.GroupId = $("#ui_ddlGroupList_MailSpecificOptinYes").val();
                            filterConditions.FieldType = "MailSmsSpecific";
                            filterConditions.OptinType = "Optin";

                            AutoAssigntoGroupByOptin.push(filterConditions);
                        }
                    }
                }
                if ($("#ui_chkMailSpecificOptinNo").is(":checked") && $("#ui_chkSmsSpecificOptinNo").is(":checked")) {
                    if ($("#ui_ddlGroupList_MailSpecificOptinNo").get(0).selectedIndex > 0 && ($("#ui_ddlGroupList_SmsSpecificOptinNo").get(0).selectedIndex > 0)) {
                        if ($("#ui_ddlGroupList_MailSpecificOptinNo").val() == $("#ui_ddlGroupList_SmsSpecificOptinNo").val()) {

                            filterConditions.GroupId = $("#ui_ddlGroupList_MailSpecificOptinNo").val();
                            filterConditions.FieldType = "MailSmsSpecific";
                            filterConditions.OptinType = "WithoutOptin";

                            AutoAssigntoGroupByOptin.push(filterConditions);
                        }
                    }
                }
            }

            if ($("#ui_chkWhatsAppOptin").is(":checked")) {

                if ($("#ui_chkWhatsAppOptinYes").is(":checked")) {
                    var filterConditions = { GroupId: 0, FieldType: "", OptinType: "" };

                    if ($("#ui_ddlGroupList_WhatsAppOptinYes").get(0).selectedIndex > 0) {
                        filterConditions.GroupId = $("#ui_ddlGroupList_WhatsAppOptinYes").val();
                        filterConditions.FieldType = "WhatsAppOptin";
                        filterConditions.OptinType = "Optin";

                        AutoAssigntoGroupByOptin.push(filterConditions);
                    }
                }
                if ($("#ui_chkWhatsAppOptinNo").is(":checked")) {
                    var filterConditions = { GroupId: 0, FieldType: "", OptinType: "" };

                    if ($("#ui_ddlGroupList_WhatsAppOptinNo").get(0).selectedIndex > 0) {
                        filterConditions.GroupId = $("#ui_ddlGroupList_WhatsAppOptinNo").val();
                        filterConditions.FieldType = "WhatsAppOptin";
                        filterConditions.OptinType = "WithoutOptin";

                        AutoAssigntoGroupByOptin.push(filterConditions);
                    }
                }
            }

            if ($("#ui_chkWhatsAppOptin").is(":checked") && $("#ui_chkSmsOverallOptin").is(":checked")) {
                var filterConditions = { GroupId: 0, FieldType: "", OptinType: "" };

                if ($("#ui_chkWhatsAppOptinYes").is(":checked") && $("#ui_chkSmsOverallOptinYes").is(":checked")) {

                    if ($("#ui_ddlGroupList_WhatsAppOptinYes").get(0).selectedIndex > 0 && $("#ui_ddlGroupList_SmsOverallOptinYes").get(0).selectedIndex > 0) {
                        if ($("#ui_ddlGroupList_WhatsAppOptinYes").val() == $("#ui_ddlGroupList_SmsOverallOptinYes").val()) {
                            filterConditions.GroupId = $("#ui_ddlGroupList_WhatsAppOptinYes").val();
                            filterConditions.FieldType = "MailSmsOverall";
                            filterConditions.OptinType = "Optin";

                            AutoAssigntoGroupByOptin.push(filterConditions);
                        }
                    }
                }
                if ($("#ui_chkWhatsAppOptinNo").is(":checked") && $("#ui_chkSmsOverallOptinNo").is(":checked")) {
                    if ($("#ui_ddlGroupList_WhatsAppOptinNo").get(0).selectedIndex > 0 && ($("#ui_ddlGroupList_SmsOverallOptinNo").get(0).selectedIndex > 0)) {
                        if ($("#ui_ddlGroupList_WhatsAppOptinNo").val() == $("#ui_ddlGroupList_SmsOverallOptinNo").val()) {
                            filterConditions.GroupId = $("#ui_ddlGroupList_WhatsAppOptinNo").val();
                            filterConditions.FieldType = "MailSmsOverall";
                            filterConditions.OptinType = "WithoutOptin";

                            AutoAssigntoGroupByOptin.push(filterConditions);
                        }
                    }
                }
            }

            responseSettings.GroupIdBasedOnOptin = JSON.stringify(AutoAssigntoGroupByOptin);
        }
    },
    WebHookValues: function () {
        if ($("#btnsavewebhook").val() == 'update') {

            webhookdetails = { WebHookId: Webhookloopdetals[webhookrowid].WebHookId, RequestURL: "", MethodType: 0, ContentType: 0, FieldMappingDetails: "", Headers: "", BasicAuthentication: 0, RawBody: "" };

        }
        else {
            webhookdetails = { WebHookId: 0, RequestURL: "", MethodType: 0, ContentType: 0, FieldMappingDetails: "", Headers: "", BasicAuthentication: 0, RawBody: "" };
        } if ($("#ui_chkWebHooks").is(":checked")) {
            //Data values
            var datamappingdetails = new Array();

            var fieldtrList = $('[id^=trsearch]');

            for (var i = 0; i < fieldtrList.length; i++) {
                var filterConditions = { Key: "", Value: "", IsPlumb5OrCustomField: "" };

                var rowId = fieldtrList[i].id.substring(8);

                if ($("#trsearch" + rowId).attr("datatype") == "Plumb5Field") {
                    if ($("#drpFields_" + rowId + " option:selected").val() != undefined) {
                        filterConditions.Key = CleanText($("#txtFieldAnswer_" + rowId).val());
                        filterConditions.Value = $("#drpFields_" + rowId + " option:selected").val();
                        filterConditions.IsPlumb5OrCustomField = "Plumb5Field";

                        datamappingdetails.push(filterConditions);
                    }
                }
                else if ($("#trsearch" + rowId).attr("datatype") == "StaticField") {
                    if ($("#txtFieldKey_" + rowId).val() != null && $("#txtFieldKey_" + rowId).val() != "" && $("#txtFieldKey_" + rowId).val().length > 0) {
                        filterConditions.Key = CleanText($("#txtFieldKey_" + rowId).val());
                        filterConditions.Value = CleanText($("#txtFieldAnswer_" + rowId).val());
                        filterConditions.IsPlumb5OrCustomField = "StaticField";

                        datamappingdetails.push(filterConditions);
                    }
                }
            }

            //Headers values
            var headerdetails = new Array();

            var headertrList = $('[id^=trheader]');

            for (var i = 0; i < headertrList.length; i++) {
                var headerfilterConditions = { Key: "", Value: "" };

                var rowId = headertrList[i].id.substring(8);

                if ($("#txtheaderKey_" + rowId + "").val() != "") {
                    headerfilterConditions.Key = CleanText($("#txtheaderKey_" + rowId).val());
                    headerfilterConditions.Value = CleanText($("#txtheaderValue_" + rowId).val());

                    headerdetails.push(headerfilterConditions);
                }
            }

            //Autontication
            var basicauthenticationdetails = { AuthenticationKey: "", AuthenticationValue: "" };

            if ($('#ui_txt_BasicAuthenticationKey').val().length > 0 && $('#ui_txt_BasicAuthenticationValue').val().length > 0) {
                basicauthenticationdetails.AuthenticationKey = $('#ui_txt_BasicAuthenticationKey').val();
                basicauthenticationdetails.AuthenticationValue = $('#ui_txt_BasicAuthenticationValue').val();
            }

            webhookdetails.RequestURL = $.trim($("#ui_txtRequestUrl").val());
            webhookdetails.MethodType = $.trim($("#ui_ddl_MethodType").val());
            webhookdetails.ContentType = $.trim($("#ui_ddl_ContentType").val());

            let contenttype = $('#ui_ddl_ContentType option:selected').text().toLowerCase();
            if (contenttype == 'form') {
                webhookdetails.FieldMappingDetails = JSON.stringify(datamappingdetails);
            }
            else if (contenttype == 'raw body') {
                webhookdetails.RawBody = $.trim($("#ui_txtRequestBody").val());
            }
            webhookdetails.Headers = JSON.stringify(headerdetails);
            webhookdetails.BasicAuthentication = JSON.stringify(basicauthenticationdetails);
        }
        else {
            webhookdetails = null;
            responseSettings.WebHookId = 0;
        }
        if ($("#btnsavewebhook").val() == 'update') {
            Webhookloopdetals.splice(webhookrowid, 1, webhookdetails);
            $("#webhookeditoption").addClass("hideDiv");
            $("#webhookeditoption input").val(" ");
            $("#methodwebhook, #ui_ddl_ContentType").val(" ");

        }
        else {
            Webhookloopdetals.push(webhookdetails);

        }

    },
    GetURLParametersResponseValues: function () {
        if ($("#ui_chkURLParamResponses").is(":checked")) {
            //Data values
            var URLParametersResponsedata = new Array();

            var URLParametersResponsefieldtrList = $('[id^=trUrlParamresponses]');

            for (var i = 0; i < URLParametersResponsefieldtrList.length; i++) {
                var URLParametersResponseValue = { Key: "", Value: "" };

                var rowId = URLParametersResponsefieldtrList[i].id.substring(19);
                if ($("#drpUrlFields_" + rowId + " option:selected").val() != undefined) {
                    URLParametersResponseValue.Key = $("#drpUrlFields_" + rowId + " option:selected").val();
                    URLParametersResponseValue.Value = CleanText($("#txtUrlFieldAnswer_" + rowId).val());
                    URLParametersResponsedata.push(URLParametersResponseValue);
                }
            }
            responseSettings.URLParameterResponses = JSON.stringify(URLParametersResponsedata);
        }
        else {
            responseSettings.URLParameterResponses = null;
        }
    },
    htmlAppend: function (BannerContent) {
        $(".frmdummyconts").remove();
        $("#frmFields").html("");
        $(".clsWrap").addClass("showflex");
        var div = FormUtil.getDiv("");
        div.innerHTML = FormUtil.ShowNameAndEmailIdInForms(BannerContent);
        $("#frmFields").append(div);
        $("body").onclick = function () { BannerClicked(); };
    },
    IframeAppend: function (BannerContent) {
        $(".frmdummyconts").remove();
        $("#frmFields").html("");
        $(".clsWrap").addClass("showflex");
        var div = FormUtil.getDiv("");
        div.innerHTML = BannerContent;
        $("#frmFields").append(div);
    },
    bannerImageAppend: function (RedirectUrl, BannerContent, Height) {
        var anchorTag = document.createElement("a");
        anchorTag.style.textDecoration = "none";
        if (RedirectUrl != null && RedirectUrl.length > 0)
            anchorTag.href = RedirectUrl, anchorTag.target = "_blank";

        anchorTag.onclick = function () { BannerClicked(); };

        var myImage = document.createElement("img");
        myImage.style.width = "100%"; myImage.style.height = (Height - 25) + "px";
        myImage.setAttribute("src", BannerContent);
        anchorTag.appendChild(myImage);

        $(".frmdummyconts").remove();
        $("#frmFields").html("");
        $(".clsWrap").addClass("showflex");
        var div = FormUtil.getDiv("");
        div.append(anchorTag);
        $("#frmFields").append(div);
    },
    videoAppend: function (BannerContent, Height) {
        if (BannerContent.indexOf("embed") > -1) {
            $(".frmdummyconts").remove();
            $("#frmFields").html("");
            $(".clsWrap").addClass("showflex");
            var div = FormUtil.getDiv("");
            div.innerHTML = BannerContent;
            $("#frmFields").append(div);
        }
        else if (BannerContent.indexOf("iframe") < 0) {

            BannerContent = "//" + BannerContent.replace("watch?v=", "embed/").replace("http://", "").replace("https://", "");

            if (BannerContent.indexOf("embed") > -1) {
                var contentFrame = document.createElement("iframe");
                contentFrame.id = "iframeContent"; contentFrame.scrolling = "no"; contentFrame.frameborder = "0"; contentFrame.marginwidth = "0"; contentFrame.marginheight = "0"; contentFrame.allowtransparency = true;
                contentFrame.style.border = "none";
                contentFrame.setAttribute("src", BannerContent);
                contentFrame.style.height = Height - 26 + "px";
                contentFrame.style.width = "100%";
                contentFrame.style.height = "100%";

                $(".frmdummyconts").remove();
                $("#frmFields").html("");
                $(".clsWrap").addClass("showflex");
                $("#frmFields").append(contentFrame);
            }
        }
        else if (BannerContent.indexOf("iframe") > -1) {
            $(".frmdummyconts").remove();
            $("#frmFields").html("");
            $(".clsWrap").addClass("showflex");
            var div = FormUtil.getDiv("");
            div.innerHTML = BannerContent;
            $("#frmFields").append(div);
        }
    },
    ShowNameAndEmailIdInForms: function (content) {
        if (content && content != null) {
            content = content.replace("<!--Name-->", "");
            content = content.replace("<!--EmailId-->", "");
        }
        return content;
    },
    getDiv: function (divId) {
        var divTag = document.createElement("div");
        if (divId.length > 0) {
            if (!document.getElementById(divId)) {
                divTag.id = divId;
                return divTag;
            }
        }
        else {
            return divTag;
        }
        return null;
    },
    ValidateWebHookHeaderFieldsAndValues: function (Id) {

        if ($("#txtheaderKey_" + Id).val() == "" && $("#txtheaderValue_" + Id).val() == "") {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.HeaderFieldKeyValue_ErrorMessage);
            return false;
        }

        if ($("#txtheaderKey_" + Id).val() == "" && $("#txtheaderValue_" + Id).val() != "") {
            $("#txtheaderKey_" + Id).focus();
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.HeaderFieldKey_ErrorMessage);
            return false;
        }
        if ($("#txtheaderKey_" + Id).val() != "" && $("#txtheaderValue_" + Id).val() == "") {
            $("#txtheaderValue_" + Id).focus();
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.HeaderFieldValue_ErrorMessage);
            return false;
        }
        return true;
    },
    ValidateWebHookDataFieldsandvalues: function (Id) {

        if ($("#trsearch" + Id).attr("datatype") == "Plumb5Field") {
            if ($("#drpFields_" + Id).get(0).selectedIndex == 0 && $("#txtFieldAnswer_" + Id).val() == "") {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.DataFieldValue_ErrorMessage);
                return false;
            }
            if ($("#drpFields_" + Id).get(0).selectedIndex == 0 && $("#txtFieldAnswer_" + Id).val() != "") {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.MappingField_ErrorMessage);
                return false;
            }
            if ($("#drpFields_" + Id).get(0).selectedIndex != 0 && $("#txtFieldAnswer_" + Id).val() == "") {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.DataField_ErrorMessage);
                return false;
            }
        }
        else if ($("#trsearch" + Id).attr("datatype") == "StaticField") {
            if ($("#txtFieldKey_" + Id).val() == "" && $("#txtFieldAnswer_" + Id).val() == "") {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.StaticDataFieldKey_ErrorMessage);
                return false;
            }

            if ($("#txtFieldKey_" + Id).val() == "" && $("#txtFieldAnswer_" + Id).val() != "") {
                $("#txtFieldKey_" + Id).focus();
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.StaticDataFieldKey_ErrorMessage);
                return false;
            }

            if ($("#txtFieldKey_" + Id).val() != "" && $("#txtFieldAnswer_" + Id).val() == "") {
                $("#txtFieldAnswer_" + Id).focus();
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.StaticDataFieldValue_ErrorMessage);
                return false;
            }

            //for (var i = 0; i < ContactPropertyList.length; i++) {
            //    if ($.trim($("#txtFieldKey_" + Id).val()).toLowerCase().replace(/ /g, '') == ContactPropertyList[i].P5ColumnName.toLowerCase()) {
            //        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.FieldAlreadyExists);
            //        $("#txtFieldKey_" + Id).focus();
            //        return false;
            //    }
            //}
        }
        return true;
    },
    ValidateUrlParametersResponseDataFieldsandvalues: function (Id) {

        if ($("#drpUrlFields_" + Id).get(0).selectedIndex == 0 && $("#txtUrlFieldAnswer_" + Id).val() == "") {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.UrlParameterDataFieldValue_ErrorMessage);
            return false;
        }
        if ($("#drpUrlFields_" + Id).get(0).selectedIndex == 0 && $("#txtUrlFieldAnswer_" + Id).val() != "") {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.UrlParameterDataField_ErrorMessage);
            return false;
        }
        if ($("#drpUrlFields_" + Id).get(0).selectedIndex != 0 && $("#txtUrlFieldAnswer_" + Id).val() == "") {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.UrlParameterDataFieldValue_ErrorMessage);
            return false;
        }
        return true;
    },
    ValidationOfWebHookSetting: function () {
        //Web Hooks Validation
        if ($("#ui_chkWebHooks").is(":checked")) {
            if ($('#ui_txtRequestUrl').val().length == 0) {
                $('#ui_txtRequestUrl').focus();
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.WebHookEmptyRequestUrl);
                return false;
            }
            if (!regExpUrl.test($.trim($("#ui_txtRequestUrl").val()))) {
                $("#ui_txtRequestUrl").focus();
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.RequestUrl_error);
                return false;
            }
            if ($('#ui_ddl_MethodType').get(0).selectedIndex == 0) {
                $('#ui_ddl_MethodType').focus();
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.WebHookSelectMethodType);
                return false;
            }

            if ($('#ui_ddl_ContentType').get(0).selectedIndex == 0) {
                $('#ui_ddl_ContentType').focus();
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.WebHookSelectContentType);
                return false;
            }

            if ($('#ui_txt_BasicAuthenticationKey').val().length > 0 && $('#ui_txt_BasicAuthenticationValue').val().length == 0) {
                $('#ui_txt_BasicAuthenticationKey').focus();
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.WebHookBasicAuthenticationValueError);
                return false;
            }

            if ($('#ui_txt_BasicAuthenticationKey').val().length == 0 && $('#ui_txt_BasicAuthenticationValue').val().length > 0) {
                $('#ui_txt_BasicAuthenticationValue').focus();
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.WebHookBasicAuthenticationKeyError);
                return false;
            }

            //This is for checking the data field validation key and value are same
            var datafieldtrList = $('[id^=trsearch]');
            var drpoption = new Array();
            var drpanswer = new Array();

            let ContentType = $('#ui_ddl_ContentType option:selected').text().toLowerCase();
            if (ContentType == 'form') {
                if (datafieldtrList.length <= 0) {
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.DataFieldEmptyError);
                    return false;
                }
            }
            else if (ContentType == 'raw body') {
                if ($.trim($("#ui_txtRequestBody").val()).length == 0) {
                    $('#ui_txtRequestBody').focus();
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.RequestBodyEmptyError);
                    return false;
                }
            }

            for (var j = 0; j < datafieldtrList.length; j++) {
                var rowId = datafieldtrList[j].id.substring(8);

                if (FormUtil.ValidateWebHookDataFieldsandvalues(parseInt(rowId))) {

                    if ($("#trsearch" + rowId).attr("datatype") == "Plumb5Field") {
                        if ($.inArray($("#drpFields_" + rowId + " option:selected").val(), drpoption) > -1 && $.inArray($("#txtFieldAnswer_" + rowId).val(), drpanswer) > -1) {
                            $("#drpFields_" + rowId).focus();
                            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.duplicatedatafields_ErrorMessage);
                            return false;
                        }
                        else {
                            drpoption.push($("#drpFields_" + rowId + " option:selected").val());
                            drpanswer.push($("#txtFieldAnswer_" + rowId).val());
                        }
                    }
                    else if ($("#trsearch" + rowId).attr("datatype") == "StaticField") {
                        if ($.inArray($("#txtFieldKey_" + rowId).val(), drpoption) > -1 && $.inArray($("#txtFieldAnswer_" + rowId).val(), drpanswer) > -1) {
                            $("#txtFieldKey_" + rowId).focus();
                            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.duplicatedatafields_ErrorMessage);
                            return false;
                        }
                        else {
                            drpoption.push($("#txtFieldKey_" + rowId).val());
                            drpanswer.push($("#txtFieldAnswer_" + rowId).val());
                        }
                    }
                }
                else {
                    return false;
                }
            }

            //This is for checking the header validation
            var headertrList = $('[id^=trheader]');
            var headerdrpoption = new Array();
            var headeranswer = new Array();

            for (var j = 0; j < headertrList.length; j++) {
                var rowId = headertrList[j].id.substring(8);

                if (FormUtil.ValidateWebHookHeaderFieldsAndValues(rowId)) {
                    if ($.inArray($("#txtheaderKey_" + rowId).val(), headerdrpoption) > -1 && $.inArray($("#txtheaderValue_" + rowId).val(), headeranswer) > -1) {
                        $("#txtheaderKey_" + rowId).focus();
                        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.DuplicateHeaderKeyfields_ErrorMessage);
                        return false;
                    }
                    else {
                        headerdrpoption.push($("#txtheaderKey_" + rowId).val());
                        headeranswer.push($("#txtheaderValue_" + rowId).val());
                    }
                }
                else {
                    return false;
                }
            }

            //This is for checking the data fields key having duplicates
            var trList = $('[id^=trsearch]');
            var drpselectedtext = new Array();

            for (var j = 0; j < trList.length; j++) {
                var rowId = trList[j].id.replace(/[^0-9]/gi, '');

                if ($("#trsearch" + rowId).attr("datatype") == "Plumb5Field") {
                    if ($.inArray($("#drpFields_" + rowId + " option:selected").text(), drpselectedtext) > -1) {
                        $("#drpFields_" + rowId).focus();
                        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.duplicatedatafields_ErrorMessage);
                        return false;
                    }
                    else {
                        drpselectedtext.push($("#drpFields_" + rowId + " option:selected").text());
                    }
                }
                else if ($("#trsearch" + rowId).attr("datatype") == "StaticField") {
                    if ($.inArray($.trim($("#txtFieldKey_" + rowId).val()), drpselectedtext) > -1) {
                        $("#txtFieldKey_" + rowId).focus();
                        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.duplicatedatafields_ErrorMessage);
                        return false;
                    }
                    else {
                        drpselectedtext.push($.trim($("#txtFieldKey_" + rowId).val()));
                    }
                }
            }

            //This is for checking the header field key having duplicates
            var headertrList = $('[id^=trheader]');
            var headerKeytext = new Array();

            for (var j = 0; j < headertrList.length; j++) {
                var rowId = headertrList[j].id.substring(8);

                if ($.inArray($("#txtheaderKey_" + rowId).val(), headerKeytext) > -1) {
                    $("#txtheaderKey_" + rowId).focus();
                    ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.DuplicateHeaderKeyfields_ErrorMessage);
                    return false;
                }
                else {
                    headerKeytext.push($("#txtheaderKey_" + rowId).val());
                }
            }
        }
        return true;
    }
};


//Initialisation Part
$(document).ready(function () {
    $("#dv_VisitorsNotClickedSpecificBtn").addClass('hideDiv');
    ShowPageLoading();
    FormUtil.LoadingSymbol();
    FormUtil.GetCustomFields();
    formId = $.urlParam("FormId");
    formType = $.urlParam("FormType");
    GetContactFielddragdrop('');
    DragDroReportUtil.GetReport();
    DragDroReportUtil.BindUrlEventMappingDetails();

    if (formId > 0) {
        if (formType == 1) {
            $('#htmlIframetab').attr('style', 'display: none !important');
        }
        else if (formType == 2 || formType == 3 || formType == 4 || formType == 5) {
            $('#formHead,#formDescrip,#upLodImg,#textBox,#inputEmail,#inputPhone,#customTextBox,#otpTextBox,#selectDropdown,#inputTextarea,#radioButton,#checkBox,#dateFormat,#submitBtn').attr('style', 'display: none !important');
            $('#lblLabelDesignTab,#lblTextBoxDesignTab,#lblBtnDesignTab').attr('style', 'display: none !important');
        }
    }

    FormUtil.BindFormActiveEmailId();

    FormUtil.IntializeAutoComplete("ui_txtClickButton", "../CommonDetailsForForms/GetEvetList", 2, "ui_txtClickButton_values", "clkBtn");
    FormUtil.IntializeAutoComplete("ui_txtNotClickButton", "../CommonDetailsForForms/GetEvetList", 2, "ui_txtNotClickButton_values", "clkNotBtn");
    FormUtil.IntializeAutoComplete("ui_txtPriceRangeProducts", "../CommonDetailsForForms/GetEvetList", 2, "ui_txtPriceRangeProducts_values", "ClickProduct");
    FormUtil.IntializeAutoComplete("ui_txtCustomerNotPurchasedProducts", "../CommonDetailsForForms/GetProductList", 2, "ui_txtCustomerNotPurchasedProducts_values", "NotPurchase");
    FormUtil.IntializeAutoComplete("ui_txtCustomerPurchasedProducts", "../CommonDetailsForForms/GetProductList", 2, "ui_txtCustomerPurchasedProducts_values", "Purchase");
    FormUtil.IntializeAutoComplete("ui_txtDropedFromCartProducts", "../CommonDetailsForForms/GetProductList", 2, "ui_txtDropedFromCartProducts_values", "DropFromCart");
    FormUtil.IntializeAutoComplete("ui_txtViewedNotAddedToCartProducts", "../CommonDetailsForForms/GetProductList", 2, "ui_txtViewedNotAddedToCartProducts_values", "NotAddedToCart");
    FormUtil.IntializeAutoComplete("ui_txtAddedToCartProducts", "../CommonDetailsForForms/GetProductList", 2, "ui_txtAddedToCartProducts_values", "AddedToCart");
    FormUtil.IntializeAutoComplete("ui_txtAddedToCartProductsCategories", "../CommonDetailsForForms/GetProductCategoryList", 2, "ui_txtAddedToCartProductsCategories_values", "CategoriesAddedToCart");
    FormUtil.IntializeAutoComplete("ui_txtNotAddedToCartProductsCategories", "../CommonDetailsForForms/GetProductCategoryList", 2, "ui_txtNotAddedToCartProductsCategories_values", "CategoriesnotAddedToCart");
    FormUtil.IntializeAutoComplete("ui_txtAddedToCartProductsSubCategories", "../CommonDetailsForForms/GetProductSubCategoryList", 2, "ui_txtAddedToCartProductsSubCategories_values", "SubCategoriesAddedToCart");
    FormUtil.IntializeAutoComplete("ui_txtNotAddedToCartProductsSubCategories", "../CommonDetailsForForms/GetProductSubCategoryList", 2, "ui_txtNotAddedToCartProductsSubCategories_values", "SubCategoriesnotAddedToCart");
    FormUtil.IntializeAutoComplete("ui_txtCity", "../CommonDetailsForForms/GetCityName", 2, "ui_txtCity_values", "cityName");
});

//DropDowm Select Values
$(".addtemprulemail,.addtemprulesms,.addtemprulecountry,.addtemprulecity,.specificbtn,.notspecificbtn,.dropdownselcom").select2({
    minimumResultsForSearch: '',
    dropdownAutoWidth: false
});

$("#ui_ddlSmsRespondentTemplate,#ui_ddlMailRespondentTemplate,#ui_ddlProspectStatus").select2({
    minimumResultsForSearch: '',
    dropdownAutoWidth: false
});

$("#ui_lnkSaveDetails").click(function () {

    ShowPageLoading();

    if ($("#htmlIframetab").is(":visible") && allBindingFormFields.length == 0 && allFormFields.length == 0) {

        if (!ValidateFormHtmlDetails()) {
            HidePageLoading();
            return false;
        }

        SaveOneByOneFormHtmlDetails();
    }
    else {
        if (formType == 1 && !FormUtil.ValidateCaptureFormAllDatas()) {
            HidePageLoading();
            return false;
        }
        if ($("#ui_chkWebHooks").is(":checked")) {
            if (Webhookloopdetals.length == 0) {

                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.WebHookEmptyDetails);
                HidePageLoading();
                return false;
            }
            else if (checkwebhookupdatestatus == 1) {

                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.WebHooksavedetailserror);
                HidePageLoading();
                return false;
            }
            else if (checkwebhookupdatestatus == 2) {

                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.WebHookupdatedetailserror);
                HidePageLoading();
                return false;
            }
        }
        SaveOneByOneAllDetails();
    }
});

SaveOneByOneAllDetails = function () {

    formDetails.Id = $.urlParam("FormId");

    if (formDetails.Id <= 0) {
        formDetails.IsNewDivOrOldTable = 1;
    }

    FormUtil.GetBasicData();
    FormUtil.GetDesignValues();
    FormUtil.GetRulesData();
    FormUtil.SaveResponseSetting();
    //FormUtil.WebHookValues();
    FormUtil.GetURLParametersResponseValues();

    $.ajax({
        url: "/CaptureForm/ManageEmbeddedForms/SaveFormDetails",
        data: JSON.stringify({ 'AccountId': Plumb5AccountId, 'formDetails': formDetails, 'formfieldbindingdetails': allBindingFormFields, 'allFormFields': allFormFields, 'rulesData': ruleConditions, 'responseSettings': responseSettings, 'responseMailSettingFieldIndex': responseMailSettingFieldIndex, 'responseSMSSettingFieldIndex': responseSMSSettingFieldIndex, 'responseMailOutSettingIndex': responseMailOutSettingIndex, 'responseSalesAssigmentSettingIndex': responseSalesAssigmentSettingIndex, 'mailSettingList': mailSettingList, 'smsSettingList': smsSettingList, 'responseSmsOutSettingIndex': responseSmsOutSettingIndex, 'responseRedirectUrlSettingIndex': responseRedirectUrlSettingIndex, 'responseAutoAssignToGroupIndex': responseAutoAssignToGroupIndex, 'responseReportToPhoneIndex': responseReportToPhoneIndex, 'WebHookData': Webhookloopdetals, 'WhatsAppSettingList': WhatsAppSettingList, 'responseWhatsAppOutSettingIndex': responseWhatsAppOutSettingIndex, 'responseWhatsAppSettingFieldIndex': responseWhatsAppSettingFieldIndex, 'AutoAssignToGroupIndexValues': AutoAssignToGroupIndexValues, 'DeletedWebhookId': deletewebhookid, 'IsOverSourceIndexValues': IsOverSourceIndexValues }),
        dataType: "json",
        dataType: "json",
        type: "POST",
        contentType: "application/json; charset=utf-8",
        dataFilter: function (data) { return data; },
        success: function (response) {

            if (response.Status) {
                ShowSuccessMessage(GlobalErrorList.CreateEmbeddedForm.FormSuccessStatus);
                FormId = response.FormId;

                if ($.urlParam("FormId") == 0) {
                    allFormFields.length = 0;
                    allFormFields = response.savedFormField;
                    allBindingFormFields.length = 0;
                    allBindingFormFields = response.savedFormFieldBindingDetails;
                    var url = UpdateQueryString("FormId", FormId);
                    window.history.pushState(null, null, url);
                }

                setTimeout(function () { window.location.href = "/CaptureForm/ManageTaggedForms"; }, 3000);
                HidePageLoading();
            }
            else if (!response.Status) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.FormErrorStatus);
                HidePageLoading();
            }
        },
        error: ShowAjaxError
    });
};

function BindSavedData(formId) {

    var urlFetchDetails = "";
    if (formType == 1)
        urlFetchDetails = "/CaptureForm/ManageEmbeddedForms/GetFormDetails";
    else if (formType == 2 || formType == 3 || formType == 4 || formType == 5)
        urlFetchDetails = "/CaptureForm/Create/GetFormDetails";

    $.ajax({
        url: urlFetchDetails,
        data: JSON.stringify({ 'AccountId': Plumb5AccountId, 'FormId': formId }),
        dataType: "json",
        type: "POST",
        contentType: "application/json; charset=utf-8",
        dataFilter: function (data) { return data; },
        success: function (response) {

            if (!response.Status) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.GetErrorDetails);
            }
            else if (response.Status) {
                var savedWebHookDetails = [];
                if (formType == 1) {
                    allFormFields.length = 0;
                    allBindingFormFields.length = 0;

                    preFormFieldsBindingDetailsArray.length = 0;
                    preFormFieldsBindingDetailsArray = response.savedFormFieldBindingDetails;

                    preFormFieldsArray.length = 0;
                    allFormFields = preFormFieldsArray = response.savedFormField;

                    formDetails = response.savedFormdetails;
                    ruleConditions = response.savedFormRules;

                    OnBindData();

                    BindFormFieldsToDesign();

                    responseSettings = response.savedresponseSettings;

                    var savedMailSetting = [];
                    if (response.savedMailSetting != null)
                        savedMailSetting = response.savedMailSetting;

                    var savedSmsSetting = [];
                    if (response.savedSmsSetting != null)
                        savedSmsSetting = response.savedSmsSetting;

                    var savedWhatsAppSetting = [];
                    if (response.savedWhatsAppSetting != null)
                        savedWhatsAppSetting = response.savedWhatsAppSetting;
                    if (response.savedWebHookDetails != null) {

                        savedWebHookDetails = response.savedWebHookDetails;
                        Webhookloopdetals = response.savedWebHookDetails;

                    }
                    BindSaveResponseDetails(savedMailSetting, savedSmsSetting, response.savedresponseSettings, savedWebHookDetails, savedWhatsAppSetting);
                }
                else if (formType == 2 || formType == 3 || formType == 4 || formType == 5) {
                    formDetails = response.savedFormdetails;
                    ruleConditions = response.savedFormRules;
                    bannerDetails = response.savedFormBanner[0];
                    responseSettings = response.savedresponseSettings;
                    if (response.savedMailSetting != null && response.savedMailSetting.length > 0)
                        mailSettings = response.savedMailSetting[0];

                    if (response.savedSmsSetting != null && response.savedSmsSetting.length > 0)
                        savedSmsSetting = response.savedSmsSetting;
                    if (response.savedWhatsAppSetting != null && response.savedWhatsAppSetting.length > 0)
                        savedWhatsAppSetting = response.savedWhatsAppSetting;

                    if (response.savedWebHookDetails != null) {
                        savedWebHookDetails = response.savedWebHookDetails;
                        Webhookloopdetals = response.savedWebHookDetails;
                    }
                    OnBindData();
                    BindSaveResponseDetails(savedMailSetting, savedSmsSetting, response.savedresponseSettings, savedWebHookDetails, savedWhatsAppSetting);
                    BindSingleBannerDetails();
                }
            }
            else if (resultValue == -10) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.SessionExpiryError);
            }
            else {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.FormBindingProblem);
            }
        },
        error: ShowAjaxError
    });
}

function BindFormFieldsToDesign() {

    if (preFormFieldsBindingDetailsArray != null && preFormFieldsBindingDetailsArray.length > 0) {

        fieldrowindex = 0;

        textBoxlblNameCount, appendTextBox, addTextBoxNamePl, textBoxNameVal, textBoxlabelVal, textBoxlabelId, textBoxlblWrap, textBoxInptWrap, inputfieldrowindex;
        emaillblTextCount, emaillblInputId, emaillblTextVal, emaillblValName, emaillblTextBoxId, emailTextBoxId, emailPlaceholdText, emailboxisChecked, emaillblWrap, emailInpWrap;
        textBoxPhonelbl, textBoxPhonelblInputId, textBoxPhonelblId, phoneBoxlblText, phoneBoxInptId, phoneBoxlblTextId, phoneTextBoxId, phoneBoxPlaceTxt, phoneBoxisChecked, phonelblCont, phoneInptCont;
        textMessBoxlblName, textMessDefInputId, textMessBoxId, textMesslblName, textMessBoxIdVal, textMessBoxlblNameId, textMessBoxIdName, textMessBoxplacText, messBoxIsChecked, txtMessLblCont, txtMessInptCont;
        dateBoxlblName, dateTextBoxId, dateInputId, dateBoxlblText, dateBoxIdVal, dateBoxlblId, dateBoxinputId, dateBoxPlaceId, dateBoxIsCheck, dateBoxCheckMand, dateBoxlblCont, dateBoxInptCont;
        radioButtonHTML, addMoreRadio, radiobtnlblCont, radiobtninptCont;
        radioButtonCount = 0;
        checkboxHTML, addMoreCheckbox, addonemoreCheckBox, checkBoxlblCont, checkBoxInptCont;
        checkBoxcount = 0;
        custtxtbxlblwrp, custtxtbxlblname, custtxtbxinptwrp, custtxtbxinptId, custTextBxlblid, custTextBxlblval, custTextBxpl, custTextboxlblval, custTextBxismand;
        otptxtbxlblwrp, otptxtbxlblname, otptxtbxinptwrp, otptxtbxinptId, otpTextBxlblid, otpTextBxlblval, otpTextBxpl;

        for (var i = 0; i < preFormFieldsBindingDetailsArray.length; i++) {

            if (preFormFieldsBindingDetailsArray[i].FieldType == 1) {
                FormUtil.BindNameField(preFormFieldsBindingDetailsArray[i]);
            }
            else if (preFormFieldsBindingDetailsArray[i].FieldType == 2) {
                FormUtil.BindEmailField(preFormFieldsBindingDetailsArray[i]);
            }
            else if (preFormFieldsBindingDetailsArray[i].FieldType == 3) {
                FormUtil.BindPhoneField(preFormFieldsBindingDetailsArray[i]);
            }
            else if (preFormFieldsBindingDetailsArray[i].FieldType == 4) {
                FormUtil.BindDateField(preFormFieldsBindingDetailsArray[i]);
            }
            else if (preFormFieldsBindingDetailsArray[i].FieldType == 6) {
                FormUtil.BindCustomTextBoxField(preFormFieldsBindingDetailsArray[i]);
            }
            else if (preFormFieldsBindingDetailsArray[i].FieldType == 7) {
                FormUtil.BindTextAreaField(preFormFieldsBindingDetailsArray[i]);
            }
            else if (preFormFieldsBindingDetailsArray[i].FieldType == 8) {
                FormUtil.BindDropDowmField(preFormFieldsBindingDetailsArray[i]);
            }
            else if (preFormFieldsBindingDetailsArray[i].FieldType == 9) {
                FormUtil.BindRadioButtonField(preFormFieldsBindingDetailsArray[i]);
            }
            else if (preFormFieldsBindingDetailsArray[i].FieldType == 10) {
                FormUtil.BindCheckBoxField(preFormFieldsBindingDetailsArray[i]);
            }
            else if (preFormFieldsBindingDetailsArray[i].FieldType == 23) {
                FormUtil.BindOTpTextBoxField(preFormFieldsBindingDetailsArray[i]);
            }
            else if (preFormFieldsBindingDetailsArray[i].FieldType == 24) {
                FormUtil.BindSubmitButtonField(preFormFieldsBindingDetailsArray[i]);
            }
            else if (preFormFieldsBindingDetailsArray[i].FieldType == 25) {
                FormUtil.BindTitleField(preFormFieldsBindingDetailsArray[i]);
            }
            else if (preFormFieldsBindingDetailsArray[i].FieldType == 26) {
                FormUtil.BindDescriptionField(preFormFieldsBindingDetailsArray[i]);
            }
        }
        FormUtil.BindFormFieldsToArray();
    }
}

function getmaxFieldPriorityValue(arr) {
    let max = arr[0].FieldPriority;

    for (let val of arr) {
        if (val.FieldPriority > max) {
            max = val.FieldPriority;
        }
    }
    return max;
}

OnBindData = function () {

    $("#ui_txtFormIdentifier").val(formDetails.FormIdentifier);

    if (formDetails.IsMainBackgroundDesignCustom == false) {
        FormUtil.BindMainBodyCss();

        if (formDetails.BackgroundPxOPer == false)
            $("#ui_radBgOnpixel").prop("checked", true);
        else
            $("#ui_radBgOnpercent").prop("checked", true);
    }
    else if (formDetails.IsMainBackgroundDesignCustom == true) {
    }

    if (formDetails.IsCloseCustomCss == false) {
        FormUtil.BindCloseCss();
    }
    else if (formDetails.IsCloseCustomCss == true) {
    }

    if (formDetails.IsTitleCssCustom == false) {
        FormUtil.BindTitleCss();
    }
    else if (formDetails.IsTitleCssCustom == true) {
    }

    if (formDetails.IsDescriptionCustomCss == false) {
        FormUtil.BindDescriptionCss();
    }
    else if (formDetails.IsDescriptionCustomCss == true) {
    }

    if (formDetails.IsLabelCustomCss == false) {
        FormUtil.BindLabelCss();
    }
    else if (formDetails.IsLabelCustomCss == true) {
    }

    if (formDetails.IsTextboxDropCustomCss == false) {
        FormUtil.BindTextboxDropCss();
    }
    else if (formDetails.IsTextboxDropCustomCss == true) {
    }

    if (formDetails.IsButtonCustomCss == false) {
        FormUtil.BindButtonCss();
    }
    else if (formDetails.IsButtonCustomCss == true) {
    }

    FormUtil.BindAudienceData();
    FormUtil.BindBehaviorData();
    FormUtil.BindInteractionData();
    FormUtil.BindInteractionEventData();
    FormUtil.BindProfileData();

    FormUtil.BindFormEffects();

    //if (formDetails.OnPageOrInPage == true) {
    //	$("#ui_radOnPage").prop("checked", true);
    //	$(".settingEffect").removeClass("BlurAndOpacity");
    //}
    //else if (formDetails.OnPageOrInPage == false) {
    //	$("#ui_radInPage").prop("checked", true);
    //	$(".settingEffect").addClass("BlurAndOpacity");
    //}

    //$("#ui_ddlEffect").val(formDetails.AppearenceEffect);

    //$("#frmaligndesign").val(formDetails.PositionAlign);
    //$("#ui_txtBottomPadding").val(formDetails.TopOrBottomPadding);
    //$("#ui_txtPadding").val(formDetails.RightOrLeftPadding);
    //$("#ui_txtTimeDelay").val(formDetails.TimeDelay);

    //$("#ui_ddlHideEffect").val(formDetails.HideEffect);

    //if (formDetails.ThankYouMessage != null && formDetails.ThankYouMessage.length > 0) {
    //    $("#ui_txtThankYouMessage").val(formDetails.ThankYouMessage);
    //}

    //if (formDetails.AppearOnLoadOnExitOnScroll == 0) {
    //    $("#ui_radAppearOnPageLoad").prop("checked", true);
    //    $("#ui_txtShowOnScrollDownHeight").addClass("tdHide");
    //}
    //else if (formDetails.AppearOnLoadOnExitOnScroll == 1) {
    //    $("#ui_radAppearOnPageExit").prop("checked", true);
    //    $("#ui_txtShowOnScrollDownHeight").addClass("tdHide");
    //}
    //else {
    //    $("#ui_radAppearOnScroll").prop("checked", true);
    //    $("#ui_txtShowOnScrollDownHeight").val(formDetails.ShowOnScrollDownHeight).removeClass("tdHide");
    //}

    AppendCSS(cssObjectsFormBody);
};

BindSingleBannerDetails = function () {
    $(".custompopupwrp").addClass("right-0");
    $('#formHead,#formDescrip,#upLodImg,#textBox,#inputEmail,#inputPhone,#customTextBox,#otpTextBox,#selectDropdown,#inputTextarea,#radioButton,#checkBox,#dateFormat,#submitBtn').attr('style', 'display: none !important');
    $('#lblLabelDesignTab,#lblTextBoxDesignTab,#lblBtnDesignTab').attr('style', 'display: none !important');
    $(".customhtmlitemwrp").addClass("hideDiv");

    if (formDetails.FormType == 2) {
        $("#dv_htmltag").addClass("active");
        $("#dv_iframetag,#dv_custombanner,#dv_video").removeClass("active");
        $("#HTML").removeClass('hideDiv');

        $("#ui_txtContent").val(bannerDetails.BannerContent);
        FormUtil.htmlAppend(bannerDetails.BannerContent);
    }
    else if (formDetails.FormType == 3) {
        $("#dv_iframetag").addClass("active");
        $("#dv_htmltag,#dv_custombanner,#dv_video").removeClass("active");
        $("#IFRAMES").removeClass('hideDiv');

        $("#ui_txtiframeContent").val(bannerDetails.BannerContent);
        FormUtil.IframeAppend(bannerDetails.BannerContent);
    }
    else if (formDetails.FormType == 4) {
        $("#dv_custombanner").addClass("active");
        $("#dv_htmltag,#dv_video,#dv_iframetag").removeClass("active");
        $("#BANNER").removeClass('hideDiv');

        $("#ui_txtimageContent").val(bannerDetails.BannerContent);
        $("#ui_txtImageRedirectUrl").val(bannerDetails.RedirectUrl);
        FormUtil.bannerImageAppend(bannerDetails.RedirectUrl, bannerDetails.BannerContent, $('#bodyHeight').val());
    }
    else if (formDetails.FormType == 5) {
        $("#dv_video").addClass("active");
        $("#dv_htmltag,#dv_iframetag,#dv_custombanner").removeClass("active");
        $("#VIDEO").removeClass('hideDiv');

        $("#ui_txtvideoContent").val(bannerDetails.BannerContent);

        FormUtil.videoAppend(bannerDetails.BannerContent, $('#bodyHeight').val());
    }
};

BindSaveResponseDetails = function (savedMailDetail, savedSmsDetail, respSetting, savedWebHookDetails, savedWhatsAppDetail) {

    var saveResponseSetting = $.extend(true, {}, respSetting);
    IsMailGetValues = false;
    IsSMSGetValues = false;
    IsWhatsAppGetValues = false;
    IsMailOutSetting = false;
    IsSmsOutSetting = false;
    IsWhatsAppOutSetting = false;
    IsAssignmentGetValues = false;
    IsRedirectUrlValues = false;
    IsAutoAssignToGroup = false;
    Isoverridesource = false;
    if (saveResponseSetting.ReportToFormsMailFieldId == 0 && saveResponseSetting.ReportToDetailsByMail != null && saveResponseSetting.ReportToDetailsByMail.length > 0) {
        $("#ui_chkReportMail, #ui_radReportMailUnCondition").prop("checked", true);
        $("#ui_radReportMailCondition").prop("checked", false);
        $("#ui_chkReportMailTd, #ReportMail_Tr, #ui_radReportMailUnCondition_dv").show();
        $("#ReportMail_Tr").removeClass("hideDiv");
        $("#ui_radReportMailCondition_dv").hide();
        $("#ui_txtReportThroughEmail").val(saveResponseSetting.ReportToDetailsByMail);
    }
    else if (saveResponseSetting.ReportToFormsMailFieldId > 0) {
        $("#ui_chkReportMail").prop("checked", true);
        $("#ui_radReportMailUnCondition").prop("checked", false);
        $("#ReportMail_Tr").removeClass("hideDiv");
        $("#ReportMail_Tr, #ui_chkReportMailTd, #ui_radReportMailCondition_dv").show();
        $("#ui_radReportMailUnCondition_dv").hide();
        $("#ui_radReportMailCondition_dv").removeClass("hideDiv");
        $("#ui_radReportMailCondition").prop("checked", true);
        BindResponseConditionalFieldList("dvReportToMailConditionalFields", "dvReportToMailConditionalOptions", "ReportToMail");
        $("input:radio[name='ReportToMailDependencyFieldOption'][value='" + saveResponseSetting.ReportToFormsMailFieldId + "']").click();

        for (var i = 0; i < allFormFields.length; i++)
            if (allFormFields[i].Id == saveResponseSetting.ReportToFormsMailFieldId) {
                responseMailSettingFieldIndex = i;
                break;
            }
    }

    if (saveResponseSetting.ReportToFormsSMSFieldId == 0 && saveResponseSetting.ReportToDetailsBySMS != null && saveResponseSetting.ReportToDetailsBySMS.length > 0) {
        $("#ui_chkReportSMS, #ui_radReportSMSUnCondition").prop("checked", true);
        $("#ui_radReportSMSCondition").prop("checked", false);
        $("#ui_chkReportSMSTd, #ReportSms_Tr, #ui_radReportSMSUnConditionTd").show();
        $("#ui_radReportSMSConditionTd").hide();
        $("#ReportSms_Tr").removeClass("hideDiv");
        $("#ui_txtReportThroughSMSAlert").val(saveResponseSetting.ReportToDetailsBySMS);
    }
    else if (saveResponseSetting.ReportToFormsSMSFieldId > 0) {

        $("#ui_chkReportSMS").prop("checked", true);
        $("#ui_radReportSMSUnCondition").prop("checked", false);
        $("#ReportSms_Tr, #ui_chkReportSMSTd, #ui_radReportSMSConditionTd").show();
        $("#ui_radReportSMSUnConditionTd").hide();
        $("#ReportSms_Tr").removeClass("hideDiv");
        $("#ui_radReportSMSConditionTd").removeClass("hideDiv");
        $("#ui_radReportSMSCondition").prop("checked", true);
        BindResponseConditionalFieldList("dvReportToSMSConditionalFields", "dvReportToSMSConditionalOptions", "ReportToSMS");
        $("input:radio[name='ReportToSMSDependencyFieldOption'][value='" + saveResponseSetting.ReportToFormsSMSFieldId + "']").click();

        for (var i = 0; i < allFormFields.length; i++)
            if (allFormFields[i].Id == saveResponseSetting.ReportToFormsSMSFieldId) {
                responseSMSSettingFieldIndex = i;
                break;
            }
    }

    if (saveResponseSetting.ReportToFormsWhatsAppFieldId == 0 && saveResponseSetting.ReportToDetailsByWhatsApp != null && saveResponseSetting.ReportToDetailsByWhatsApp.length > 0) {
        $("#ui_chkReportWhatsApp, #ui_radReportWhatsAppUnCondition").prop("checked", true);
        $("#ui_radReportWhatsAppCondition").prop("checked", false);
        $("#ui_chkReportWhatsAppTd, #ReportWhatsApp_Tr, #ui_radReportWhatsAppUnConditionTd").show();
        $("#ui_radReportWhatsAppConditionTd").hide();
        $("#ReportWhatsApp_Tr").removeClass("hideDiv");
        $("#ui_txtReportThroughWhatsAppAlert").val(saveResponseSetting.ReportToDetailsByWhatsApp);
    }
    else if (saveResponseSetting.ReportToFormsWhatsAppFieldId > 0) {

        $("#ui_chkReportWhatsApp").prop("checked", true);
        $("#ui_radReportWhatsAppUnCondition").prop("checked", false);
        $("#ReportWhatsApp_Tr, #ui_chkReportWhatsAppTd, #ui_radReportWhatsAppConditionTd").show();
        $("#ui_radReportWhatsAppUnConditionTd").hide();
        $("#ReportWhatsApp_Tr").removeClass("hideDiv");
        $("#ui_radReportWhatsAppConditionTd").removeClass("hideDiv");
        $("#ui_radReportWhatsAppCondition").prop("checked", true);
        BindResponseConditionalFieldList("dvReportToWhatsAppConditionalFields", "dvReportToWhatsAppConditionalOptions", "ReportToWhatsApp");
        $("input:radio[name='ReportToWhatsAppDependencyFieldOption'][value='" + saveResponseSetting.ReportToFormsWhatsAppFieldId + "']").click();

        for (var i = 0; i < allFormFields.length; i++)
            if (allFormFields[i].Id == saveResponseSetting.ReportToFormsWhatsAppFieldId) {
                responseWhatsAppSettingFieldIndex = i;
                break;
            }
    }


    //Redirect Url Conditional and Unconditional
    if (saveResponseSetting.RedirectUrl != null && saveResponseSetting.RedirectUrl.length > 0) {
        if (saveResponseSetting.IsRedirectUrlNewWindow != null) {
            if (saveResponseSetting.IsRedirectUrlNewWindow)
                $("#ui_chkIsRedirectUrlNewWindow").prop("checked", true);
            else if (!saveResponseSetting.IsRedirectUrlNewWindow)
                $("#ui_chkIsRedirectUrlNewWindow").prop("checked", false);
        }

        var Data = JSON.parse(saveResponseSetting.RedirectUrl);
        var SubfieldsKeyValueList = Data.Subfields;

        if (Data.DependencyFieldId == 0 && Data.UnconditionalStaticUrl != null && Data.UnconditionalStaticUrl.length > 0) {
            $("#ui_chkRedirectUrl").prop("checked", true);
            $("#ui_chkRedirectUrlTd").show();
            $("#ui_trRedirectUrl").removeClass("hideDiv");

            $("#ui_chkRedirectUrl, #ui_chkUnConditionalRedirectUrl").prop("checked", true);
            $("#ui_chkConditionalRedirectUrl").prop("checked", false);
            $("#ui_chkUnConditionalRedirectUrlTd, #RedirectUrl_Tr, #ui_chkUnConditionalRedirectUrl").show();
            $("#ui_chkConditionalRedirectUrlTd").hide();

            $("#ui_txtRedirectUrl").val(Data.UnconditionalStaticUrl);
        }
        else if (Data.DependencyFieldId > 0) {
            $("#ui_chkRedirectUrl").prop("checked", true);
            $("#ui_chkRedirectUrlTd").show();
            $("#ui_trRedirectUrl").removeClass("hideDiv");
            $("#ui_chkConditionalRedirectUrlTd").removeClass("hideDiv");

            $("#ui_chkRedirectUrl, #ui_chkConditionalRedirectUrl").prop("checked", true);
            $("#ui_chkUnConditionalRedirectUrl").prop("checked", false);
            $("#ui_chkConditionalRedirectUrlTd, #RedirectUrl_Tr, #ui_chkConditionalRedirectUrl").show();
            $("#ui_chkUnConditionalRedirectUrlTd").hide();
            BindResponseConditionalFieldList("dvRedirectUrlConditionalFields", "dvRedirectUrlConditionalOptions", "RedirectUrl");
            $("input:radio[name='RedirectUrlDependencyFieldOption'][value='" + Data.DependencyFieldId + "']").click();

            for (var i = 0; i < allFormFields.length; i++)
                if (allFormFields[i].Id == Data.DependencyFieldId) {
                    responseRedirectUrlSettingIndex = i;
                    break;
                }
        }
    }

    //Group Url Conditional and Unconditional
    if (saveResponseSetting.GroupId != null && saveResponseSetting.GroupId.length > 0) {
        var Data = JSON.parse(saveResponseSetting.GroupId);
        // var SubfieldsKeyValueList = Data.Subfields;
        GroupResponseSettings = saveResponseSetting.GroupId;

        if (Data != null && Data.length == 1 && Data[0].DependencyFieldId == 0 && Data[0].UnconditionalGroupId != "0" && Data[0].UnconditionalGroupId.length > 0) {
            $("#ui_chkGroups").prop("checked", true);
            $("#ui_chkGroupsTd").show();
            $("#Groups_Tr").removeClass("hideDiv");

            $("#ui_chkUnConditionalGroups").prop("checked", true);
            $("#ui_chkConditionalGroups").prop("checked", false);
            $("#ui_chkUnConditionalGroupsTd, #Groups_Tr, #ui_chkUnConditionalGroups").show();
            $("#ui_chkConditionalGroupsTd").hide();
            $("#ui_ddlGroupList").select2().val(Data[0].UnconditionalGroupId).change();
        }
        else if (Data != null && Data.length > 0) {
            $("#ui_chkGroups").prop("checked", true);
            $("#ui_chkGroupsTd").show();
            $("#ui_chkConditionalGroups").prop("checked", true);
            $("#ui_chkUnConditionalGroups").prop("checked", false);
            $("#ui_chkConditionalGroupsTd, #Groups_Tr, #ui_chkConditionalGroups").show();
            $("#ui_chkUnConditionalGroupsTd").hide();
            $("#Groups_Tr").removeClass("hideDiv");
            $("#ui_chkConditionalGroupsTd").removeClass("hideDiv");
            BindResponseConditionalFieldList("dvGroupsConditionalFields", "dvGroupsConditionalOptions", "AutoAssignGroup");

            var ConditionDetail = saveResponseSetting.GroupId;

            $.each(JSON.parse(ConditionDetail), function (i, obj) {
                $("input:checkbox[name='AutoAssignGroupDependencyFieldOption'][value='" + obj.DependencyFieldId + "']").click();

                if (allFormFields[i].Id == obj.DependencyFieldId) {
                    AutoAssignToGroupIndexValues.push(i);
                }
            });
            FormUtil.AutoAssignToGroup();
        }
    }
    //OverRide source Conditional and Unconditional
    if (saveResponseSetting.IsOverRideSource != null && saveResponseSetting.IsOverRideSource.length > 0) {
        var Data = JSON.parse(saveResponseSetting.IsOverRideSource);
        // var SubfieldsKeyValueList = Data.Subfields;
        GroupResponseSettings = saveResponseSetting.IsOverRideSource;

        if (Data != null && Data.length == 1 && Data[0].DependencyFieldId == 0 && Data[0].UnconditionalOverSourceId != "0" && Data[0].UnconditionalOverSourceId.length > 0) {
            $("#ui_chkoverridesource").prop("checked", true);
            //$("#ui_chkGroupsTd").show();
            $("#IsOverriseSource_Tr").removeClass("hideDiv");

            $("#ui_chkUnConditionaloverridesource").prop("checked", true);
            $("#ui_chkConditionaloverridesource").prop("checked", false);
            $("#ui_chkUnConditionaloverridesourceTd, #IsOverriseSource_Tr, #ui_chkUnConditionaloverridesource").show();
            $("#ui_chkConditionaloverridesourceTd").hide();
            setTimeout(function () { $("#ui_ddlIsoverridesourceList").select2().val(Data[0].UnconditionalOverSourceId).change(); }, 1000);

        }
        else if (Data != null && Data.length > 0) {
            $("#ui_chkoverridesource").prop("checked", true);
            //$("#ui_chkGroupsTd").show();
            $("#ui_chkConditionaloverridesource").prop("checked", true);
            $("#ui_chkUnConditionaloverridesource").prop("checked", false);
            $("#ui_chkConditionaloverridesourceTd, #IsOverriseSource_Tr, #ui_chkConditionaloverridesource").show();
            $("#ui_chkUnConditionaloverridesourceTd").hide();
            $("#IsOverriseSource_Tr").removeClass("hideDiv");
            $("#ui_chkConditionaloverridesourceTd").removeClass("hideDiv");

            setTimeout(function () {
                BindResponseConditionalFieldList("dvOverRideSourceConditionalFields", "dvOverRideSourceConditionalOptions", "Isoverridesource");
                var ConditionDetail = saveResponseSetting.IsOverRideSource;

                $.each(JSON.parse(ConditionDetail), function (i, obj) {
                    $("input:checkbox[name='IsoverridesourceDependencyFieldOption'][value='" + obj.DependencyFieldId + "']").click();

                    if (allFormFields[i].Id == obj.DependencyFieldId) {
                        IsOverSourceIndexValues.push(i);
                    }
                });
                FormUtil.Isoverridesource();
            }, 1000);

        }

        if (saveResponseSetting.SourceType == 0)
            $('#lmsStaySource').attr('checked', true);
        else if (saveResponseSetting.SourceType == 1)
            $('#lmsOverrideSource').attr('checked', true);
        else if (saveResponseSetting.SourceType == 2)
            $('#lmsNewSource').attr('checked', true);
    }
    //Autoassign to group Based on Optin Binding
    if (saveResponseSetting.GroupIdBasedOnOptin != null && saveResponseSetting.GroupIdBasedOnOptin.length > 0) {

        var OptinResponse = JSON.parse(saveResponseSetting.GroupIdBasedOnOptin);
        $("#ui_optinGroups").prop("checked", true)
        $("#dv_optinGroups").show();
        $("#dv_optinGroups").removeClass("hideDiv");

        for (var i = 0; i < OptinResponse.length; i++) {

            if (OptinResponse[i].FieldType == "MailSpecific") {
                $("#ui_chkMailSpecificOptin").prop("checked", true);
                $("#dv_MailOptin").show();
                $("#dv_MailOptin").removeClass("hideDiv");

                if (OptinResponse[i].OptinType == "Optin") {
                    $("#ui_chkMailSpecificOptinYes").prop("checked", true);
                    $("#").val(OptinResponse[i].GroupId);
                    $("#ui_ddlGroupList_MailSpecificOptinYes").select2().val(OptinResponse[i].GroupId).change();
                }
                if (OptinResponse[i].OptinType == "WithoutOptin") {
                    $("#ui_chkMailSpecificOptinNo").prop("checked", true);
                    $("#ui_ddlGroupList_MailSpecificOptinNo").select2().val(OptinResponse[i].GroupId).change();
                }
            }
            if (OptinResponse[i].FieldType == "SmsSpecific") {
                $("#ui_chkSmsSpecificOptin").prop("checked", true);
                $("#dv_SmsOptin").show();
                $("#dv_SmsOptin").removeClass("hideDiv");

                if (OptinResponse[i].OptinType == "Optin") {
                    $("#ui_chkSmsSpecificOptinYes").prop("checked", true);
                    $("#ui_ddlGroupList_SmsSpecificOptinYes").select2().val(OptinResponse[i].GroupId).change();
                }
                if (OptinResponse[i].OptinType == "WithoutOptin") {
                    $("#ui_chkSmsSpecificOptinNo").prop("checked", true);
                    $("#ui_ddlGroupList_SmsSpecificOptinNo").select2().val(OptinResponse[i].GroupId).change();
                }
            }
            if (OptinResponse[i].FieldType == "WhatsAppOptin") {
                $("#ui_chkWhatsAppOptin").prop("checked", true)
                $("#dv_MailOverall").show();
                $("#dv_MailOverall").removeClass("hideDiv");

                if (OptinResponse[i].OptinType == "Optin") {
                    $("#ui_chkWhatsAppOptinYes").prop("checked", true);
                    $("#ui_ddlGroupList_WhatsAppOptinYes").select2().val(OptinResponse[i].GroupId).change();
                }
                if (OptinResponse[i].OptinType == "WithoutOptin") {
                    $("#ui_chkWhatsAppOptinNo").prop("checked", true);
                    $("#ui_ddlGroupList_WhatsAppOptinNo").select2().val(OptinResponse[i].GroupId).change();
                }
            }
        }
    }

    saveResponseSetting.MailIdList = "";
    if (savedMailDetail != undefined && savedMailDetail.length > 0 && saveResponseSetting.MailOutDependencyFieldId == 0) {
        $("#ui_chkSendMailOut, #ui_chkUnConditionalMailOut").prop("checked", true);
        $("#ui_chkConditionalMailOut").prop("checked", false);
        $("#ui_chkSendMailOutTd, #MailOut_Tr, #ui_chkUnConditionalMailOutTd").show();
        $("#ui_chkConditionalMailOutTd").hide();
        $("#MailOut_Tr").removeClass("hideDiv");

        var mail = savedMailDetail[0];
        $("#ui_ddlMailUnConditionTemplate").select2().val(mail.MailTemplateId).change();
        $("#ui_txtMailUnConditionSubject").val(mail.Subject);
        $("#ui_txtUnConditionalMailFromName").val(mail.FromName);
        $("#ui_ddlFromEmailSender").select2().val(mail.FromEmailId).change();
        //$("#ui_txtUnConditionalMailFromId").val(mail.FromEmailId);
        mailSettingList = savedMailDetail;
    }
    else if (saveResponseSetting.MailOutDependencyFieldId > 0) {
        $("#ui_chkSendMailOut").prop("checked", true);
        $("#ui_chkUnConditionalMailOut").prop("checked", false);
        $("#MailOut_Tr, #ui_chkSendMailOutTd, #ui_chkConditionalMailOutTd").show();
        $("#ui_chkUnConditionalMailOutTd").hide();
        $("#ui_chkConditionalMailOut").prop("checked", true);
        $("#MailOut_Tr").removeClass("hideDiv");
        $("#ui_chkConditionalMailOutTd").removeClass("hideDiv");

        BindResponseConditionalFieldList("dvMailoutConditionalFields", "dvMailoutConditionalOptions", "MailOut");
        $("input:radio[name='MailOutDependencyFieldOption'][value='" + saveResponseSetting.MailOutDependencyFieldId + "']").click();
        mailSettingList = savedMailDetail;

        for (var i = 0; i < mailSettingList.length; i++) {
            var mail = mailSettingList[i];
            $("#ui_ddlMailOut_" + i).val(mail.MailTemplateId);
            $("#ui_txtMailConditionSubject_" + i).val(mail.Subject);
            $("#ui_txtConditionalMailFromName_" + i).val(mail.FromName);
            $("#ui_ddlMailFormEmailIdMailOut_" + i).val(mail.FromEmailId);
        }

        for (var i = 0; i < allFormFields.length; i++)
            if (allFormFields[i].Id == saveResponseSetting.MailOutDependencyFieldId) {
                responseMailOutSettingIndex = i;
                break;
            }
    }

    saveResponseSetting.SmsSendingSettingIdList = "";
    //Sms Out Responder
    if (saveResponseSetting.SmsOutDependencyFieldId == 0 && savedSmsDetail != undefined && savedSmsDetail.length > 0) {
        $("#ui_chkSendSmsOut, #ui_chkUnConditionalSmsOut").prop("checked", true);
        $("#ui_chkConditionalSmsOut").prop("checked", false);
        $("#ui_chkSendSmsOutTd, #SmsOut_Tr, #ui_chkUnConditionalSmsOut").show();
        $("#ui_chkConditionalSmsOutTd").hide();
        $("#SmsOut_Tr").removeClass("hideDiv");
        $("#ui_ddlSmsTemplate").select2().val(savedSmsDetail[0].SmsTemplateId).change();

        smsSettingList = savedSmsDetail;
    }
    else if (saveResponseSetting.SmsOutDependencyFieldId > 0 && savedSmsDetail.length > 0) {
        $("#ui_chkSendSmsOut").prop("checked", true);
        $("#ui_chkUnConditionalSmsOut").prop("checked", false);
        $("#SmsOut_Tr, #ui_chkSendSmsOutTd, #ui_chkConditionalSmsOutTd").show();
        $("#ui_chkUnConditionalSmsOutTd").hide();
        $("#SmsOut_Tr").removeClass("hideDiv");
        $("#ui_chkConditionalSmsOut").prop("checked", true);
        $("#ui_chkConditionalSmsOutTd").removeClass("hideDiv");
        BindResponseConditionalFieldList("dvSmsOutConditionalFields", "dvSmsOutConditionalOptions", "SmsOut");
        $("input:radio[name='SmsOutDependencyFieldOption'][value='" + saveResponseSetting.SmsOutDependencyFieldId + "']").click();
        smsSettingList = savedSmsDetail;
        for (var i = 0; i < smsSettingList.length; i++)
            $("#ui_ddlSmsOut_" + i).val(smsSettingList[i].SmsTemplateId);

        for (var i = 0; i < allFormFields.length; i++)
            if (allFormFields[i].Id == saveResponseSetting.SmsOutDependencyFieldId) {
                responseSmsOutSettingIndex = i;
                break;
            }
    }
    //WhatsApp Out Responder
    if (saveResponseSetting.WhatsAppOutDependencyFieldId == 0 && savedWhatsAppDetail != undefined && savedWhatsAppDetail.length > 0) {
        $("#ui_chkSendWhatsAppOut, #ui_chkUnConditionalWhatsAppOut").prop("checked", true);
        $("#ui_chkConditionalWhatsAppOut").prop("checked", false);
        $("#ui_chkSendWhatsAppOutTd, #WhatsAppOut_Tr, #ui_chkUnConditionalWhatsAppOut").show();
        $("#ui_chkConditionalWhatsAppOutTd").hide();
        $("#WhatsAppOut_Tr").removeClass("hideDiv");
        $("#ui_ddlWhatsAppTemplate").select2().val(savedWhatsAppDetail[0].WhatsAppTemplateId).change();

        WhatsAppSettingList = savedWhatsAppDetail;
    }
    else if (saveResponseSetting.WhatsAppOutDependencyFieldId > 0 && savedWhatsAppDetail.length > 0) {
        $("#ui_chkSendWhatsAppOut").prop("checked", true);
        $("#ui_chkUnConditionalWhatsAppOut").prop("checked", false);
        $("#WhatsAppOut_Tr, #ui_chkSendWhatsAppOutTd, #ui_chkConditionalWhatsAppOutTd").show();
        $("#ui_chkUnConditionalWhatsAppOutTd").hide();
        $("#WhatsAppOut_Tr").removeClass("hideDiv");
        $("#ui_chkConditionalWhatsAppOut").prop("checked", true);
        $("#ui_chkConditionalWhatsAppOutTd").removeClass("hideDiv");
        BindResponseConditionalFieldList("dvWhatsAppOutConditionalFields", "dvWhatsAppOutConditionalOptions", "WhatsAppOut");
        $("input:radio[name='WhatsAppOutDependencyFieldOption'][value='" + saveResponseSetting.WhatsAppOutDependencyFieldId + "']").click();
        WhatsAppSettingList = savedWhatsAppDetail;
        for (var i = 0; i < WhatsAppSettingList.length; i++)
            $("#ui_ddlWhatsAppOut_" + i).val(WhatsAppSettingList[i].WhatsAppTemplateId);

        for (var i = 0; i < allFormFields.length; i++)
            if (allFormFields[i].Id == saveResponseSetting.WhatsAppOutDependencyFieldId) {
                responseWhatsAppOutSettingIndex = i;
                break;
            }
    }
    //Assign To Sales Person
    if (saveResponseSetting.ReportToAssignLeadToUserIdFieldId == 0 && saveResponseSetting.AccesLeadToUserId != null && saveResponseSetting.AccesLeadToUserId.length > 0 && saveResponseSetting.AccesLeadToUserId != "0") {
        $("#ui_chkSalesPerson, #ui_radUnConditionalAssignToSales").prop("checked", true);
        $("#ui_radConditionalAssignToSales").prop("checked", false);
        $("#AssignToSales_Tr").removeClass("hideDiv");
        $("#AssignToSales_Tr, #ui_chkSalesPersonTd, #ui_radUnConditionalAssignToSalesTd").show();
        $("#ui_radConditionalAssignToSalesTd").hide();
        $("#ui_ddlUserList").select2().val(saveResponseSetting.AccesLeadToUserId).change();

        if (saveResponseSetting.IsOverrideAssignment != null && saveResponseSetting.IsOverrideAssignment == 1) {
            $("#ui_chkIsOverrideAssignmentBasedOnRule").prop("checked", false);
            $("#ui_chkIsOverrideAssignment").prop("checked", true);
        }
    }
    else if (saveResponseSetting.ReportToAssignLeadToUserIdFieldId > 0) {
        $("#ui_chkSalesPerson").prop("checked", true);
        $("#ui_radUnConditionalAssignToSales").prop("checked", false);
        $("#AssignToSales_Tr").removeClass("hideDiv");
        $("#AssignToSales_Tr, #ui_chkSalesPersonTd, #ui_radConditionalAssignToSalesTd").show();
        $("#ui_radUnConditionalAssignToSalesTd").hide();
        $("#ui_radConditionalAssignToSales").prop("checked", true);
        $("#ui_radConditionalAssignToSalesTd").removeClass("hideDiv");
        BindResponseConditionalFieldList("dvAssignToSalesConditionalFields", "dvAssignToSalesConditionalOptions", "AssignToSales");
        $("input:radio[name='AssignToSalesDependencyFieldOption'][value='" + saveResponseSetting.ReportToAssignLeadToUserIdFieldId + "']").click();

        for (var i = 0; i < allFormFields.length; i++)
            if (allFormFields[i].Id == saveResponseSetting.ReportToAssignLeadToUserIdFieldId) {
                responseSalesAssigmentSettingIndex = i;
                break;
            }

        if (saveResponseSetting.IsOverrideAssignment != null && saveResponseSetting.IsOverrideAssignment == 1) {
            $("#ui_chkIsOverrideAssignmentBasedOnRule").prop("checked", false);
            $("#ui_chkIsOverrideAssignment").prop("checked", true);
        }
    }

    if (saveResponseSetting.IsOverrideAssignment != null && saveResponseSetting.IsOverrideAssignment == 2) {
        $("#ui_chkSalesPerson").prop("checked", true);
        $("#AssignToSales_Tr").removeClass("hideDiv");
        $("#AssignToSales_Tr, #ui_chkSalesPersonTd, #ui_radUnConditionalAssignToSalesTd").show();
        $("#ui_chkIsOverrideAssignmentBasedOnRule").prop("checked", true);
        $("#frmrepassignee").addClass("hideDiv");
        $("#ui_chkIsOverrideAssignment").prop("checked", false);
    }
    if (savedWebHookDetails.length > 0) {
        $("#ui_chkWebHooks").prop("checked", true)
        $("#ui_trWebHooks").removeClass("hideDiv");
        $("#webhookeditoption").addClass("hideDiv");
        $("#webhookeditoption input").val(" ");
        $("#methodwebhook, #ui_ddl_ContentType").val(" ");
        WebhookFieldsToedit();
    }
    //if (savedWebHookDetails != null) {
    //    $("#ui_chkWebHooks").prop("checked", true)
    //    $("#ui_trWebHooks").removeClass("hideDiv");
    //    if (savedWebHookDetails.RequestURL != null && savedWebHookDetails.RequestURL != "")
    //        $("#ui_txtRequestUrl").val(savedWebHookDetails.RequestURL);

    //    if (savedWebHookDetails.MethodType != null && savedWebHookDetails.MethodType != "")
    //        $("#ui_ddl_MethodType").val(savedWebHookDetails.MethodType);

    //    if (savedWebHookDetails.ContentType != null && savedWebHookDetails.ContentType != "")
    //        $("#ui_ddl_ContentType").val(savedWebHookDetails.ContentType).change();

    //    let ContentType = $("#ui_ddl_ContentType option:selected").text().toLowerCase();
    //    if (ContentType == 'form') {
    //        if (savedWebHookDetails.FieldMappingDetails != null && savedWebHookDetails.FieldMappingDetails != "") {
    //            var FieldMappingConditionDetail = savedWebHookDetails.FieldMappingDetails;

    //            $.each(JSON.parse(FieldMappingConditionDetail), function (i, obj) {

    //                if (i == 0) {
    //                    trelementcount = 0;
    //                }
    //                if (obj.IsPlumb5OrCustomField == "Plumb5Field") {
    //                    $(".dropdown-item.adddatafild").click();
    //                    $("#txtFieldAnswer_" + i).val(obj.Key);
    //                    $("#drpFields_" + i).select2().val(obj.Value).change();
    //                }
    //                else if (obj.IsPlumb5OrCustomField == "StaticField") {
    //                    $(".adddatacustfild").click();
    //                    $("#txtFieldKey_" + i).val(obj.Key);
    //                    $("#txtFieldAnswer_" + i).val(obj.Value);
    //                }
    //            });
    //        }
    //    }
    //    else if (ContentType == 'raw body') {
    //        $("#ui_txtRequestBody").val(savedWebHookDetails.RawBody);
    //    }

    //    if (savedWebHookDetails.Headers != null && savedWebHookDetails.Headers != "") {
    //        var HeaderConditionDetail = savedWebHookDetails.Headers;
    //        $.each(JSON.parse(HeaderConditionDetail), function (i, obj) {

    //            if (i == 0) {
    //                trheaderelementcount = 0;
    //            }

    //            $(".addheaderfild").click();
    //            $("#txtheaderKey_" + i).val(obj.Key);
    //            $("#txtheaderValue_" + i).val(obj.Value);
    //        });
    //    }

    //    if (savedWebHookDetails.BasicAuthentication != null && savedWebHookDetails.BasicAuthentication != "") {
    //        var basicauthdetails = JSON.parse(savedWebHookDetails.BasicAuthentication);
    //        $("#ui_txt_BasicAuthenticationKey").val(basicauthdetails.AuthenticationKey);
    //        $("#ui_txt_BasicAuthenticationValue").val(basicauthdetails.AuthenticationValue);
    //    }
    //}

    //URL Parameter Responses
    if (saveResponseSetting.URLParameterResponses != null && saveResponseSetting.URLParameterResponses.length > 0) {
        $("#ui_chkURLParamResponses").prop("checked", true)
        $("#ui_trURLParamResponse").removeClass("hideDiv");
        var URLResponseFieldMappingConditionDetail = saveResponseSetting.URLParameterResponses;
        $.each(JSON.parse(URLResponseFieldMappingConditionDetail), function (i, obj) {
            if (i == 0)
                trcount = 0;

            $(".addwebhooksreps").click();
            $("#txtUrlFieldAnswer_" + i).val(obj.Value);
            $("#drpUrlFields_" + i).select2().val(obj.Key).change();

        });
    }

    IsMailGetValues = true;
    IsSMSGetValues = true;
    IsWhatsAppGetValues = true;
    IsMailOutSetting = true;
    IsSmsOutSetting = true;
    IsWhatsAppOutSetting = true;
    IsAssignmentGetValues = true;
    IsRedirectUrlValues = true;
    IsAutoAssignToGroup = true;
    Isoverridesource = true;
};

/*Global Variables start here */
var formTitleCount = 0, formDescripCount = 0, textBoxNameCount = 0, textBoxEmailCount = 0, textBoxPhoneCount = 0,
    textBoxMessCount = 0, dropdownCount = 0, textBoxDateCount = 0, imgUplodCount = 0, dbleTextBoxLay = 0, fieldrowindex = 0; ReBindFieldIndex = 0,
        custtextBoxNameCount = 0, opttextBoxNameCount = 0, FieldPriority = 0;
/*Global Variables End here */

var appentMainBodyStyle;
AppendMainBodyCss = cssObjectsFormBody => {
    var MainBodyClass = `
		.simpleForm{
				width:${(cssObjectsFormBody.width != null && cssObjectsFormBody.width != "" && cssObjectsFormBody.width.length > 0 ? cssObjectsFormBody.width + "px" : null)};height:${(cssObjectsFormBody.height != null && cssObjectsFormBody.height != "" && cssObjectsFormBody.height.length > 0 ? cssObjectsFormBody.height + "px" : null)};
				background-color:${cssObjectsFormBody.bodyBgCol};
				border-style:${cssObjectsFormBody.bdyBrdStyleAll}; border-width: ${(cssObjectsFormBody.bdyBrdSizeAll != null && cssObjectsFormBody.bdyBrdSizeAll != "" && cssObjectsFormBody.bdyBrdSizeAll.length > 0 ? cssObjectsFormBody.bdyBrdSizeAll + "px" : null)};
				border-color:${cssObjectsFormBody.bdyBrdColAll};border-top-style: ${cssObjectsFormBody.bdyBrdStyleTop};
				border-top-width:${(cssObjectsFormBody.bdyBrdWidthTop != null && cssObjectsFormBody.bdyBrdWidthTop != "" && cssObjectsFormBody.bdyBrdWidthTop.length > 0 ? cssObjectsFormBody.bdyBrdWidthTop + "px" : null)};border-top-color:${cssObjectsFormBody.bdyBrdColTop};
				border-right-style:${cssObjectsFormBody.bdyBrdStyleRight}; border-right-width:${(cssObjectsFormBody.bdyBrdWidthRight != null && cssObjectsFormBody.bdyBrdWidthRight != "" && cssObjectsFormBody.bdyBrdWidthRight.length > 0 ? cssObjectsFormBody.bdyBrdWidthRight + "px" : null)};
				border-right-color:${cssObjectsFormBody.bdyBrdColRight}; border-bottom-style:${cssObjectsFormBody.bdyBrdStyleBottm};
				border-bottom-width:${(cssObjectsFormBody.bdyBrdWidthBottm != null && cssObjectsFormBody.bdyBrdWidthBottm != "" && cssObjectsFormBody.bdyBrdWidthBottm.length > 0 ? cssObjectsFormBody.bdyBrdWidthBottm + "px" : null)}; border-bottom-color:${cssObjectsFormBody.bdyBrdColBottm};
				border-left-style:${cssObjectsFormBody.bdyBrdStyleLft}; border-left-width:${(cssObjectsFormBody.bdyBrdWidthLft != null && cssObjectsFormBody.bdyBrdWidthLft != "" && cssObjectsFormBody.bdyBrdWidthLft.length > 0 ? cssObjectsFormBody.bdyBrdWidthLft + "px" : null)};
				border-left-color:${cssObjectsFormBody.bdyBrdColLft}; padding:${(cssObjectsFormBody.bdyPaddAll != null && cssObjectsFormBody.bdyPaddAll != "" && cssObjectsFormBody.bdyPaddAll.length > 0 ? cssObjectsFormBody.bdyPaddAll + "px" : null)};
				padding-top:${(cssObjectsFormBody.bdyPaddTop != null && cssObjectsFormBody.bdyPaddTop != "" && cssObjectsFormBody.bdyPaddTop.length > 0 ? cssObjectsFormBody.bdyPaddTop + "px" : null)};
				padding-right:${(cssObjectsFormBody.bdyPaddRit != null && cssObjectsFormBody.bdyPaddRit != "" && cssObjectsFormBody.bdyPaddRit.length > 0 ? cssObjectsFormBody.bdyPaddRit + "px" : null)}; padding-bottom:${(cssObjectsFormBody.bdyPaddBottm != null && cssObjectsFormBody.bdyPaddBottm != "" && cssObjectsFormBody.bdyPaddBottm.length > 0 ? cssObjectsFormBody.bdyPaddBottm + "px" : null)};
				padding-left:${(cssObjectsFormBody.bdyPaddLft != null && cssObjectsFormBody.bdyPaddLft != "" && cssObjectsFormBody.bdyPaddLft.length > 0 ? cssObjectsFormBody.bdyPaddLft + "px" : null)};border-radius:${(cssObjectsFormBody.bdyBrdradiAll != null && cssObjectsFormBody.bdyBrdradiAll != "" && cssObjectsFormBody.bdyBrdradiAll.length > 0 ? cssObjectsFormBody.bdyBrdradiAll + "px" : null)};
				border-top-left-radius:${(cssObjectsFormBody.bdyBrdraditopleft != null && cssObjectsFormBody.bdyBrdraditopleft != "" && cssObjectsFormBody.bdyBrdraditopleft.length > 0 ? cssObjectsFormBody.bdyBrdraditopleft + "px" : null)};border-top-right-radius:${(cssObjectsFormBody.bdyBrdraditopright != null && cssObjectsFormBody.bdyBrdraditopright != "" && cssObjectsFormBody.bdyBrdraditopright.length > 0 ? cssObjectsFormBody.bdyBrdraditopright + "px" : null)};
				border-bottom-left-radius:${(cssObjectsFormBody.bdyBrdradibttmleft != null && cssObjectsFormBody.bdyBrdradibttmleft != "" && cssObjectsFormBody.bdyBrdradibttmleft.length > 0 ? cssObjectsFormBody.bdyBrdradibttmleft + "px" : null)};border-bottom-right-radius:${(cssObjectsFormBody.bdyBrdradibttmright != null && cssObjectsFormBody.bdyBrdradibttmright != "" && cssObjectsFormBody.bdyBrdradibttmright.length > 0 ? cssObjectsFormBody.bdyBrdradibttmright + "px" : null)};
				}
	`;

    appentMainBodyStyle = `<style id="ui_MainBodyCss">${MainBodyClass}</style>`;
    $("#ui_MainBodyCss").remove();
    $('head').append(appentMainBodyStyle);
}

var appentTitleStyle;
AppendTitleCss = cssObjectsFormBody => {
    var TitleClass = `
	.headTitOne{
				font-family:${cssObjectsFormBody.frmTitFontFamily}; font-size:${(cssObjectsFormBody.frmtTitFontSiz != null && cssObjectsFormBody.frmtTitFontSiz != "" && cssObjectsFormBody.frmtTitFontSiz.length > 0 ? cssObjectsFormBody.frmtTitFontSiz + "px" : null)};
				color:${cssObjectsFormBody.frmTitFontCol}; text-align:${cssObjectsFormBody.frmTitAlignType};
				font-weight:${cssObjectsFormBody.frmTitFontStroke};font-style:${cssObjectsFormBody.frmTitFontStyle};
				text-transform:${cssObjectsFormBody.frmTitTextCapital};margin:${(cssObjectsFormBody.frmtitFontMargin != null && cssObjectsFormBody.frmtitFontMargin != "" && cssObjectsFormBody.frmtitFontMargin.length > 0 ? cssObjectsFormBody.frmtitFontMargin + "px" : null)};
				margin-top:${(cssObjectsFormBody.frmtitFontMarginTop != null && cssObjectsFormBody.frmtitFontMarginTop != "" && cssObjectsFormBody.frmtitFontMarginTop.length > 0 ? cssObjectsFormBody.frmtitFontMarginTop + "px" : null)}; margin-right:${(cssObjectsFormBody.frmtitFontMarginRight != null && cssObjectsFormBody.frmtitFontMarginRight != "" && cssObjectsFormBody.frmtitFontMarginRight.length > 0 ? cssObjectsFormBody.frmtitFontMarginRight + "px" : null)};
				margin-bottom:${(cssObjectsFormBody.frmtitFontMarginBttm != null && cssObjectsFormBody.frmtitFontMarginBttm != "" && cssObjectsFormBody.frmtitFontMarginBttm.length > 0 ? cssObjectsFormBody.frmtitFontMarginBttm + "px" : null)}; margin-left:${(cssObjectsFormBody.frmtitFontMarginLeft != null && cssObjectsFormBody.frmtitFontMarginLeft != "" && cssObjectsFormBody.frmtitFontMarginLeft.length > 0 ? cssObjectsFormBody.frmtitFontMarginLeft + "px" : null)};
				padding:${(cssObjectsFormBody.frmTitFontPaddAll != null && cssObjectsFormBody.frmTitFontPaddAll != "" && cssObjectsFormBody.frmTitFontPaddAll.length > 0 ? cssObjectsFormBody.frmTitFontPaddAll + "px" : null)};padding-top:${(cssObjectsFormBody.frmTitFontPaddTop != null && cssObjectsFormBody.frmTitFontPaddTop != "" && cssObjectsFormBody.frmTitFontPaddTop.length > 0 ? cssObjectsFormBody.frmTitFontPaddTop + "px" : null)};
				padding-right:${(cssObjectsFormBody.frmTitFontPaddRight != null && cssObjectsFormBody.frmTitFontPaddRight != "" && cssObjectsFormBody.frmTitFontPaddRight.length > 0 ? cssObjectsFormBody.frmTitFontPaddRight + "px" : null)};padding-bottom:${(cssObjectsFormBody.frmTitFontPaddBttm != null && cssObjectsFormBody.frmTitFontPaddBttm != "" && cssObjectsFormBody.frmTitFontPaddBttm.length > 0 ? cssObjectsFormBody.frmTitFontPaddBttm + "px" : null)};
				padding-left:${(cssObjectsFormBody.frmTitFontPaddLeft != null && cssObjectsFormBody.frmTitFontPaddLeft != "" && cssObjectsFormBody.frmTitFontPaddLeft.length > 0 ? cssObjectsFormBody.frmTitFontPaddLeft + "px" : null)};background-color:${cssObjectsFormBody.frmTitBgcolor};
				border-radius:${(cssObjectsFormBody.frmTitRadiusAll != null && cssObjectsFormBody.frmTitRadiusAll != "" && cssObjectsFormBody.frmTitRadiusAll.length > 0 ? cssObjectsFormBody.frmTitRadiusAll + "px" : null)};border-top-left-radius:${(cssObjectsFormBody.frmTitRadiusTopLeft != null && cssObjectsFormBody.frmTitRadiusTopLeft != "" && cssObjectsFormBody.frmTitRadiusTopLeft.length > 0 ? cssObjectsFormBody.frmTitRadiusTopLeft + "px" : null)};
				border-top-right-radius:${(cssObjectsFormBody.frmTitRadiusTopRight != null && cssObjectsFormBody.frmTitRadiusTopRight != "" && cssObjectsFormBody.frmTitRadiusTopRight.length > 0 ? cssObjectsFormBody.frmTitRadiusTopRight + "px" : null)}; border-bottom-left-radius:${(cssObjectsFormBody.frmTitRadiusBttmLeft != null && cssObjectsFormBody.frmTitRadiusBttmLeft != "" && cssObjectsFormBody.frmTitRadiusBttmLeft.length > 0 ? cssObjectsFormBody.frmTitRadiusBttmLeft + "px" : null)};
				border-bottom-right-radius:${(cssObjectsFormBody.frmTitRadiusBttmRight != null && cssObjectsFormBody.frmTitRadiusBttmRight != "" && cssObjectsFormBody.frmTitRadiusBttmRight.length > 0 ? cssObjectsFormBody.frmTitRadiusBttmRight + "px" : null)};border-style:${cssObjectsFormBody.frmTitBrdStylAll};
				border-width:${(cssObjectsFormBody.frmTitBrdWidAll != null && cssObjectsFormBody.frmTitBrdWidAll != "" && cssObjectsFormBody.frmTitBrdWidAll.length > 0 ? cssObjectsFormBody.frmTitBrdWidAll + "px" : null)};border-color:${cssObjectsFormBody.frmTitBrdColAll};
				border-top-style:${cssObjectsFormBody.frmTitBrdStylTop}; border-top-width:${(cssObjectsFormBody.frmTitBrdWidTop != null && cssObjectsFormBody.frmTitBrdWidTop != "" && cssObjectsFormBody.frmTitBrdWidTop.length > 0 ? cssObjectsFormBody.frmTitBrdWidTop + "px" : null)};
				border-top-color:${cssObjectsFormBody.frmTitBrdColTop}; border-right-style:${cssObjectsFormBody.frmTitBrdStylRight};
				border-right-width:${(cssObjectsFormBody.frmTitBrdWidRight != null && cssObjectsFormBody.frmTitBrdWidRight != "" && cssObjectsFormBody.frmTitBrdWidRight.length > 0 ? cssObjectsFormBody.frmTitBrdWidRight + "px" : null)}; border-right-color:${cssObjectsFormBody.frmTitBrdColRight};
				border-bottom-style:${cssObjectsFormBody.frmTitBrdStyleBttm}; border-bottom-width:${(cssObjectsFormBody.frmTitBrdWidBttm != null && cssObjectsFormBody.frmTitBrdWidBttm != "" && cssObjectsFormBody.frmTitBrdWidBttm.length > 0 ? cssObjectsFormBody.frmTitBrdWidBttm + "px" : null)};
				border-bottom-color:${cssObjectsFormBody.frmTitBrdColBttm}; border-left-style:${cssObjectsFormBody.frmTitBrdStylLeft};
				border-left-width:${(cssObjectsFormBody.frmTitBrdWidLeft != null && cssObjectsFormBody.frmTitBrdWidLeft != "" && cssObjectsFormBody.frmTitBrdWidLeft.length > 0 ? cssObjectsFormBody.frmTitBrdWidLeft + "px" : null)}; border-left-color:${cssObjectsFormBody.frmTitBrdColLeft};}
	`;

    appentTitleStyle = `<style id="ui_TitleCss">${TitleClass}</style>`;
    $("#ui_TitleCss").remove();
    $('head').append(appentTitleStyle);
}

var appentDescriptionStyle;
AppendDescriptionCss = cssObjectsFormBody => {
    var DescriptionClass = `

		.formDescripTxt{
						text-align:${cssObjectsFormBody.frmDesTxtAlign}; font-family:${cssObjectsFormBody.frmDesFont};font-size:${(cssObjectsFormBody.frmDesFontSize != null && cssObjectsFormBody.frmDesFontSize != "" && cssObjectsFormBody.frmDesFontSize.length > 0 ? cssObjectsFormBody.frmDesFontSize + "px" : null)};
						color:${cssObjectsFormBody.frmDesFontCol}; font-weight:${cssObjectsFormBody.frmDesFontStroke}; font-style:${cssObjectsFormBody.frmDesFontStyle};
						text-transform:${cssObjectsFormBody.frmDesFontCaps}; background-color:${cssObjectsFormBody.frmDesTxtBgCol};
						padding:${(cssObjectsFormBody.frmDesFontPaddAll != null && cssObjectsFormBody.frmDesFontPaddAll != "" && cssObjectsFormBody.frmDesFontPaddAll.length > 0 ? cssObjectsFormBody.frmDesFontPaddAll + "px" : null)};padding-top:${(cssObjectsFormBody.frmDesFontPaddTop != null && cssObjectsFormBody.frmDesFontPaddTop != "" && cssObjectsFormBody.frmDesFontPaddTop.length > 0 ? cssObjectsFormBody.frmDesFontPaddTop + "px" : null)};
						padding-right:${(cssObjectsFormBody.frmDesFontPaddRight != null && cssObjectsFormBody.frmDesFontPaddRight != "" && cssObjectsFormBody.frmDesFontPaddRight.length > 0 ? cssObjectsFormBody.frmDesFontPaddRight + "px" : null)};padding-bottom:${(cssObjectsFormBody.frmDesFontPaddBttm != null && cssObjectsFormBody.frmDesFontPaddBttm != "" && cssObjectsFormBody.frmDesFontPaddBttm.length > 0 ? cssObjectsFormBody.frmDesFontPaddBttm + "px" : null)};
						padding-left:${(cssObjectsFormBody.frmDesFontPaddLeft != null && cssObjectsFormBody.frmDesFontPaddLeft != "" && cssObjectsFormBody.frmDesFontPaddLeft.length > 0 ? cssObjectsFormBody.frmDesFontPaddLeft + "px" : null)}; border-radius:${(cssObjectsFormBody.frmDesRadiusAll != null && cssObjectsFormBody.frmDesRadiusAll != "" && cssObjectsFormBody.frmDesRadiusAll.length > 0 ? cssObjectsFormBody.frmDesRadiusAll + "px" : null)};
						border-top-left-radius:${(cssObjectsFormBody.frmDesRadiusTopLeft != null && cssObjectsFormBody.frmDesRadiusTopLeft != "" && cssObjectsFormBody.frmDesRadiusTopLeft.length > 0 ? cssObjectsFormBody.frmDesRadiusTopLeft + "px" : null)};border-top-right-radius:${(cssObjectsFormBody.frmDesRadiusTopRight != null && cssObjectsFormBody.frmDesRadiusTopRight != "" && cssObjectsFormBody.frmDesRadiusTopRight.length > 0 ? cssObjectsFormBody.frmDesRadiusTopRight + "px" : null)};
						border-bottom-left-radius:${(cssObjectsFormBody.frmDesRadiusBttmLeft != null && cssObjectsFormBody.frmDesRadiusBttmLeft != "" && cssObjectsFormBody.frmDesRadiusBttmLeft.length > 0 ? cssObjectsFormBody.frmDesRadiusBttmLeft + "px" : null)};border-bottom-right-radius:${(cssObjectsFormBody.frmDesRadiusBttmRight != null && cssObjectsFormBody.frmDesRadiusBttmRight != "" && cssObjectsFormBody.frmDesRadiusBttmRight.length > 0 ? cssObjectsFormBody.frmDesRadiusBttmRight + "px" : null)};
						border-style:${cssObjectsFormBody.frmDesBrdStylAll}; border-width:${(cssObjectsFormBody.frmDesBrdWidAll != null && cssObjectsFormBody.frmDesBrdWidAll != "" && cssObjectsFormBody.frmDesBrdWidAll.length > 0 ? cssObjectsFormBody.frmDesBrdWidAll + "px" : null)};
						border-color:${cssObjectsFormBody.frmDesBrdColAll}; border-right-style:${cssObjectsFormBody.frmDesBrdStylRight};
						border-right-width:${(cssObjectsFormBody.frmDesBrdWidRight != null && cssObjectsFormBody.frmDesBrdWidRight != "" && cssObjectsFormBody.frmDesBrdWidRight.length > 0 ? cssObjectsFormBody.frmDesBrdWidRight + "px" : null)};border-right-color:${cssObjectsFormBody.frmDesBrdColRight};
						border-top-style:${cssObjectsFormBody.frmDesBrdStylTop}; border-top-width:${(cssObjectsFormBody.frmDesBrdWidTop != null && cssObjectsFormBody.frmDesBrdWidTop != "" && cssObjectsFormBody.frmDesBrdWidTop.length > 0 ? cssObjectsFormBody.frmDesBrdWidTop + "px" : null)};
						border-top-color:${cssObjectsFormBody.frmDesBrdColTop};border-bottom-style:${cssObjectsFormBody.frmDesBrdStyleBttm};
						border-bottom-width:${(cssObjectsFormBody.frmDesBrdWidBttm != null && cssObjectsFormBody.frmDesBrdWidBttm != "" && cssObjectsFormBody.frmDesBrdWidBttm.length > 0 ? cssObjectsFormBody.frmDesBrdWidBttm + "px" : null)};border-bottom-color:${cssObjectsFormBody.frmDesBrdColBttm};
						border-left-style:${cssObjectsFormBody.frmDesBrdStylLeft};border-left-width:${(cssObjectsFormBody.frmDesBrdWidLeft != null && cssObjectsFormBody.frmDesBrdWidLeft != "" && cssObjectsFormBody.frmDesBrdWidLeft.length > 0 ? cssObjectsFormBody.frmDesBrdWidLeft + "px" : null)};
						border-left-color:${cssObjectsFormBody.frmDesBrdColLeft};
					   }

		 .formDescript{
					    margin:${(cssObjectsFormBody.frmDesFontMarg != null && cssObjectsFormBody.frmDesFontMarg != "" && cssObjectsFormBody.frmDesFontMarg.length > 0 ? cssObjectsFormBody.frmDesFontMarg + "px" : null)}; margin-top:${(cssObjectsFormBody.frmDesFontMargTop != null && cssObjectsFormBody.frmDesFontMargTop != "" && cssObjectsFormBody.frmDesFontMargTop.length > 0 ? cssObjectsFormBody.frmDesFontMargTop + "px" : null)};
						margin-right:${(cssObjectsFormBody.frmDesFontMargRighted != null && cssObjectsFormBody.frmDesFontMargRighted != "" && cssObjectsFormBody.frmDesFontMargRighted.length > 0 ? cssObjectsFormBody.frmDesFontMargRighted + "px" : null)}; margin-bottom:${(cssObjectsFormBody.frmDesFontMargBttm != null && cssObjectsFormBody.frmDesFontMargBttm != "" && cssObjectsFormBody.frmDesFontMargBttm.length > 0 ? cssObjectsFormBody.frmDesFontMargBttm + "px" : null)};
						margin-left:${(cssObjectsFormBody.frmDesFontMargLeft != null && cssObjectsFormBody.frmDesFontMargLeft != "" && cssObjectsFormBody.frmDesFontMargLeft.length > 0 ? cssObjectsFormBody.frmDesFontMargLeft + "px" : null)};
					  }
	`;

    appentDescriptionStyle = `<style id="ui_DescriptionCss">${DescriptionClass}</style>`;
    $("#ui_DescriptionCss").remove();
    $('head').append(appentDescriptionStyle);
}

var appentLabelStyle;
AppendLabelCss = cssObjectsFormBody => {
    var LabelClass = `
	.labelStyle, .labelWrap{
				justify-content: ${cssObjectsFormBody.lblTextAlignLeft}; justify-content: ${cssObjectsFormBody.lblTextAlignCenter};
				justify-content: ${cssObjectsFormBody.lblTextAlignRight};
				padding: ${(cssObjectsFormBody.lblTextPaddAll != null && cssObjectsFormBody.lblTextPaddAll != "" && cssObjectsFormBody.lblTextPaddAll.length > 0 ? cssObjectsFormBody.lblTextPaddAll + "px" : null)};
				padding-top: ${(cssObjectsFormBody.lblTextPaddTop != null && cssObjectsFormBody.lblTextPaddTop != "" && cssObjectsFormBody.lblTextPaddTop.length > 0 ? cssObjectsFormBody.lblTextPaddTop + "px" : null)};
				padding-right: ${(cssObjectsFormBody.lblTextPaddRight != null && cssObjectsFormBody.lblTextPaddRight != "" && cssObjectsFormBody.lblTextPaddRight.length > 0 ? cssObjectsFormBody.lblTextPaddRight + "px" : null)};
				padding-bottom: ${(cssObjectsFormBody.lblTextPaddBottom != null && cssObjectsFormBody.lblTextPaddBottom != "" && cssObjectsFormBody.lblTextPaddBottom.length > 0 ? cssObjectsFormBody.lblTextPaddBottom + "px" : null)};
				padding-left: ${(cssObjectsFormBody.lblTextPaddLeft != null && cssObjectsFormBody.lblTextPaddLeft != "" && cssObjectsFormBody.lblTextPaddLeft.length > 0 ? cssObjectsFormBody.lblTextPaddLeft + "px" : null)};
				font-family: ${cssObjectsFormBody.lblTextFontFamily}; font-size: ${(cssObjectsFormBody.lblTextFontSize != null && cssObjectsFormBody.lblTextFontSize != "" && cssObjectsFormBody.lblTextFontSize.length > 0 ? cssObjectsFormBody.lblTextFontSize + "px" : null)};
				color: ${cssObjectsFormBody.lblTextFontColor};
				font-weight: ${cssObjectsFormBody.lblTextFontWeight + " !important"}; font-style: ${cssObjectsFormBody.lblTextFontStyle};
				text-transform: ${cssObjectsFormBody.lblTextFontCaps};
			}

    .labelStyle{
				height: ${(cssObjectsFormBody.textBoxHeight != null && cssObjectsFormBody.textBoxHeight != "" && cssObjectsFormBody.textBoxHeight.length > 0 ? cssObjectsFormBody.textBoxHeight + "px" : null) + "px"};
			}
	`;

    appentLabelStyle = `<style id="ui_LabelCss">${LabelClass}</style>`;
    $("#ui_LabelCss").remove();
    $('head').append(appentLabelStyle);
}

var appentTextboxDropStyle;
AppendTextboxDropCss = cssObjectsFormBody => {
    var TextboxDropClass = `
	  .input-form-control{
				font-family: ${cssObjectsFormBody.textBoxFontFamily}; font - size: ${(cssObjectsFormBody.textBoxFontSize != null && cssObjectsFormBody.textBoxFontSize != "" && cssObjectsFormBody.textBoxFontSize.length > 0 ? cssObjectsFormBody.textBoxFontSize + "px" : null)};
				color: ${cssObjectsFormBody.textBoxFontColor};font - weight: ${cssObjectsFormBody.textBoxFontWeight};
				font-style: ${cssObjectsFormBody.textBoxFontStyle}; text-indent: ${(cssObjectsFormBody.textBoxFontIndent != null && cssObjectsFormBody.textBoxFontIndent != "" && cssObjectsFormBody.textBoxFontIndent.length > 0 ? cssObjectsFormBody.textBoxFontIndent + "px" : null)};
				height: ${(cssObjectsFormBody.textBoxHeight != null && cssObjectsFormBody.textBoxHeight != "" && cssObjectsFormBody.textBoxHeight.length > 0 ? cssObjectsFormBody.textBoxHeight + "px" : null)}; background-color: ${cssObjectsFormBody.textBoxBgColor};
				border: ${cssObjectsFormBody.textBoxAllBrd};
				border-width: ${(cssObjectsFormBody.textBoxAllBrdsize != null && cssObjectsFormBody.textBoxAllBrdsize != "" && cssObjectsFormBody.textBoxAllBrdsize.length > 0 ? cssObjectsFormBody.textBoxAllBrdsize + "px" : null)}; border-color: ${cssObjectsFormBody.textBoxAllBrdcol};
				border-top-style: ${cssObjectsFormBody.textBoxBrdTop}; border-top-width: ${(cssObjectsFormBody.textBoxBrdTopSize != null && cssObjectsFormBody.textBoxBrdTopSize != "" && cssObjectsFormBody.textBoxBrdTopSize.length > 0 ? cssObjectsFormBody.textBoxBrdTopSize + "px" : null)};
				border-top-color: ${cssObjectsFormBody.textBoxBrdTopCol}; border-right-style: ${cssObjectsFormBody.textBoxBrdRight};
				border-right-width: ${(cssObjectsFormBody.textBoxBrdRightSize != null && cssObjectsFormBody.textBoxBrdRightSize != "" && cssObjectsFormBody.textBoxBrdRightSize.length > 0 ? cssObjectsFormBody.textBoxBrdRightSize + "px" : null)}; border-right-color: ${cssObjectsFormBody.textBoxBrdRightCol};
				border-bottom-style: ${cssObjectsFormBody.textBoxBrdBttm}; border-bottom-width: ${(cssObjectsFormBody.textBoxBrdBttmSize != null && cssObjectsFormBody.textBoxBrdBttmSize != "" && cssObjectsFormBody.textBoxBrdBttmSize.length > 0 ? cssObjectsFormBody.textBoxBrdBttmSize + "px" : null)};
				border-bottom-color: ${cssObjectsFormBody.textBoxBrdBttmCol}; border-left-style: ${cssObjectsFormBody.textBoxBrdleft};
				border-left-width: ${(cssObjectsFormBody.textBoxBrdLeftSize != null && cssObjectsFormBody.textBoxBrdLeftSize != "" && cssObjectsFormBody.textBoxBrdLeftSize.length > 0 ? cssObjectsFormBody.textBoxBrdLeftSize + "px" : null)}; border-left-color: ${cssObjectsFormBody.textBoxBrdLeftCol};
				justify-content: ${cssObjectsFormBody.btnAlignLeft}; border - radius: ${(cssObjectsFormBody.textBoxBrdRadiusAll != null && cssObjectsFormBody.textBoxBrdRadiusAll != "" && cssObjectsFormBody.textBoxBrdRadiusAll.length > 0 ? cssObjectsFormBody.textBoxBrdRadiusAll + "px" : null)};
				border-top-left-radius: ${(cssObjectsFormBody.textBoxBrdRadiusTopLeft != null && cssObjectsFormBody.textBoxBrdRadiusTopLeft != "" && cssObjectsFormBody.textBoxBrdRadiusTopLeft.length > 0 ? cssObjectsFormBody.textBoxBrdRadiusTopLeft + "px" : null)}; border-top-right-radius: ${(cssObjectsFormBody.textBoxBrdRadiusTopRight != null && cssObjectsFormBody.textBoxBrdRadiusTopRight != "" && cssObjectsFormBody.textBoxBrdRadiusTopRight.length > 0 ? cssObjectsFormBody.textBoxBrdRadiusTopRight + "px" : null)};
				border-bottom-left-radius: ${(cssObjectsFormBody.textBoxBrdRadiusBttmLeft != null && cssObjectsFormBody.textBoxBrdRadiusBttmLeft != "" && cssObjectsFormBody.textBoxBrdRadiusBttmLeft.length > 0 ? cssObjectsFormBody.textBoxBrdRadiusBttmLeft + "px" : null)}; border-bottom-right-radius: ${(cssObjectsFormBody.textBoxBrdRadiusBttmRight != null && cssObjectsFormBody.textBoxBrdRadiusBttmRight != "" && cssObjectsFormBody.textBoxBrdRadiusBttmRight.length > 0 ? cssObjectsFormBody.textBoxBrdRadiusBttmRight + "px" : null)};
			}
	`;

    appentTextboxDropStyle = `<style id="ui_TextboxDropCss">${TextboxDropClass}</style>`;
    $("#ui_TextboxDropCss").remove();
    $('head').append(appentTextboxDropStyle);
}

var appentButtonStyle;
AppendButtonCss = cssObjectsFormBody => {
    var ButtonCssClass = `
				.parSubBtn{
							justify-content:${cssObjectsFormBody.btnAlignCenter};
							justify-content:${cssObjectsFormBody.btnAlignRight};
						  }

				.childSubBtn{
							width:${(cssObjectsFormBody.cssObjectsFormBody != null && cssObjectsFormBody.cssObjectsFormBody != "" && cssObjectsFormBody.cssObjectsFormBody.length > 0 ? cssObjectsFormBody.cssObjectsFormBody + "px !important" : null)};
							margin:${(subBtnMarginAll.subBtnMarginAll != null && subBtnMarginAll.subBtnMarginAll != "" && subBtnMarginAll.subBtnMarginAll.length > 0 ? subBtnMarginAll.subBtnMarginAll + "px !important" : null)};
							margin-top:${(subBtnMarginTop.subBtnMarginTop != null && subBtnMarginTop.subBtnMarginTop != "" && subBtnMarginTop.subBtnMarginTop.length > 0 ? subBtnMarginTop.subBtnMarginTop + "px !important" : null)};
							margin-bottom:${(subBtnMarginBttm.subBtnMarginBttm != null && subBtnMarginBttm.subBtnMarginBttm != "" && subBtnMarginBttm.subBtnMarginBttm.length > 0 ? subBtnMarginBttm.subBtnMarginBttm + "px !important" : null)};
							margin-left:${(subBtnMarginLeft.subBtnMarginLeft != null && subBtnMarginLeft.subBtnMarginLeft != "" && subBtnMarginLeft.subBtnMarginLeft.length > 0 ? subBtnMarginLeft.subBtnMarginLeft + "px !important" : null)};
							margin-right:${(subBtnMarginRight.subBtnMarginRight != null && subBtnMarginRight.subBtnMarginRight != "" && subBtnMarginRight.subBtnMarginRight.length > 0 ? subBtnMarginRight.subBtnMarginRight + "px !important" : null)};
							}

				.btn-style{
							width:${(cssObjectsFormBody.btnWidth != null && cssObjectsFormBody.btnWidth != "" && cssObjectsFormBody.btnWidth.length > 0 ? cssObjectsFormBody.btnWidth + "px !important" : null)}; height:${(cssObjectsFormBody.subBtnHeight != null && cssObjectsFormBody.subBtnHeight != "" && cssObjectsFormBody.subBtnHeight.length > 0 ? cssObjectsFormBody.subBtnHeight + "px !important" : null)};
							background-color:${cssObjectsFormBody.subBtnBgCol}; font-family:${cssObjectsFormBody.subBtnFontFamily};
							font-size:${(cssObjectsFormBody.subBtnFontSize != null && cssObjectsFormBody.subBtnFontSize != "" && cssObjectsFormBody.subBtnFontSize.length > 0 ? cssObjectsFormBody.subBtnFontSize + "px !important" : null)};color:${cssObjectsFormBody.subBtnFontcol + "!important"};
							font-style:${cssObjectsFormBody.subBtnFontStyle}; font-weight:${cssObjectsFormBody.subBtnFontStroke};
							text-transform:${cssObjectsFormBody.subBtnTxtTransform};border-radius:${(cssObjectsFormBody.subBtnBorderRadius != null && cssObjectsFormBody.subBtnBorderRadius != "" && cssObjectsFormBody.subBtnBorderRadius.length > 0 ? cssObjectsFormBody.subBtnBorderRadius + "px !important" : null)};
							border-top-left-radius:${(cssObjectsFormBody.subBtnBorderRadiusTopLeft != null && cssObjectsFormBody.subBtnBorderRadiusTopLeft != "" && cssObjectsFormBody.subBtnBorderRadiusTopLeft.length > 0 ? cssObjectsFormBody.subBtnBorderRadiusTopLeft + "px !important" : null)};
							border-top-right-radius:${(cssObjectsFormBody.subBtnBorderRadiusTopRight != null && cssObjectsFormBody.subBtnBorderRadiusTopRight != "" && cssObjectsFormBody.subBtnBorderRadiusTopRight.length > 0 ? cssObjectsFormBody.subBtnBorderRadiusTopRight + "px !important" : null)};
							border-bottom-left-radius:${(cssObjectsFormBody.subBtnBorderRadiusbottomLeft != null && cssObjectsFormBody.subBtnBorderRadiusbottomLeft != "" && cssObjectsFormBody.subBtnBorderRadiusbottomLeft.length > 0 ? cssObjectsFormBody.subBtnBorderRadiusbottomLeft + "px !important" : null)};
							border-bottom-right-radius:${(cssObjectsFormBody.subBtnBorderRadiusbottomRight != null && cssObjectsFormBody.subBtnBorderRadiusbottomRight != "" && cssObjectsFormBody.subBtnBorderRadiusbottomRight.length > 0 ? cssObjectsFormBody.subBtnBorderRadiusbottomRight + "px !important" : null)};
							border-style:${cssObjectsFormBody.subBtnBorderAll};
							border-width:${(cssObjectsFormBody.subBtnBorderSizeAll != null && cssObjectsFormBody.subBtnBorderSizeAll != "" && cssObjectsFormBody.subBtnBorderSizeAll.length > 0 ? cssObjectsFormBody.subBtnBorderSizeAll + "px !important" : null)};
							border-color:${cssObjectsFormBody.subBtnBorderColAll}; border-top-style:${cssObjectsFormBody.subBtnBrdIndivTop};
							border-top-width:${(cssObjectsFormBody.subBtnBrdIndivTopSize != null && cssObjectsFormBody.subBtnBrdIndivTopSize != "" && cssObjectsFormBody.subBtnBrdIndivTopSize.length > 0 ? cssObjectsFormBody.subBtnBrdIndivTopSize + "px !important" : null)};
							border-top-color:${cssObjectsFormBody.subBtnBrdIndivTopCol};
							border-right-style:${cssObjectsFormBody.subBtnBrdIndivRit};
							border-right-width:${(cssObjectsFormBody.subBtnBrdIndivRitSize != null && cssObjectsFormBody.subBtnBrdIndivRitSize != "" && cssObjectsFormBody.subBtnBrdIndivRitSize.length > 0 ? cssObjectsFormBody.subBtnBrdIndivRitSize + "px !important" : null)};
							border-right-color:${cssObjectsFormBody.subBtnBrdIndivRitCol};border-bottom-style:${cssObjectsFormBody.subBtnBrdIndivBottom};
							border-bottom-width:${(cssObjectsFormBody.subBtnBrdIndivBttmSiz != null && cssObjectsFormBody.subBtnBrdIndivBttmSiz != "" && cssObjectsFormBody.subBtnBrdIndivBttmSiz.length > 0 ? cssObjectsFormBody.subBtnBrdIndivBttmSiz + "px !important" : null)};border-bottom-color:${cssObjectsFormBody.subBtnBrdIndivBttmCol};
							border-left-style:${cssObjectsFormBody.subBtnBrdIndivLeft};border-left-width:${(cssObjectsFormBody.subBtnBrdIndivLftSiz != null && cssObjectsFormBody.subBtnBrdIndivLftSiz != "" && cssObjectsFormBody.subBtnBrdIndivLftSiz.length > 0 ? cssObjectsFormBody.subBtnBrdIndivLftSiz + "px !important" : null)};
							border-left-color:${cssObjectsFormBody.subBtnBrdIndivLftCol};
						  }

				.btn-style:hover{
							background-color:${cssObjectsFormBody.subBtnBgHvCol};
							color:${cssObjectsFormBody.subBtnTxtHvrCol + "!important"};
							}
			`;

    appentButtonStyle = `<style id="ui_ButtonCss">${ButtonCssClass}</style>`;
    $("#ui_ButtonCss").remove();
    $('head').append(appentButtonStyle);
}

var appentCloseStyle;
AppendCloseCss = cssObjectsFormBody => {
    var CloseCssClass = `
			.clsWrap{
			width: ${(cssObjectsFormBody.frmClsWidth != null && cssObjectsFormBody.frmClsWidth != "" && cssObjectsFormBody.frmClsWidth.length > 0 ? cssObjectsFormBody.frmClsWidth + "px" : null)};
			height: ${(cssObjectsFormBody.frmClsWidth != null && cssObjectsFormBody.frmClsWidth != "" && cssObjectsFormBody.frmClsWidth.length > 0 ? cssObjectsFormBody.frmClsWidth + "px" : null)};
			font-size: ${(cssObjectsFormBody.frmClsFontSize != null && cssObjectsFormBody.frmClsFontSize != "" && cssObjectsFormBody.frmClsFontSize.length > 0 ? cssObjectsFormBody.frmClsFontSize + "px" : null)};
			color: ${cssObjectsFormBody.frmClsFontCol}; background-color: ${cssObjectsFormBody.frmClsBgCol}; border-style: ${cssObjectsFormBody.frmClsBrdStyle};
			border-width: ${(cssObjectsFormBody.frmClsBrdSiz != null && cssObjectsFormBody.frmClsBrdSiz != "" && cssObjectsFormBody.frmClsBrdSiz.length > 0 ? cssObjectsFormBody.frmClsBrdSiz + "px" : null)};
			border-color: ${cssObjectsFormBody.frmClsBrdCol};
			top: ${(cssObjectsFormBody.frmClsSpacTop != null && cssObjectsFormBody.frmClsSpacTop != "" && cssObjectsFormBody.frmClsSpacTop.length > 0 ? cssObjectsFormBody.frmClsSpacTop + "px" : null)};
			right: ${(cssObjectsFormBody.frmClsSpacRight != null && cssObjectsFormBody.frmClsSpacRight != "" && cssObjectsFormBody.frmClsSpacRight.length > 0 ? cssObjectsFormBody.frmClsSpacRight + "px" : null)};
			bottom: ${(cssObjectsFormBody.frmClsSpacBottom != null && cssObjectsFormBody.frmClsSpacBottom != "" && cssObjectsFormBody.frmClsSpacBottom.length > 0 ? cssObjectsFormBody.frmClsSpacBottom + "px" : null)};
			}

			.clsleftalign{
				left: ${(cssObjectsFormBody.frmClsSpacLeft != null && cssObjectsFormBody.frmClsSpacLeft != "" && cssObjectsFormBody.frmClsSpacLeft.length > 0 ? cssObjectsFormBody.frmClsSpacLeft + "px !important" : null)};
			}
			`;

    appentCloseStyle = `<style id="ui_CloseCss">${CloseCssClass}</style>`;
    $("#ui_CloseCss").remove();
    $('head').append(appentCloseStyle);
}

function AddFormFieldsArray(FieldName, FieldType, RowIndex, SubFields, Mandatory, FormId, Id, FormFieldIdentiferValue, ContactMappingField, FieldPriority, FieldDisplay) {

    var newField = new Object();
    newField.FormFieldIndex = RowIndex;
    newField.FormFieldIdentiferValue = FormFieldIdentiferValue;
    newField.Id = Id;
    newField.FormId = FormId;
    newField.Name = FieldName,
        newField.FieldType = FieldType;
    newField.SubFields = SubFields,
        newField.RelationField = 0;
    newField.Mandatory = Mandatory;
    newField.ValidationType = 0;
    newField.FormScore = "";
    newField.PhoneValidationType = "";
    newField.FieldDisplay = FieldDisplay;
    newField.CalendarDisplayType = 0;
    newField.ContactMappingField = ContactMappingField;
    newField.FieldPriority = FieldPriority;

    allFormFields.push(newField);

    if (FieldType > 0 && (FieldType == 8 || FieldType == 9 || FieldType == 10)) {
        CheckFieldDependencyForResponse(newField);
    }
}

function EditFormFieldsArray(FieldName, FieldType, SubFields, Mandatory, FormId, Id, EditIndex, FormFieldIdentiferValue, ContactMappingField, FieldPriority, FieldDisplay) {
    var fieldEditIndex = EditIndex;

    var newField = new Object();
    newField.FormFieldIdentiferValue = FormFieldIdentiferValue;
    newField.Id = Id;
    newField.FormId = FormId;
    newField.Name = FieldName,
        newField.FieldType = FieldType;
    newField.SubFields = SubFields,
        newField.RelationField = 0;
    newField.Mandatory = Mandatory;
    newField.ValidationType = 0;
    newField.FormScore = "";
    newField.PhoneValidationType = "";
    newField.FieldDisplay = FieldDisplay;
    newField.CalendarDisplayType = 0;
    newField.ContactMappingField = ContactMappingField;
    newField.FieldPriority = FieldPriority;

    if (fieldEditIndex > -1) {
        newField.Id = allFormFields[fieldEditIndex].Id;
        allFormFields[fieldEditIndex] = newField
    }
    else {
        allFormFields.push(newField);
    }

    if (FieldType > 0 && (FieldType == 8 || FieldType == 9 || FieldType == 10)) {
        CheckFieldDependencyForResponse(newField);
    }
}

function AddFormBindingFieldsArray(FieldName, FieldType, RowIndex, SubFields, Mandatory, FormId, Id, FormFieldIdentiferValue, ContactMappingField, FieldDisplay) {

    var newField = new Object();
    newField.FormFieldIndex = RowIndex;
    newField.FormFieldIdentiferValue = FormFieldIdentiferValue;
    newField.Id = Id;
    newField.FormId = FormId;
    newField.Name = FieldName,
        newField.FieldType = FieldType;
    newField.SubFields = SubFields,
        newField.RelationField = 0;
    newField.Mandatory = Mandatory;
    newField.ValidationType = 0;
    newField.FormScore = "";
    newField.PhoneValidationType = "";
    newField.FieldDisplay = FieldDisplay;
    newField.CalendarDisplayType = 0;
    newField.ContactMappingField = ContactMappingField;
    allBindingFormFields.push(newField);
}

function EditFormBindingFieldsArray(FieldName, FieldType, SubFields, Mandatory, FormId, Id, EditIndex, FormFieldIdentiferValue, ContactMappingField, FieldDisplay) {

    var fieldEditIndex = EditIndex;

    var newField = new Object();
    newField.FormFieldIdentiferValue = FormFieldIdentiferValue;
    newField.Id = Id;
    newField.FormId = FormId;
    newField.Name = FieldName,
        newField.FieldType = FieldType;
    newField.SubFields = SubFields,
        newField.RelationField = 0;
    newField.Mandatory = Mandatory;
    newField.ValidationType = 0;
    newField.FormScore = "";
    newField.PhoneValidationType = "";
    newField.FieldDisplay = FieldDisplay;
    newField.CalendarDisplayType = 0;
    newField.ContactMappingField = ContactMappingField;

    if (fieldEditIndex > -1) {
        newField.Id = allBindingFormFields[fieldEditIndex].Id;
        allBindingFormFields[fieldEditIndex] = newField
    }
    else {
        allBindingFormFields.push(newField);
    }
}

$("#formHead").click(function () {

    if (allBindingFormFields != null && allBindingFormFields.length > 0) {
        var sample = JSLINQ(allBindingFormFields).Where(function () { return (this.FieldType == 25); });

        if (sample.items[0] != undefined && (sample.items[0].FieldType == 25)) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.TitleAddError);
            return false;
        }
    }

    fieldrowindex++;

    if (cssObjectsFormBody.width == null) {
        errMessPop();
    }
    else {
        $(".frmdummyconts").remove();
        $("#appendFields").append('<div id="formTitle" FieldType="25" class="formTitle del editor"><h1 class="headTitOne" id="formHeadOne" contenteditable="true">We are here to help you !</h1><div class="delIconWrap"><span id="textTitEdit" data-tab="formTitTabCont" class="fa fa-paint-brush" title="Edit Design"></span><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="addTitleLink" titleaddlinkattr="formHeadOne" class="fas fa-pencil-alt" title="Edit Title"></span><span id="delParent" deleteattrvalue="formHeadOne" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');
    }

    AddFormBindingFieldsArray("We are here to help you !", 25, fieldrowindex, "", 1, 0, 0, "formHeadOne", "", "");
});

/* Add link to Title */

var getTitVal, selectWindowVal, formHeadOneCount, getTitId, getURLval, headContent;
$('.formWrapper').on('click', "#addTitleLink", function () {
    $(".formHeadPopupwrap").addClass("showPopup").removeClass("hidePopup");
    getTitVal = $(this).parent('.delIconWrap').prev('h1').text();
    getTitId = $(this).parent('.delIconWrap').prev('h1').attr('id');
    var appndTitleURL = $(this).parent('.delIconWrap').prev('h1').find('a').attr("href");
    var appndTitleTarget = $(this).parent('.delIconWrap').prev('h1').find('a').attr("target");
    var checkTitleURL = $("#" + getTitId).find("a").attr("href");
    $("#selTitleTxt").val(getTitVal);
    if (checkTitleURL == undefined || checkTitleURL == "") {
        $("#selectWindow").val("select");
    } else {
        $("#urlLink").val(appndTitleURL);
        $("#selectWindow").val(appndTitleTarget);
    }
});

$("#addURLlink").click(function () {
    var Titlevalue = "";
    $("#addUrlErr").html("");

    if ($("#selTitleTxt").val() != "" && $("#selTitleTxt").val() != null && $("#selTitleTxt").val().length > 0) {
        formDetails.Heading = Titlevalue = $.trim($('#selTitleTxt').val());
    }
    else {
        $("#addUrlErr").html("Please enter the form title value");
        $("#selTitleTxt").focus();
        return false;
    }

    $("#" + getTitId).html(Titlevalue);

    //this is for form binding fields
    var fieldIndexValue = -1;
    var FormId = 0;
    var Id = 0;
    var editvalueid = "formHeadOne";
    if (editvalueid != undefined) {
        var titlefielddetails = JSLINQ(allBindingFormFields).Where(function () {
            return (this.FormFieldIdentiferValue == editvalueid);
        });

        allBindingFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        if (titlefielddetails.items[0] != undefined && titlefielddetails.items[0].FormId != null && titlefielddetails.items[0].FormId != "" && titlefielddetails.items[0].FormId > 0) {
            FormId = titlefielddetails.items[0].FormId;
            Id = titlefielddetails.items[0].Id;
        }
        EditFormBindingFieldsArray(Titlevalue, 25, "", "", FormId, Id, fieldIndexValue, editvalueid, "", "");
    }

    $(this).parents('.formHeadPopupwrap').removeClass('showPopup');
});

selTextHref = (headTitleId, hrefURL) => {
    var headOneTextId = $("#" + headTitleId);
    var headOneTxtlen = headOneTextId.text().length;
    var startTitlTxt = $("#selTitleTxt")[0].selectionStart;
    var endTitlTxt = $("#selTitleTxt")[0].selectionEnd;
    var selectedHeadTxt = $("#selTitleTxt").val().substring(startTitlTxt, endTitlTxt);
    headContent = $("#selTitleTxt").val().replace(selectedHeadTxt, "<a href='" + hrefURL + "' target='" + selectWindowVal + "'>" + selectedHeadTxt + "</a>");
}

$("#selectWindow").change(function () {
    selectWindowVal = $("#selectWindow option:selected").val();
});

/* Add link to Title */

$("#formDescrip").click(function () {

    if (allBindingFormFields != null && allBindingFormFields.length > 0) {
        var sample = JSLINQ(allBindingFormFields).Where(function () { return (this.FieldType == 26); });

        if (sample.items[0] != undefined && (sample.items[0].FieldType == 26)) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.DescriptionAddError);
            return false;
        }
    }

    fieldrowindex++;

    if (cssObjectsFormBody.width == null) {
        errMessPop();
    }
    else {
        $(".frmdummyconts").remove();
        $("#appendFields").append('<div id="formDescript" FieldType="26" class="formDescriptwrp del"><h4 class="formDescripTxt" id="desCripText" contenteditable="true">Please leave your details</h4><div class="delIconWrap"><span id="frmDesEdit" data-tab="formDesTabCont" class="fa fa-paint-brush" title="Edit Design"></span><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="addDescripLink" adddesclinkattr="formDescript" class="fas fa-pencil-alt" title="Edit Description"></span><span id="delParent" deleteattrvalue="formDescript" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');
    }

    AddFormBindingFieldsArray("Please leave your details", 26, fieldrowindex, "", 1, 0, 0, "formDescript", "", "");
});

/* Add link to Description */
var getDesval, selectDesWindowVal, getDesCripId;
$('.formWrapper').on('click', '#addDescripLink', function () {
    $(".formDescPopupwrap").addClass("showPopup").removeClass("hidePopup");
    getDescVal = $(this).parent('.delIconWrap').prev('h4').text();
    getDescripval = $(this).parent('.delIconWrap').prev('h4').text();
    getDesCripId = $(this).parent('.delIconWrap').prev('h4').attr('id');
    let appndDescrpUrl = $(this).parent('.delIconWrap').prev('h4').find('a').attr("href");
    let appndDescrpTarget = $(this).parent('.delIconWrap').prev('h4').find('a').attr("target");
    let checkDescrpUrl = $("#" + getDesCripId).find('a').attr("target");
    $("#selDescTxt").val(getDescVal);

    if (checkDescrpUrl == undefined || checkDescrpUrl == "") {
        $("#selectWindowDes").val("select");
    }
    else {
        $("#desurlLink").val(appndDescrpUrl);
        $("#selectWindowDes").val(appndDescrpTarget);
    }
});

$("#addDesURLlink").click(function () {

    var Descvalue = "";
    $("#addDesUrlErr").html("");

    if ($("#selDescTxt").val() != "" && $("#selDescTxt").val() != null && $("#selDescTxt").val().length > 0) {
        formDetails.SubHeading = Descvalue = $.trim($('#selDescTxt').val());
    }
    else {
        $("#addDesUrlErr").html("Please enter the description value");
        $("#selDescTxt").focus();
        return false;
    }

    $("#" + getDesCripId).html(Descvalue);

    //let getDescripURL = $("#desurlLink").val();

    //if (getDescripURL == "") {
    //    $("#addDesUrlErr").html("Please Enter Valid URL");
    //    $("#desurlLink").focus();
    //    return false;
    //} else {
    //    $("#addDesUrlErr").html("");
    //}

    //selectDesWindowVal = $("#selectWindowDes option:selected").val();
    //if (selectDesWindowVal == "select") {
    //    $("#" + getDesCripId).html('<a href="' + getDescripURL + '" target="_parent">' + getDescripval + '</a>');
    //} else {
    //    $("#" + getDesCripId).html('<a href="' + getDescripURL + '" target="' + selectDesWindowVal + '">' + getDescripval + '</a>');
    //}
    //$("#desurlLink").val("");
    //$("#selectWindowDes").val("select");

    //this is for form binding fields
    var fieldIndexValue = -1;
    var FormId = 0;
    var Id = 0;
    var editvalueid = "formDescript";
    if (editvalueid != undefined) {
        var descfielddetails = JSLINQ(allBindingFormFields).Where(function () {
            return (this.FormFieldIdentiferValue == editvalueid);
        });

        allBindingFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        if (descfielddetails.items[0] != undefined && descfielddetails.items[0].FormId != null && descfielddetails.items[0].FormId != "" && descfielddetails.items[0].FormId > 0) {
            FormId = descfielddetails.items[0].FormId;
            Id = descfielddetails.items[0].Id;
        }
        EditFormBindingFieldsArray(Descvalue, 26, "", "", FormId, Id, fieldIndexValue, editvalueid, "", "");
    }

    $(this).parents('.formDescPopupwrap').removeClass('showPopup');
});

$("#selectWindowDes").change(function () {
    selectDesWindowVal = $("#selectWindowDes option:selected").val();
});

/* Add link to Description */

/*TextBox Start here  */
var textBoxlblNameCount, appendTextBox, addTextBoxNamePl, textBoxNameVal, textBoxlabelVal, textBoxlabelId, textBoxlblWrap, textBoxInptWrap, inputfieldrowindex;
$("#textBox").click(function () {

    //validation of textbox user name coz it is already added

    if (allBindingFormFields != null && allBindingFormFields.length > 0) {
        var sample = JSLINQ(allBindingFormFields).Where(function () { return (this.FieldType == 1); });

        if (sample.items[0] != undefined && (sample.items[0].FieldType <= 3)) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.FieldTypeError);
            return false;
        }
    }

    textBoxNameCount++;
    fieldrowindex++;
    FieldPriority++;

    if (cssObjectsFormBody.width == null) {
        errMessPop();
    }
    else if (textBoxNameCount == 0) {
        $(".frmdummyconts").remove();
        let textBoxNameNum = "textBoxName" + textBoxNameCount.toString();
        textBoxlblNameCount = "textBoxlblName" + textBoxNameCount.toString();
        textBoxlabelId = "Name" + textBoxNameCount.toString();
        textBoxlblWrap = "textBoxlblCont" + textBoxNameCount.toString();
        textBoxInptWrap = "textBoxInptCont" + textBoxNameCount.toString();
        $("#appendFields").append('<div id="' + textBoxNameNum + '" FieldType="1" class="inputWrap del"><div class="frmeditrow lblTxtBox"><div id="' + textBoxlblWrap + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + textBoxlblNameCount + '" contenteditable="true">Name</label></div><div id="' + textBoxInptWrap + '" class="form-col-8 form-mb-col-12 txtBox"><input type="text" FieldType="1" RowIndex="' + fieldrowindex + '" FieldPriority="' + FieldPriority + '" class="input-form-control" id="' + textBoxlabelId + '" name="Name" required = "required"  ></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editTextBox" editattrvalue="' + textBoxNameNum + '" class="fas fa-pencil-alt" title="Edit TextBox"></span><span id="delParent" deleteattrvalue="' + textBoxNameNum + '" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="textBoxlblCont"],[id^="textBoxInptCont"]').addClass('adCol-100');
        }

        if ($("#labelplaceholder").hasClass("lbl-active-bg")) {
            $('[id^="textBoxlblCont"]').addClass('lblAlignPlaceholder adCol-100');
            $('[id^="textBoxInptCont"]').addClass('adCol-100');
        }
    }
    else {
        $(".frmdummyconts").remove();
        let textBoxNameNum = "textBoxName" + textBoxNameCount.toString();
        textBoxlblNameCount = "textBoxlblName" + textBoxNameCount.toString();
        textBoxlabelId = "Name" + textBoxNameCount.toString();
        textBoxlblWrap = "textBoxlblCont" + textBoxNameCount.toString();
        textBoxInptWrap = "textBoxInptCont" + textBoxNameCount.toString();

        $("#appendFields").append('<div id="' + textBoxNameNum + '" FieldType="1" class="inputWrap del"><div class="frmeditrow lblTxtBox"><div id="' + textBoxlblWrap + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + textBoxlblNameCount + '" contenteditable="true">Name</label></div><div id="' + textBoxInptWrap + '"  class="form-col-8 form-mb-col-12 txtBox"><input type="text" FieldType="1" RowIndex="' + fieldrowindex + '" class="input-form-control" id="' + textBoxlabelId + '" name="Name" required = "required" ></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editTextBox" editattrvalue="' + textBoxNameNum + '" class="fas fa-pencil-alt" title="Edit TextBox"></span><span id="delParent" deleteattrvalue="' + textBoxNameNum + '" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="textBoxlblCont"],[id^="textBoxInptCont"]').addClass('adCol-100');
        }

        if ($("#labelplaceholder").hasClass("lbl-active-bg")) {
            $('[id^="textBoxlblCont"]').addClass('lblAlignPlaceholder adCol-100');
            $('[id^="textBoxInptCont"]').addClass('adCol-100');
        }

        AddFormFieldsArray("Name", 1, fieldrowindex, "", 1, 0, 0, textBoxNameNum, "", FieldPriority, "");
        AddFormBindingFieldsArray("Name", 1, fieldrowindex, "", 1, 0, 0, textBoxNameNum, "", "");
    }

    $(".formWrapper").on('keyup', "#" + textBoxlblNameCount, function () {
        appendTextBox = $(this).parent('.labelStyle').next('.txtBox').find('input').attr('id');
        textBoxlabelVal = $(this).text();
        addTextBoxNamePl = textBoxlabelVal.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase();

        if (appendTextBox == "") {
            $(this).parent('.labelStyle').next('.txtBox').find('input').attr({
                "id": addTextBoxNamePl,
                "name": addTextBoxNamePl
            });
        }
        $('#' + appendTextBox).attr({
            "id": addTextBoxNamePl,
            "name": addTextBoxNamePl
        });
    });
});

var textBoxlblNameText, getTextBoxName, textBoxPlacehldTxt, textBoxMandisChecked;
$('.formWrapper').on('click', '#editTextBox', function () {
    $(".formtextBoxPopupwrap").addClass("showPopup").removeClass("hidePopup");
    textBoxlblNameText = $(this).parent('.delIconWrap').prev('.lblTxtBox').children('.labelStyle').find('label').attr('id');
    appendTextBox = $(this).parent('.delIconWrap').prev('.lblTxtBox').children('.txtBox').find('input').attr('id');
    textBoxPlacehldTxt = $(this).parent('.delIconWrap').prev('.lblTxtBox').find('label').text();
    textBoxMandisChecked = $(this).parent('.delIconWrap').prev('.lblTxtBox').children('.txtBox').find('input').prop('required');
    $("#addTextBoxName").val(textBoxPlacehldTxt);

    $("#addTextBoxNameMappingField").select2().val(0).change();

    //this is for binding the mapping field
    FormUtil.CreatePlumb5FieldDropDown("addTextBoxNameMappingField");

    var editAttrvalueId = $(this).attr('editattrvalue');
    $("#addTextboxName").removeAttr("txtEditIdentifierValue").attr("txtEditIdentifierValue", editAttrvalueId);

    //Binding the mapping field
    var mappingfielddetails = JSLINQ(allFormFields).Where(function () {
        return (this.FormFieldIdentiferValue == editAttrvalueId);
    });

    if (mappingfielddetails.items[0] != undefined && mappingfielddetails.items[0].ContactMappingField != null && mappingfielddetails.items[0].ContactMappingField != "" && mappingfielddetails.items[0].ContactMappingField.length > 0) {
        //$("#addTextBoxNameMappingField").val(mappingfielddetails.items[0].ContactMappingField);
        $("#addTextBoxNameMappingField").select2().val(mappingfielddetails.items[0].ContactMappingField).change();
    }

    if (mappingfielddetails.items[0] != undefined && mappingfielddetails.items[0] != null && mappingfielddetails.items[0] != "") {
        if (mappingfielddetails.items[0].Mandatory == 1)
            $("#textBoxYes").prop("checked", true);
        else
            $("#textBoxNo").prop("checked", true);
    }
    else {
        if (textBoxMandisChecked == true)
            $("#textBoxYes").prop("checked", true);
        else
            $("#textBoxNo").prop("checked", true);
    }

    //fieldrowindex = $(this).parent('.delIconWrap').prev('.lblTxtBox').children('.txtBox').find('input').attr('RowIndex');
});

var textBoxMandCheck, textBoxlblKeyUp;
$("#addTextboxName").click(function () {
    textBoxNameVal = $("#addTextBoxName").val();
    addTextBoxNamePl = textBoxNameVal.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase();

    if (textBoxNameVal == "") {
        $("#addTextBoxErr").html(GlobalErrorList.CreateEmbeddedForm.EmptyValue);
        $("#addTextBoxName").focus();
        return false;
    }
    else {
        $("#addTextBoxErr").html("");
    }

    var editvalueid = "";

    if ($(this).attr("txtEditIdentifierValue") != undefined) {
        editvalueid = $(this).attr("txtEditIdentifierValue");
    }

    var MappingField = $("#addTextBoxNameMappingField").val();

    var textboxfielddetails = JSLINQ(allFormFields).Where(function () {
        return (this.Name == $.trim(textBoxNameVal) && this.FormFieldIdentiferValue != editvalueid);
    });

    if (textboxfielddetails.items[0] != undefined && textboxfielddetails.items[0].Name != null && textboxfielddetails.items[0].Name != "" && textboxfielddetails.items[0].Name.length > 0) {
        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.FieldNameError);
        return false;
    }

    if (MappingField != "0") {
        var mappingfielddetails = JSLINQ(allFormFields).Where(function () {
            return (this.ContactMappingField == MappingField && this.FormFieldIdentiferValue != editvalueid);
        });

        if (mappingfielddetails.items[0] != undefined && mappingfielddetails.items[0].ContactMappingField != null && mappingfielddetails.items[0].ContactMappingField != "" && mappingfielddetails.items[0].ContactMappingField.length > 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.MappingFieldError);
            return false;
        }
    }
    else {
        MappingField = "";
    }

    $("#" + appendTextBox).attr({
        "id": addTextBoxNamePl,
        "name": addTextBoxNamePl,
    });

    $("#" + textBoxlblNameText).html(textBoxNameVal);

    textBoxMandCheck = $('input[name="textboxMand"]:checked').val();

    if (textBoxMandCheck == "yes")
        $("#" + addTextBoxNamePl).attr("required", "required");
    else if (textBoxMandCheck == "no")
        $("#" + addTextBoxNamePl).removeAttr("required", "required");

    //this is for form fields
    var fieldIndexValue = -1;
    var FormId = 0;
    var Id = 0;
    var fieldDetailsPriority = 0;
    if (editvalueid != undefined) {
        var namefielddetails = JSLINQ(allFormFields).Where(function () {
            return (this.FormFieldIdentiferValue == editvalueid);
        });

        allFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        if (namefielddetails.items[0] != undefined && namefielddetails.items[0].FormId != null && namefielddetails.items[0].FormId != "" && namefielddetails.items[0].FormId > 0) {
            FormId = namefielddetails.items[0].FormId;
            Id = namefielddetails.items[0].Id;
        }

        fieldDetailsPriority = namefielddetails.items[0].FieldPriority;

        MandatoryValue = textBoxMandCheck == "yes" ? 1 : 0;
        EditFormFieldsArray(textBoxNameVal, 1, "", MandatoryValue, FormId, Id, fieldIndexValue, editvalueid, MappingField, fieldDetailsPriority, "");
    }

    //this is for form binding fields

    var fieldIndexValue = -1;
    var FormId = 0;
    var Id = 0;
    if (editvalueid != undefined) {
        var namefielddetails = JSLINQ(allBindingFormFields).Where(function () {
            return (this.FormFieldIdentiferValue == editvalueid);
        });

        allBindingFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        if (namefielddetails.items[0] != undefined && namefielddetails.items[0].FormId != null && namefielddetails.items[0].FormId != "" && namefielddetails.items[0].FormId > 0) {
            FormId = namefielddetails.items[0].FormId;
            Id = namefielddetails.items[0].Id;
        }

        MandatoryValue = textBoxMandCheck == "yes" ? 1 : 0;
        EditFormBindingFieldsArray(textBoxNameVal, 1, "", MandatoryValue, FormId, Id, fieldIndexValue, editvalueid, MappingField, "")
    }

    $("#addTextBoxName").val("");
    $('input[name="textboxMand"]').prop('checked', false);
    $(this).parents('.formtextBoxPopupwrap').removeClass('showPopup');
});

/*TextBox End here  */

/* Custom TextBox Start here */
var custtxtbxlblwrp, custtxtbxlblname, custtxtbxinptwrp, custtxtbxinptId, custTextBxlblid, custTextBxlblval, custTextBxpl, custTextboxlblval, custTextBxismand;
$("#customTextBox").click(function () {

    custtextBoxNameCount++;
    fieldrowindex++;
    FieldPriority++;

    if (cssObjectsFormBody.width == null) {
        errMessPop();
    }
    else if (custtextBoxNameCount == 0) {
        $(".frmdummyconts").remove();
        let custtextboxnamenum = "custTextbox" + custtextBoxNameCount.toString();
        custtxtbxlblwrp = "custTextBoxlblwrp" + custtextBoxNameCount.toString();
        custtxtbxlblname = "custTextBoxlblName" + custtextBoxNameCount.toString();
        custtxtbxinptwrp = "custTextBoxinptWrp" + custtextBoxNameCount.toString();
        custtxtbxinptId = "custTextBoxinput" + custtextBoxNameCount.toString();

        $("#appendFields").append('<div id="' + custtextboxnamenum + '" FieldType="6" class="inputWrap del"><div class="frmeditrow lblTxtBox"><div id="' + custtxtbxlblwrp + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + custtxtbxlblname + '" contenteditable="true">Field Name</label></div><div id="' + custtxtbxinptwrp + '"  class="form-col-8 form-mb-col-12 txtBox"><input type="text" FieldType="6" RowIndex="' + fieldrowindex + '" FieldPriority="' + FieldPriority + '"  class="input-form-control" id="' + custtxtbxinptId + '" name="Name" required = "required" ></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editcustTextBox" editattrvalue="' + custtextboxnamenum + '" class="fas fa-pencil-alt" title="Edit TextBox"></span><span id="delParent" deleteattrvalue="' + custtextboxnamenum + '" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="custTextBoxlblwrp"],[id^="custTextBoxinptWrp"]').addClass('adCol-100');
        }

        if ($("#labelplaceholder").hasClass("lbl-active-bg")) {
            $('[id^="custTextBoxlblwrp"]').addClass('lblAlignPlaceholder adCol-100');
            $('[id^="custTextBoxinptWrp"]').addClass('adCol-100');
        }
    }
    else {
        $(".frmdummyconts").remove();
        let custtextboxnamenum = "custTextbox" + custtextBoxNameCount.toString();
        custtxtbxlblwrp = "custTextBoxlblwrp" + custtextBoxNameCount.toString();
        custtxtbxlblname = "custTextBoxlblName" + custtextBoxNameCount.toString();
        custtxtbxinptwrp = "custTextBoxinptWrp" + custtextBoxNameCount.toString();
        custtxtbxinptId = "custTextBoxinput" + custtextBoxNameCount.toString();

        $("#appendFields").append('<div id="' + custtextboxnamenum + '" FieldType="6" class="inputWrap del"><div class="frmeditrow lblTxtBox"><div id="' + custtxtbxlblwrp + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + custtxtbxlblname + '" contenteditable="true">Field Name' + custtextBoxNameCount + '</label></div><div id="' + custtxtbxinptwrp + '"  class="form-col-8 form-mb-col-12 txtBox"><input type="text" FieldType="6" RowIndex="' + fieldrowindex + '"  class="input-form-control" id="' + custtxtbxinptId + '" name="Name" required = "required" ></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editcustTextBox" editattrvalue="' + custtextboxnamenum + '" class="fas fa-pencil-alt" title="Edit TextBox"></span><span id="delParent" deleteattrvalue="' + custtextboxnamenum + '" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="custTextBoxlblwrp"],[id^="custTextBoxinptWrp"]').addClass('adCol-100');
        }

        if ($("#labelplaceholder").hasClass("lbl-active-bg")) {
            $('[id^="custTextBoxlblwrp"]').addClass('lblAlignPlaceholder adCol-100');
            $('[id^="custTextBoxinptWrp"]').addClass('adCol-100');
        }

        AddFormFieldsArray("Field Name" + custtextBoxNameCount, 6, fieldrowindex, "", 0, 0, 0, custtextboxnamenum, "", FieldPriority, "");
        AddFormBindingFieldsArray("Field Name" + custtextBoxNameCount, 6, fieldrowindex, "", 0, 0, 0, custtextboxnamenum, "", "");
    }

    $(".formWrapper").on('keyup', "#" + custtxtbxlblname, function () {
        custTextBxlblid = $(this).parent('.labelStyle').next('.txtBox').find('input').attr('id');
        custTextBxlblval = $(this).text();
        custTextBxpl = custTextBxlblval.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase();
        if (custTextBxlblid == "") {
            $(this).parent('.labelStyle').next('.txtBox').find('input').attr({
                "id": custTextBxpl,
                "name": custTextBxpl
            });
        }
        $("#" + custTextBxlblid).attr({
            "id": custTextBxpl,
            "name": custTextBxpl
        });
    });

});

var custTextBoxlblId, custTextBoxlbltxtname, custTextboxismand;
$(".formWrapper").on('click', '#editcustTextBox', function () {
    $(".formCustTextBoxPopupwrap").addClass("showPopup").removeClass("hidePopup");
    custTextBoxlblId = $(this).parent('.delIconWrap').prev('.lblTxtBox').children('.labelStyle').find('label').attr('id');
    custTextBxlblid = $(this).parent('.delIconWrap').prev('.lblTxtBox').children('.txtBox').find('input').attr('id');
    custTextBoxlbltxtname = $(this).parent('.delIconWrap').prev('.lblTxtBox').find('label').text();
    custTextboxismand = $(this).parent('.delIconWrap').prev('.lblTxtBox').children('.txtBox').find('input').prop('required');
    $("#addcustTextBxlblName").val(custTextBoxlbltxtname);

    $("#addcustTextBxMappingField").select2().val(0).change();

    //this is for binding the mapping field
    FormUtil.CreatePlumb5FieldDropDown("addcustTextBxMappingField");

    var editAttrvalueId = $(this).attr('editattrvalue');
    $("#addCustTextboxName").removeAttr("txtEditIdentifierValue").attr("txtEditIdentifierValue", editAttrvalueId);

    //Binding the mapping field
    var customfielddetails = JSLINQ(allFormFields).Where(function () {
        return (this.FormFieldIdentiferValue == editAttrvalueId);
    });

    if (customfielddetails.items[0] != undefined && customfielddetails.items[0].ContactMappingField != null && customfielddetails.items[0].ContactMappingField != "" && customfielddetails.items[0].ContactMappingField.length > 0) {
        //$("#addcustTextBxMappingField").val(customfielddetails.items[0].ContactMappingField);
        $("#addcustTextBxMappingField").select2().val(customfielddetails.items[0].ContactMappingField).change();
    }

    if (customfielddetails.items[0] != undefined && customfielddetails.items[0] != null && customfielddetails.items[0] != "") {
        if (customfielddetails.items[0].Mandatory == 1)
            $("#custtextBoxYes").prop("checked", true);
        else
            $("#custtextBoxNo").prop("checked", true);
    }
    else {
        if (custTextboxismand == true)
            $("#custtextBoxYes").prop("checked", true);
        else
            $("#custtextBoxNo").prop("checked", true);
    }
});

$("#addCustTextboxName").click(function () {
    custTextboxlblval = $("#addcustTextBxlblName").val();

    custTextBxpl = custTextboxlblval.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase();

    if (custTextboxlblval == "") {
        $("#addCustTextBoxErr").html(GlobalErrorList.CreateEmbeddedForm.EmptyValue);
        $("#addcustTextBxlblName").focus();
        return false;
    }
    else {
        $("#addCustTextBoxErr").html("");
    }

    var editvalueid = "";

    if ($(this).attr("txtEditIdentifierValue") != undefined) {
        editvalueid = $(this).attr("txtEditIdentifierValue");
    }

    var MappingField = $("#addcustTextBxMappingField").val();

    var customfieldcheck = JSLINQ(allFormFields).Where(function () {
        return (this.Name == $.trim(custTextboxlblval) && this.FormFieldIdentiferValue != editvalueid);
    });

    if (customfieldcheck.items[0] != undefined && customfieldcheck.items[0].Name != null && customfieldcheck.items[0].Name != "" && customfieldcheck.items[0].Name.length > 0) {
        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.FieldNameError);
        return false;
    }

    if (MappingField != "0") {
        var mappingfielddetails = JSLINQ(allFormFields).Where(function () {
            return (this.ContactMappingField == MappingField && this.FormFieldIdentiferValue != editvalueid);
        });

        if (mappingfielddetails.items[0] != undefined && mappingfielddetails.items[0].ContactMappingField != null && mappingfielddetails.items[0].ContactMappingField != "" && mappingfielddetails.items[0].ContactMappingField.length > 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.MappingFieldError);
            return false;
        }
    }
    else {
        MappingField = "";
    }

    $("#" + custTextBxlblid).attr({
        "id": custTextBxpl,
        "name": custTextBxpl,
    });

    $("#" + custTextBoxlblId).html(custTextboxlblval)
    custTextBxismand = $('input[name="custtextboxMand"]:checked').val();
    if (custTextBxismand == "yes") {
        $("#" + custTextBxpl).attr("required", "required");
    }
    else {
        if (custTextBxismand == "no") {
            $("#" + custTextBxpl).removeAttr("required", "required");
        }
    }

    //this is for form fields

    var fieldIndexValue = -1;
    var FormId = 0;
    var Id = 0;
    var fieldDetailsPriority = 0;

    if (editvalueid != undefined) {

        var customfielddetails = JSLINQ(allFormFields).Where(function () {
            return (this.FormFieldIdentiferValue == editvalueid);
        });

        allFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        if (customfielddetails.items[0] != undefined && customfielddetails.items[0].FormId != null && customfielddetails.items[0].FormId != "" && customfielddetails.items[0].FormId > 0) {
            FormId = customfielddetails.items[0].FormId;
            Id = customfielddetails.items[0].Id;
        }
        fieldDetailsPriority = customfielddetails.items[0].FieldPriority;

        MandatoryValue = custTextBxismand == "yes" ? 1 : 0;
        EditFormFieldsArray(custTextboxlblval, 6, "", MandatoryValue, FormId, Id, fieldIndexValue, editvalueid, MappingField, fieldDetailsPriority, "");
    }

    //this is for form binding fields

    var fieldIndexValue = -1;
    var FormId = 0;
    var Id = 0;
    if (editvalueid != undefined) {
        var customfielddetails = JSLINQ(allBindingFormFields).Where(function () {
            return (this.FormFieldIdentiferValue == editvalueid);
        });

        allBindingFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        if (customfielddetails.items[0] != undefined && customfielddetails.items[0].FormId != null && customfielddetails.items[0].FormId != "" && customfielddetails.items[0].FormId > 0) {
            FormId = customfielddetails.items[0].FormId;
            Id = customfielddetails.items[0].Id;
        }

        MandatoryValue = custTextBxismand == "yes" ? 1 : 0;
        EditFormBindingFieldsArray(custTextboxlblval, 6, "", MandatoryValue, FormId, Id, fieldIndexValue, editvalueid, MappingField, "")
    }

    $("#addcustTextBxlblName").val("");
    $('input[name="custtextboxMand"]').prop('checked', false);
    $(this).parents('.formCustTextBoxPopupwrap').removeClass('showPopup');

});

/* Custom TextBox End here */

/*OTP TextBox Start here */

var otptxtbxlblwrp, otptxtbxlblname, otptxtbxinptwrp, otptxtbxinptId, otpTextBxlblid, otpTextBxlblval, otpTextBxpl;
$("#otpTextBox").click(function () {

    if (allBindingFormFields != null && allBindingFormFields.length > 0) {
        var sample = JSLINQ(allBindingFormFields).Where(function () { return (this.FieldType == 23); });

        if (sample.items[0] != undefined && (sample.items[0].FieldType == 23)) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.OTPTextAddError);
            return false;
        }
    }

    opttextBoxNameCount++;
    fieldrowindex++;
    FieldPriority++;

    if (cssObjectsFormBody.width == null) {
        errMessPop();
    }
    else if (opttextBoxNameCount == 0) {
        $(".frmdummyconts").remove();
        let otptextboxnamenum = "otpTextbox" + opttextBoxNameCount.toString();
        otptxtbxlblwrp = "otpTextBoxlblwrp" + opttextBoxNameCount.toString();
        otptxtbxlblname = "otpTextBoxlblName" + opttextBoxNameCount.toString();
        otptxtbxinptwrp = "otpTextBoxinptWrp" + opttextBoxNameCount.toString();
        otptxtbxinptId = "otpTextBoxinput" + opttextBoxNameCount.toString();

        $("#appendFields").append('<div id="' + otptextboxnamenum + '" FieldType="23" class="inputWrap del"><div class="frmeditrow lblTxtBox"><div id="' + otptxtbxlblwrp + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + otptxtbxlblname + '" contenteditable="true">OTP Name</label></div><div id="' + otptxtbxinptwrp + '"  class="form-col-8 form-mb-col-12 txtBox"><input type="text" FieldType="23" RowIndex="' + fieldrowindex + '"  class="input-form-control" id="' + otptxtbxinptId + '" name="Name" required = "required" ></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editotpTextBox" editattrvalue="' + otptextboxnamenum + '" class="fas fa-pencil-alt" title="Edit TextBox"></span><span id="delParent" deleteattrvalue="' + otptextboxnamenum + '" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="otpTextBoxlblwrp"],[id^="otpTextBoxinptWrp"]').addClass('adCol-100');
        }

        if ($("#labelplaceholder").hasClass("lbl-active-bg")) {
            $('[id^="otpTextBoxlblwrp"]').addClass('lblAlignPlaceholder adCol-100');
            $('[id^="otpTextBoxinptWrp"]').addClass('adCol-100');
        }
    }
    else {
        $(".frmdummyconts").remove();
        let otptextboxnamenum = "otpTextbox" + opttextBoxNameCount.toString();
        otptxtbxlblwrp = "otpTextBoxlblwrp" + opttextBoxNameCount.toString();
        otptxtbxlblname = "otpTextBoxlblName" + opttextBoxNameCount.toString();
        otptxtbxinptwrp = "otpTextBoxinptWrp" + opttextBoxNameCount.toString();
        otptxtbxinptId = "otpTextBoxinput" + opttextBoxNameCount.toString();

        $("#appendFields").append('<div id="' + otptextboxnamenum + '" FieldType="23" class="inputWrap del"><div class="frmeditrow lblTxtBox"><div id="' + otptxtbxlblwrp + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + otptxtbxlblname + '" contenteditable="true">OTP Name</label></div><div id="' + otptxtbxinptwrp + '"  class="form-col-8 form-mb-col-12 txtBox"><input type="text" FieldType="23" RowIndex="' + fieldrowindex + '"  class="input-form-control" id="' + otptxtbxinptId + '" name="Name" required = "required" ></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editotpTextBox" editattrvalue="' + otptextboxnamenum + '" class="fas fa-pencil-alt" title="Edit TextBox"></span><span id="delParent" deleteattrvalue="' + otptextboxnamenum + '" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="otpTextBoxlblwrp"],[id^="otpTextBoxinptWrp"]').addClass('adCol-100');
        }

        if ($("#labelplaceholder").hasClass("lbl-active-bg")) {
            $('[id^="otpTextBoxlblwrp"]').addClass('lblAlignPlaceholder adCol-100');
            $('[id^="otpTextBoxinptWrp"]').addClass('adCol-100');
        }

        AddFormFieldsArray("OTP", 23, fieldrowindex, "", 1, 0, 0, otptextboxnamenum, "", FieldPriority, "");
        AddFormBindingFieldsArray("OTP", 23, fieldrowindex, "", 1, 0, 0, otptextboxnamenum, "", "");
    }

    $(".formWrapper").on('keyup', "#" + otptxtbxlblname, function () {
        otpTextBxlblid = $(this).parent('.labelStyle').next('.txtBox').find('input').attr('id');
        otpTextBxlblval = $(this).text();
        otpTextBxpl = otpTextBxlblval.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase();
        if (otpTextBxlblid == "") {
            $(this).parent('.labelStyle').next('.txtBox').find('input').attr({
                "id": otpTextBxpl,
                "name": otpTextBxpl
            });
        }
        $("#" + otpTextBxlblid).attr({
            "id": otpTextBxpl,
            "name": otpTextBxpl
        });
    });
});

var otpTextBoxlblId, otpTextBoxlbltxtname, otpTextboxismand
$(".formWrapper").on('click', '#editotpTextBox', function () {
    $(".formotpTextBoxPopupwrap").addClass("showPopup").removeClass("hidePopup");
    otpTextBoxlblId = $(this).parent('.delIconWrap').prev('.lblTxtBox').children('.labelStyle').find('label').attr('id');
    otpTextBxlblid = $(this).parent('.delIconWrap').prev('.lblTxtBox').children('.txtBox').find('input').attr('id');
    otpTextBoxlbltxtname = $(this).parent('.delIconWrap').prev('.lblTxtBox').find('label').text();
    otpTextboxismand = $(this).parent('.delIconWrap').prev('.lblTxtBox').children('.txtBox').find('input').prop('required');
    $("#addotpTextBxlblName").val(otpTextBoxlbltxtname);

    $("#addotpTextBxMappingField").select2().val(0).change();

    //this is for binding the mapping field
    FormUtil.CreatePlumb5FieldDropDown("addotpTextBxMappingField");

    var editAttrvalueId = $(this).attr('editattrvalue');
    $("#addotpTextboxName").removeAttr("txtEditIdentifierValue").attr("txtEditIdentifierValue", editAttrvalueId);

    //Binding the mapping field
    var otptextboxdetails = JSLINQ(allFormFields).Where(function () {
        return (this.FormFieldIdentiferValue == editAttrvalueId);
    });

    if (otptextboxdetails.items[0] != undefined && otptextboxdetails.items[0].ContactMappingField != null && otptextboxdetails.items[0].ContactMappingField != "" && otptextboxdetails.items[0].ContactMappingField.length > 0) {
        // $("#addotpTextBxMappingField").val(otptextboxdetails.items[0].ContactMappingField);
        $("#addotpTextBxMappingField").select2().val(otptextboxdetails.items[0].ContactMappingField).change();
    }

    if (otptextboxdetails.items[0] != undefined && otptextboxdetails.items[0] != null && otptextboxdetails.items[0] != "") {
        if (otptextboxdetails.items[0].Mandatory == 1) {
            $("#otptextBoxYes").prop("checked", true);
        }
        else {
            $("#otptextBoxNo").prop("checked", true);
        }
    }
    else {
        if (otpTextboxismand == true) {
            $("#otptextBoxYes").prop("checked", true);
        } else {
            $("#otptextBoxNo").prop("checked", true);
        }
    }
});

$("#addotpTextboxName").click(function () {
    otpTextboxlblval = $("#addotpTextBxlblName").val();
    otpTextBxpl = otpTextboxlblval.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase();
    if (otpTextboxlblval == "") {
        $("#addotpTextBoxErr").html(GlobalErrorList.CreateEmbeddedForm.EmptyValue);
        $("#addotpTextBxlblName").focus();
        return false;
    } else {
        $("#addotpTextBoxErr").html("");
    }

    var editvalueid = "";

    if ($(this).attr("txtEditIdentifierValue") != undefined) {
        editvalueid = $(this).attr("txtEditIdentifierValue");
    }

    var otpfielddetails = JSLINQ(allFormFields).Where(function () {
        return (this.Name == $.trim(otpTextboxlblval) && this.FormFieldIdentiferValue != editvalueid);
    });

    if (otpfielddetails.items[0] != undefined && otpfielddetails.items[0].Name != null && otpfielddetails.items[0].Name != "" && otpfielddetails.items[0].Name.length > 0) {
        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.FieldNameError);
        return false;
    }

    var MappingField = $("#addotpTextBxMappingField").val();

    if (MappingField != "0") {
        var mappingfielddetails = JSLINQ(allFormFields).Where(function () {
            return (this.ContactMappingField == MappingField && this.FormFieldIdentiferValue != editvalueid);
        });

        if (mappingfielddetails.items[0] != undefined && mappingfielddetails.items[0].ContactMappingField != null && mappingfielddetails.items[0].ContactMappingField != "" && mappingfielddetails.items[0].ContactMappingField.length > 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.MappingFieldError);
            return false;
        }
    }
    else {
        MappingField = "";
    }

    $("#" + otpTextBxlblid).attr({
        "id": otpTextBxpl,
        "name": otpTextBxpl,
    });

    $("#" + otpTextBoxlblId).html(otpTextboxlblval)
    otpTextBxismand = $('input[name="otptextboxMand"]:checked').val();

    if (otpTextBxismand == "true")
        $("#" + otpTextBxpl).attr("required", "required");
    else if (otpTextBxismand == "false")
        $("#" + otpTextBxpl).removeAttr("required", "required");

    //this is for form fields
    var fieldIndexValue = -1;
    var FormId = 0;
    var Id = 0;
    var fieldDetailsPriority = 0;

    if (editvalueid != undefined) {
        var otpfielddetails = JSLINQ(allFormFields).Where(function () {
            return (this.FormFieldIdentiferValue == editvalueid);
        });

        allFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        if (otpfielddetails.items[0] != undefined && otpfielddetails.items[0].FormId != null && otpfielddetails.items[0].FormId != "" && otpfielddetails.items[0].FormId > 0) {
            FormId = otpfielddetails.items[0].FormId;
            Id = otpfielddetails.items[0].Id;
        }

        fieldDetailsPriority = otpfielddetails.items[0].FieldPriority;

        MandatoryValue = otpTextBxismand == "true" ? 1 : 0;
        EditFormFieldsArray(otpTextboxlblval, 23, "", MandatoryValue, FormId, Id, fieldIndexValue, editvalueid, MappingField, fieldDetailsPriority, "");
    }

    //this is for form binding fields

    var fieldIndexValue = -1;
    var FormId = 0;
    var Id = 0;

    if (editvalueid != undefined) {

        var otpfielddetails = JSLINQ(allBindingFormFields).Where(function () {
            return (this.FormFieldIdentiferValue == editvalueid);
        });

        allBindingFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        MandatoryValue = emailBoxCheckMand == "yes" ? 1 : 0;

        if (otpfielddetails.items[0] != undefined && otpfielddetails.items[0].FormId != null && otpfielddetails.items[0].FormId != "" && otpfielddetails.items[0].FormId > 0) {
            FormId = otpfielddetails.items[0].FormId;
            Id = otpfielddetails.items[0].Id;
        }
        MandatoryValue = otpTextBxismand == "true" ? 1 : 0;
        EditFormBindingFieldsArray(otpTextboxlblval, 23, "", MandatoryValue, FormId, Id, fieldIndexValue, editvalueid, MappingField, "");
    }

    $("#addotpTextBxlblName").val("");
    $('input[name="otptextboxMand"]').prop('checked', false);
    $(this).parents('.formotpTextBoxPopupwrap').removeClass('showPopup');
});

/*OTP TextBox End here */

/*Email Start here */

var emaillblTextCount, emaillblInputId, emaillblTextVal, emaillblValName, emaillblTextBoxId, emailTextBoxId, emailPlaceholdText, emailboxisChecked, emaillblWrap, emailInpWrap;
$("#inputEmail").click(function () {

    //validation of email id textbox coz it is already added

    if (allBindingFormFields != null && allBindingFormFields.length > 0) {
        var sample = JSLINQ(allBindingFormFields).Where(function () { return (this.FieldType == 2); });

        if (sample.items[0] != undefined && (sample.items[0].FieldType <= 3)) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.FieldTypeError);
            return false;
        }
    }

    textBoxEmailCount++;
    fieldrowindex++;
    FieldPriority++;

    if (cssObjectsFormBody.width == null) {
        errMessPop();
    }
    else if (textBoxEmailCount == 0) {
        $(".frmdummyconts").remove();
        let textBoxEmailNum = "textBoxEmail" + textBoxEmailCount.toString();
        emaillblTextCount = "textBoxEmaillbl" + textBoxEmailCount.toString();
        emaillblTextBoxId = "emailId" + textBoxEmailCount.toString();
        emaillblWrap = "emailLblCont" + textBoxEmailCount.toString();
        emailInpWrap = "emailInptCont" + textBoxEmailCount.toString();

        $("#appendFields").append('<div id="' + textBoxEmailNum + '" FieldType="2" class="inputWrap del"><div class="frmeditrow emailbx"><div id="' + emaillblWrap + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + emaillblTextCount + '" contenteditable="true">Email</label></div><div id="' + emailInpWrap + '" class="form-col-8 form-mb-col-12 emaillblTxt"><input id="' + emaillblTextBoxId + '" FieldType="2" RowIndex="' + fieldrowindex + '" class="input-form-control" type="email" name="email" required="required" ></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editEmailBox" editattrvalue="' + textBoxEmailNum + '" class="fas fa-pencil-alt" title="Edit EmailBox"></span><span id="delParent" deleteattrvalue="' + textBoxEmailNum + '" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="emailLblCont"],[id^="emailInptCont"]').addClass('adCol-100');
        }

        if ($("#labelplaceholder").hasClass("lbl-active-bg")) {
            $('[id^="emailLblCont"]').addClass('adCol-100 lblAlignPlaceholder');
            $('[id^="emailInptCont"]').addClass('adCol-100');
        }
    }
    else {
        $(".frmdummyconts").remove();
        let textBoxEmailNum = "textBoxEmail" + textBoxEmailCount.toString();
        emaillblTextCount = "textBoxEmaillbl" + textBoxEmailCount.toString();
        emaillblTextBoxId = "emailId" + textBoxEmailCount.toString();
        emaillblWrap = "emailLblCont" + textBoxEmailCount.toString();
        emailInpWrap = "emailInptCont" + textBoxEmailCount.toString();

        $("#appendFields").append('<div id="' + textBoxEmailNum + '" FieldType="2" class="inputWrap del"><div class="frmeditrow emailbx"><div id="' + emaillblWrap + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + emaillblTextCount + '" contenteditable="true" >Email</label></div><div id="' + emailInpWrap + '" class="form-col-8 form-mb-col-12 emaillblTxt"><input id="' + emaillblTextBoxId + '" FieldType="2" RowIndex="' + fieldrowindex + '" class="input-form-control" type="email" name="email" required="required" ></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editEmailBox" editattrvalue="' + textBoxEmailNum + '" class="fas fa-pencil-alt" title="Edit EmailBox"></span><span id="delParent" deleteattrvalue="' + textBoxEmailNum + '" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="emailLblCont"],[id^="emailInptCont"]').addClass('adCol-100');
        }

        if ($("#labelplaceholder").hasClass("lbl-active-bg")) {
            $('[id^="emailLblCont"]').addClass('adCol-100 lblAlignPlaceholder');
            $('[id^="emailInptCont"]').addClass('adCol-100');
        }

        AddFormFieldsArray("EmailId", 2, fieldrowindex, "", 1, 0, 0, textBoxEmailNum, "", FieldPriority, "");
        AddFormBindingFieldsArray("EmailId", 2, fieldrowindex, "", 1, 0, 0, textBoxEmailNum, "", "");
    }

    $(".formWrapper").on('keyup', '#' + emaillblTextCount, function () {
        emaillblInputId = $(this).parent('.labelStyle').next('.emaillblTxt').find('input').attr('id');
        emaillblTextVal = $(this).text();
        emaillblValName = emaillblTextVal.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase();
        if (emaillblInputId == "") {
            $(this).parent('.labelStyle').next('.emaillblTxt').find('input').attr({
                "id": emaillblValName,
                "name": emaillblValName
            });
        }
        $("#" + emaillblInputId).attr({
            "id": emaillblValName,
            "name": emaillblValName
        });
    });
});

$(".formWrapper").on('click', '#editEmailBox', function () {
    $(".formEmailBoxPopupwrap").addClass("showPopup").removeClass("hidePopup");
    emaillblInputId = $(this).parent('.delIconWrap').prev('.emailbx').children('.labelStyle').find('label').attr('id');
    emailTextBoxId = $(this).parent('.delIconWrap').prev('.emailbx').children('.emaillblTxt').find('input').attr('id');
    /* emailPlaceholdText = $(this).parent('.delIconWrap').prev('.emailbx').children('.emaillblTxt').find('input').attr('placeholder'); */
    emailPlaceholdText = $(this).parent('.delIconWrap').prev('.emailbx').find('label').text();
    emailboxisChecked = $(this).parent('.delIconWrap').prev('.emailbx').children('.emaillblTxt').find('input').prop("required");
    $("#addEmailBoxName").val(emailPlaceholdText);

    $("#addEmailBoxNameMappingField").select2().val(0).change();

    FormUtil.CreatePlumb5FieldDropDown("addEmailBoxNameMappingField");

    var editAttrvalueId = $(this).attr('editattrvalue');
    $("#addEmailboxName").removeAttr("txtEditIdentifierValue").attr("txtEditIdentifierValue", editAttrvalueId);

    //Binding the mapping field
    var mappingfielddetails = JSLINQ(allFormFields).Where(function () {
        return (this.FormFieldIdentiferValue == editAttrvalueId);
    });

    if (mappingfielddetails.items[0] != undefined && mappingfielddetails.items[0].ContactMappingField != null && mappingfielddetails.items[0].ContactMappingField != "" && mappingfielddetails.items[0].ContactMappingField.length > 0) {
        //$("#addEmailBoxNameMappingField").val(mappingfielddetails.items[0].ContactMappingField);
        $("#addEmailBoxNameMappingField").select2().val(mappingfielddetails.items[0].ContactMappingField).change();
    }

    if (mappingfielddetails.items[0] != undefined && mappingfielddetails.items[0] != null && mappingfielddetails.items[0] != "") {
        if (mappingfielddetails.items[0].Mandatory == 1)
            $("#emailBoxYes").prop("checked", true);
        else
            $("#emailBoxYes").prop("checked", true);
    }
    else {
        if (emailboxisChecked == true)
            $("#emailBoxYes").prop("checked", true);
        else
            $("#emailBoxYes").prop("checked", true);
    }
});

var emailBoxNameVal, emailBoxCheckMand;
$("#addEmailboxName").click(function () {
    emailBoxNameVal = $("#addEmailBoxName").val();
    emaillblValName = emailBoxNameVal.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase();

    if (emailBoxNameVal == "") {
        $("#addEmailBoxErr").html(GlobalErrorList.CreateEmbeddedForm.EmptyValue);
        $("#addEmailBoxName").focus();
        return false;
    }
    else {
        $("#addEmailBoxErr").html("");
    }

    var editvalueid = "";

    if ($(this).attr("txtEditIdentifierValue") != undefined) {
        editvalueid = $(this).attr("txtEditIdentifierValue");
    }

    var emailfielddetails = JSLINQ(allFormFields).Where(function () {
        return (this.Name == $.trim(emailBoxNameVal) && this.FormFieldIdentiferValue != editvalueid);
    });

    if (emailfielddetails.items[0] != undefined && emailfielddetails.items[0].Name != null && emailfielddetails.items[0].Name != "" && emailfielddetails.items[0].Name.length > 0) {
        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.FieldNameError);
        return false;
    }

    var MappingField = $("#addEmailBoxNameMappingField").val();

    if (MappingField != "0") {
        var mappingfielddetails = JSLINQ(allFormFields).Where(function () {
            return (this.ContactMappingField == MappingField && this.FormFieldIdentiferValue != editvalueid);
        });

        if (mappingfielddetails.items[0] != undefined && mappingfielddetails.items[0].ContactMappingField != null && mappingfielddetails.items[0].ContactMappingField != "" && mappingfielddetails.items[0].ContactMappingField.length > 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.MappingFieldError);
            return false;
        }
    }
    else {
        MappingField = "";
    }

    $("#" + emailTextBoxId).attr({
        "id": emaillblValName,
        "name": emaillblValName
    });

    $("#" + emaillblInputId).html(emailBoxNameVal);

    emailBoxCheckMand = $('input[name="emailboxMand"]:checked').val();

    if (emailBoxCheckMand == "yes")
        $("#" + emaillblValName).attr('required', 'required');
    else if (emailBoxCheckMand == "no")
        $("#" + emaillblValName).removeAttr('required', 'required');

    $("#addEmailBoxName").val("");
    $('input[name="emailboxMand"]').prop('checked', false);

    var fieldIndexValue = -1;
    var FormId = 0;
    var Id = 0;
    var fieldDetailsPriority = 0;

    if (editvalueid != undefined) {

        var emailfielddetails = JSLINQ(allFormFields).Where(function () {
            return (this.FormFieldIdentiferValue == editvalueid);
        });

        allFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        MandatoryValue = emailBoxCheckMand == "yes" ? 1 : 0;

        if (emailfielddetails.items[0] != undefined && emailfielddetails.items[0].FormId != null && emailfielddetails.items[0].FormId != "" && emailfielddetails.items[0].FormId > 0) {
            FormId = emailfielddetails.items[0].FormId;
            Id = emailfielddetails.items[0].Id;
        }

        fieldDetailsPriority = emailfielddetails.items[0].FieldPriority;

        EditFormFieldsArray(emailBoxNameVal, 2, "", MandatoryValue, FormId, Id, fieldIndexValue, editvalueid, MappingField, fieldDetailsPriority, "");
    }

    var fieldIndexValue = -1;
    var FormId = 0;
    var Id = 0;

    if (editvalueid != undefined) {

        var emailfielddetails = JSLINQ(allBindingFormFields).Where(function () {
            return (this.FormFieldIdentiferValue == editvalueid);
        });

        allBindingFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        if (emailfielddetails.items[0] != undefined && emailfielddetails.items[0].FormId != null && emailfielddetails.items[0].FormId != "" && emailfielddetails.items[0].FormId > 0) {
            FormId = emailfielddetails.items[0].FormId;
            Id = emailfielddetails.items[0].Id;
        }

        MandatoryValue = emailBoxCheckMand == "yes" ? 1 : 0;
        EditFormBindingFieldsArray(emailBoxNameVal, 2, "", MandatoryValue, FormId, Id, fieldIndexValue, editvalueid, MappingField, "");
    }

    $(this).parents('.formEmailBoxPopupwrap').removeClass('showPopup');
});

/*Email Start here */

/* Phone Start here */

var textBoxPhonelbl, textBoxPhonelblInputId, textBoxPhonelblId, phoneBoxlblText, phoneBoxInptId, phoneBoxlblTextId, phoneTextBoxId, phoneBoxPlaceTxt, phoneBoxisChecked, phonelblCont, phoneInptCont;
$("#inputPhone").click(function () {

    //validation of email id textbox coz it is already added

    if (allBindingFormFields != null && allBindingFormFields.length > 0) {
        var sample = JSLINQ(allBindingFormFields).Where(function () { return (this.FieldType == 3); });

        if (sample.items[0] != undefined && (sample.items[0].FieldType <= 3)) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.FieldTypeError);
            return false;
        }
    }

    textBoxPhoneCount++;
    fieldrowindex++;
    FieldPriority++;

    if (cssObjectsFormBody.width == null) {
        errMessPop();
    }
    else if (textBoxPhoneCount == 0) {
        $(".frmdummyconts").remove();
        let textBoxPhoneNum = "textBoxPhone" + textBoxPhoneCount.toString();
        textBoxPhonelbl = "textboxPhonelbl" + textBoxPhoneCount.toString();
        textBoxPhonelblInputId = "phone" + textBoxPhoneCount.toString();
        phonelblCont = "phoneLblWrap" + textBoxPhoneCount.toString();
        phoneInptCont = "phoneInptWrap" + textBoxPhoneCount.toString();
        $("#appendFields").append('<div id="' + textBoxPhoneNum + '" FieldType="3" class="inputWrap del"><div class="frmeditrow phneBox"><div id="' + phonelblCont + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + textBoxPhonelbl + '" contenteditable="true">Phone</label></div><div id="' + phoneInptCont + '" class="form-col-8 form-mb-col-12 phneInput"><input id="' + textBoxPhonelblInputId + '" FieldType="3" RowIndex="' + fieldrowindex + '" class="input-form-control" type="tel" name="phone" required="required" ></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editPhoneBox" editattrvalue="' + textBoxPhoneNum + '" class="fas fa-pencil-alt" title="Edit PhoneBox"></span><span id="delParent" deleteattrvalue="' + textBoxPhoneNum + '" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');
        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="phoneLblWrap"],[id^="textBoxInptCont"]').addClass('adCol-100');
        }
        if ($("#labelplaceholder").hasClass("lbl-active-bg")) {
            $('[id^="phoneLblWrap"]').addClass('adCol-100 lblAlignPlaceholder');
            $('[id^="phoneInptWrap"]').addClass('adCol-100');
        }
    }
    else {
        $(".frmdummyconts").remove();
        let textBoxPhoneNum = "textBoxPhone" + textBoxPhoneCount.toString();
        textBoxPhonelbl = "textboxPhonelbl" + textBoxPhoneCount.toString();
        textBoxPhonelblInputId = "phone" + textBoxPhoneCount.toString();
        phonelblCont = "phoneLblWrap" + textBoxPhoneCount.toString();
        phoneInptCont = "phoneInptWrap" + textBoxPhoneCount.toString();
        $("#appendFields").append('<div id="' + textBoxPhoneNum + '" FieldType="3" class="inputWrap del"><div class="frmeditrow phneBox"><div id="' + phonelblCont + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + textBoxPhonelbl + '" contenteditable="true">Phone</label></div><div id="' + phoneInptCont + '" class="form-col-8 form-mb-col-12 phneInput"><input id="' + textBoxPhonelblInputId + '" FieldType="3" RowIndex="' + fieldrowindex + '" class="input-form-control" type="tel" name="phone" required="required" ></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editPhoneBox" editattrvalue="' + textBoxPhoneNum + '" class="fas fa-pencil-alt" title="Edit PhoneBox"></span><span id="delParent" deleteattrvalue="' + textBoxPhoneNum + '" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');
        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="phoneLblWrap"],[id^="phoneInptWrap"]').addClass('adCol-100');
        }
        if ($("#labelplaceholder").hasClass("lbl-active-bg")) {
            $('[id^="phoneLblWrap"]').addClass('adCol-100 lblAlignPlaceholder');
            $('[id^="phoneInptWrap"]').addClass('adCol-100');
        }

        AddFormFieldsArray("Phone", 3, fieldrowindex, "", 1, 0, 0, textBoxPhoneNum, "", FieldPriority, "");
        AddFormBindingFieldsArray("Phone", 3, fieldrowindex, "", 1, 0, 0, textBoxPhoneNum, "", "");
    }

    $(".formWrapper").on('keyup', "#" + textBoxPhonelbl, function () {
        textBoxPhonelblId = $(this).parent('.labelStyle').next('.phneInput').find('input').attr('id');
        phoneBoxlblText = $(this).text();
        phoneBoxInptId = phoneBoxlblText.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase();
        if (textBoxPhonelblId == "") {
            $(this).parent('.labelStyle').next('.phneInput').find('input').attr({
                "id": phoneBoxInptId,
                "name": phoneBoxInptId
            });
        }
        $("#" + textBoxPhonelblId).attr({
            "id": phoneBoxInptId,
            "name": phoneBoxInptId
        });
    });
});

$(".formWrapper").on('click', '#editPhoneBox', function () {
    $(".formPhoneBoxPopupwrap").addClass("showPopup").removeClass("hidePopup");
    phoneBoxlblTextId = $(this).parent('.delIconWrap').prev('.phneBox').children('.labelStyle').find('label').attr('id');
    phoneTextBoxId = $(this).parent('.delIconWrap').prev('.phneBox').children('.phneInput').find('input').attr('id');
    /* phoneBoxPlaceTxt = $(this).parent('.delIconWrap').prev('.phneBox').children('.phneInput').find('input').attr('placeholder'); */
    phoneBoxPlaceTxt = $(this).parent('.delIconWrap').prev('.phneBox').find('label').text();
    phoneBoxisChecked = $(this).parent('.delIconWrap').prev('.phneBox').children('.phneInput').find('input').prop("required");
    $("#addPhoneBoxName").val(phoneBoxPlaceTxt);

    $("#addPhoneBoxNameMappingField").select2().val(0).change();

    FormUtil.CreatePlumb5FieldDropDown("addPhoneBoxNameMappingField");

    var editAttrvalueId = $(this).attr('editattrvalue');
    $("#addPhoneboxfieldName").removeAttr("txtEditIdentifierValue").attr("txtEditIdentifierValue", editAttrvalueId);

    //Binding the mapping field
    var fielddetails = JSLINQ(allFormFields).Where(function () {
        return (this.FormFieldIdentiferValue == editAttrvalueId);
    });

    if (fielddetails.items[0] != undefined && fielddetails.items[0].ContactMappingField != null && fielddetails.items[0].ContactMappingField != "" && fielddetails.items[0].ContactMappingField.length > 0) {
        //$("#addPhoneBoxNameMappingField").val(fielddetails.items[0].ContactMappingField);
        $("#addPhoneBoxNameMappingField").select2().val(fielddetails.items[0].ContactMappingField).change();
    }

    if (fielddetails.items[0] != undefined && fielddetails.items[0] != null && fielddetails.items[0] != "") {
        if (fielddetails.items[0].Mandatory == 1)
            $("#phoneBoxYes").prop('checked', true);
        else
            $("#phoneBoxNo").prop('checked', true);
    }
    else {
        if (phoneBoxisChecked)
            $("#phoneBoxYes").prop('checked', true);
        else
            $("#phoneBoxNo").prop('checked', true);
    }
});

var phoneBoxNameVal, phoneBoxcheckMand;

$("#addPhoneboxfieldName").click(function () {
    phoneBoxNameVal = $("#addPhoneBoxName").val();
    phoneBoxInptId = phoneBoxNameVal.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase();

    if (phoneBoxNameVal == "") {
        $("#addPhoneBoxErr").html(GlobalErrorList.CreateEmbeddedForm.EmptyValue);
        $("#addPhoneBoxName").focus();
        return false;
    }
    else {
        $("#addPhoneBoxErr").html("");
    }

    var editvalueid = "";

    if ($("#addPhoneboxfieldName").attr("txtEditIdentifierValue") != undefined) {
        editvalueid = $(this).attr("txtEditIdentifierValue");
    }

    var MappingField = $("#addPhoneBoxNameMappingField").val();

    var phonefielddetails = JSLINQ(allFormFields).Where(function () {
        return (this.Name == $.trim(phoneBoxNameVal) && this.FormFieldIdentiferValue != editvalueid);
    });

    if (phonefielddetails.items[0] != undefined && phonefielddetails.items[0].Name != null && phonefielddetails.items[0].Name != "" && phonefielddetails.items[0].Name.length > 0) {
        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.FieldNameError);
        return false;
    }

    if (MappingField != "0") {
        var mappingfielddetails = JSLINQ(allFormFields).Where(function () {
            return (this.ContactMappingField == MappingField && this.FormFieldIdentiferValue != editvalueid);
        });

        if (mappingfielddetails.items[0] != undefined && mappingfielddetails.items[0].ContactMappingField != null && mappingfielddetails.items[0].ContactMappingField != "" && mappingfielddetails.items[0].ContactMappingField.length > 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.MappingFieldError);
            return false;
        }
    }
    else {
        MappingField = "";
    }

    $("#" + phoneTextBoxId).attr({
        //"placeholder" : phoneBoxNameVal,
        "id": phoneBoxInptId,
        "name": phoneBoxInptId
    });

    $("#" + phoneBoxlblTextId).html(phoneBoxNameVal);

    phoneBoxcheckMand = $("input[name='phoneboxMand']:checked").val();

    if (phoneBoxcheckMand == "yes")
        $("#" + phoneBoxInptId).attr("required", "required");
    else
        $("#" + phoneBoxInptId).removeAttr("required", "required");

    var fieldIndexValue = -1;
    if (editvalueid != undefined) {

        var phonedetails = JSLINQ(allFormFields).Where(function () {
            return (this.FormFieldIdentiferValue == editvalueid);
        });

        allFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        var FormId = 0;
        var Id = 0;
        var fieldDetailsPriority = 0;

        if (phonedetails.items[0] != undefined && phonedetails.items[0].FormId != null && phonedetails.items[0].FormId != "" && phonedetails.items[0].FormId > 0) {
            FormId = phonedetails.items[0].FormId;
            Id = phonedetails.items[0].Id;
        }

        fieldDetailsPriority = phonedetails.items[0].FieldPriority;

        MandatoryValue = phoneBoxcheckMand == "yes" ? 1 : 0;
        EditFormFieldsArray(phoneBoxNameVal, 3, "", MandatoryValue, FormId, Id, fieldIndexValue, editvalueid, MappingField, fieldDetailsPriority, "");
    }

    var fieldIndexValue = -1;
    if (editvalueid != undefined) {
        var phonedetails = JSLINQ(allBindingFormFields).Where(function () {
            return (this.FormFieldIdentiferValue == editvalueid);
        });

        allBindingFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        var FormId = 0;
        var Id = 0;

        if (phonedetails.items[0] != undefined && phonedetails.items[0].FormId != null && phonedetails.items[0].FormId != "" && phonedetails.items[0].FormId > 0) {
            FormId = phonedetails.items[0].FormId;
            Id = phonedetails.items[0].Id;
        }
        MandatoryValue = phoneBoxcheckMand == "yes" ? 1 : 0;
        EditFormBindingFieldsArray(phoneBoxNameVal, 3, "", MandatoryValue, FormId, Id, fieldIndexValue, editvalueid, MappingField, "");
    }

    $("#addPhoneBoxName").val("");
    $("input[name='phoneboxMand']").prop("checked", false);
    $(this).parents('.formPhoneBoxPopupwrap').removeClass('showPopup');
});


/* Phone Start here */
var textMessBoxlblName, textMessDefInputId, textMessBoxId, textMesslblName, textMessBoxIdVal, textMessBoxlblNameId, textMessBoxIdName, textMessBoxplacText, messBoxIsChecked, txtMessLblCont, txtMessInptCont;
$("#inputTextarea").click(function () {

    textBoxMessCount++;
    fieldrowindex++;
    FieldPriority++;

    if (cssObjectsFormBody.width == null) {
        errMessPop();
    }
    else if (textBoxMessCount == 0) {
        $(".frmdummyconts").remove();
        let textBoxMessNum = "inputMess" + textBoxMessCount.toString();
        textMessBoxlblName = "textBoxlblMess" + textBoxMessCount.toString();
        textMessDefInputId = "message" + textBoxMessCount.toString();
        txtMessLblCont = "txtMessLblWrap" + textBoxMessCount.toString();
        txtMessInptCont = "txtMessInptWrap" + textBoxMessCount.toString();

        $("#appendFields").append('<div id="' + textBoxMessNum + '" FieldType="7" class="inputWrap del"><div class="frmeditrow"><div id="' + txtMessLblCont + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + textMessBoxlblName + '" contenteditable="true">Your Query</label></div><div id="' + txtMessInptCont + '" class="form-col-8 form-mb-col-12 textMessWrap"><textarea id="' + textMessDefInputId + '" FieldType="7" RowIndex="' + fieldrowindex + '" class="input-form-control" required="required"></textarea></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="edittextMessBox" editattrvalue="' + textBoxMessNum + '" class="fas fa-pencil-alt" title="Edit MessageBox"></span><span id="delParent" deleteattrvalue="' + textBoxMessNum + '" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="textBoxlblMess"],[id^="txtMessInptWrap"]').addClass('adCol-100');
        }

        if ($("#labelplaceholder").hasClass("lbl-active-bg")) {
            $('[id^="txtMessLblWrap"]').addClass('adCol-100 lblAlignPlaceholder');
            $('[id^="txtMessInptWrap"]').addClass('adCol-100');
        }
    }
    else {
        $(".frmdummyconts").remove();
        let textBoxMessNum = "inputMess" + textBoxMessCount.toString();
        textMessBoxlblName = "textBoxlblMess" + textBoxMessCount.toString();
        textMessDefInputId = "messageBox" + textBoxMessCount.toString();
        txtMessLblCont = "txtMessLblWrap" + textBoxMessCount.toString();
        txtMessInptCont = "txtMessInptWrap" + textBoxMessCount.toString();

        $("#appendFields").append('<div id="' + textBoxMessNum + '" FieldType="7" class="inputWrap del"><div class="frmeditrow messBox"><div id="' + txtMessLblCont + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + textMessBoxlblName + '" contenteditable="true">Your Query</label></div><div id="' + txtMessInptCont + '" class="form-col-8 form-mb-col-12 textMessWrap"><textarea id="' + textMessDefInputId + '" FieldType="7" RowIndex="' + fieldrowindex + '" class="input-form-control" required="required"></textarea></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="edittextMessBox" editattrvalue="' + textBoxMessNum + '" class="fas fa-pencil-alt" title="Edit MessageBox"></span><span id="delParent" deleteattrvalue="' + textBoxMessNum + '" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="txtMessLblWrap"],[id^="txtMessInptWrap"]').addClass('adCol-100');
        }

        if ($("#labelplaceholder").hasClass("lbl-active-bg")) {
            $('[id^="txtMessLblWrap"]').addClass('adCol-100 lblAlignPlaceholder');
            $('[id^="txtMessInptWrap"]').addClass('adCol-100');
        }

        AddFormFieldsArray("Your Message", 7, fieldrowindex, "", 1, 0, 0, textBoxMessNum, "", FieldPriority, "");
        AddFormBindingFieldsArray("Your Message", 7, fieldrowindex, "", 1, 0, 0, textBoxMessNum, "", "");
    }

    $(".formWrapper").on("keyup", "#" + textMessBoxlblName, function () {
        textMessBoxId = $(this).parent('.labelStyle').next('.textMessWrap').find('textarea').attr('id');
        textMesslblName = $(this).text();
        textMessBoxIdVal = textMesslblName.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase();
        if (textMessBoxId == "") {
            $(this).parent('.labelStyle').next('.textMessWrap').find('textarea').attr({
                "id": textMessBoxIdVal,
                "name": textMessBoxIdVal
            });
        }

        $("#" + textMessBoxId).attr({
            "id": textMessBoxIdVal,
            "name": textMessBoxIdVal
        });
    });
});

$(".formWrapper").on("click", "#edittextMessBox", function () {
    $(".formMessageBoxPopupwrap").addClass("showPopup").removeClass("hidePopup");
    textMessBoxlblNameId = $(this).parent('.delIconWrap').prev('.messBox').children('.labelStyle').find('label').attr('id');
    textMessBoxIdName = $(this).parent('.delIconWrap').prev('.messBox').children('.textMessWrap').find('textarea').attr('id');
    /* textMessBoxplacText = $(this).parent('.delIconWrap').prev('.messBox').children('.textMessWrap').find('textarea').attr('placeholder'); */
    textMessBoxplacText = $(this).parent('.delIconWrap').prev('.messBox').find('label').text();
    $("#addMessBoxName").val(textMessBoxplacText);
    messBoxIsChecked = $(this).parent('.delIconWrap').prev('.messBox').children('.textMessWrap').find('textarea').prop("required");

    $("#addMessBoxNameMappingField").select2().val(0).change();

    FormUtil.CreatePlumb5FieldDropDown("addMessBoxNameMappingField");

    var editAttrvalueId = $(this).attr('editattrvalue');
    $("#addmessboxNamebtn").removeAttr("txtEditIdentifierValue").attr("txtEditIdentifierValue", editAttrvalueId);

    //Binding the mapping field
    var fielddetails = JSLINQ(allFormFields).Where(function () {
        return (this.FormFieldIdentiferValue == editAttrvalueId);
    });

    if (fielddetails.items[0] != undefined && fielddetails.items[0].ContactMappingField != null && fielddetails.items[0].ContactMappingField != "" && fielddetails.items[0].ContactMappingField.length > 0) {
        //$("#addMessBoxNameMappingField").val(fielddetails.items[0].ContactMappingField);
        $("#addMessBoxNameMappingField").select2().val(fielddetails.items[0].ContactMappingField).change();
    }

    if (fielddetails.items[0] != undefined && fielddetails.items[0] != null && fielddetails.items[0] != "") {
        if (fielddetails.items[0].Mandatory == 1)
            $("#messBoxYes").prop("checked", true);
        else
            $("#messBoxNo").prop("checked", true);
    }
    else {
        if (messBoxIsChecked)
            $("#messBoxYes").prop("checked", true);
        else
            $("#messBoxNo").prop("checked", true);
    }
});

var textMessNameVal, textMessBoxCheckMand;
$("#addmessboxNamebtn").click(function () {
    textMessNameVal = $("#addMessBoxName").val();
    textMessBoxIdVal = textMessNameVal.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase();

    if (textMessNameVal == "") {
        $("#addMessBoxErr").html(GlobalErrorList.CreateEmbeddedForm.EmptyValue);
        $("#addMessBoxName").focus();
        return false;
    }
    else {
        $("#addMessBoxErr").html("");
    }

    var editvalueid = "";

    if ($(this).attr("txtEditIdentifierValue") != undefined) {
        editvalueid = $(this).attr("txtEditIdentifierValue");
    }

    var MappingField = $("#addMessBoxNameMappingField").val();

    var fielddetails = JSLINQ(allFormFields).Where(function () {
        return (this.Name == $.trim(textMessNameVal) && this.FormFieldIdentiferValue != editvalueid);
    });

    if (fielddetails.items[0] != undefined && fielddetails.items[0].Name != null && fielddetails.items[0].Name != "" && fielddetails.items[0].Name.length > 0) {
        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.FieldNameError);
        return false;
    }

    if (MappingField != "0") {
        var mappingfielddetails = JSLINQ(allFormFields).Where(function () {
            return (this.ContactMappingField == MappingField && this.FormFieldIdentiferValue != editvalueid);
        });

        if (mappingfielddetails.items[0] != undefined && mappingfielddetails.items[0].ContactMappingField != null && mappingfielddetails.items[0].ContactMappingField != "" && mappingfielddetails.items[0].ContactMappingField.length > 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.MappingFieldError);
            return false;
        }
    }
    else {
        MappingField = "";
    }

    $("#" + textMessBoxIdName).attr({
        "id": textMessBoxIdVal,
        "name": textMessBoxIdVal
    });

    $("#" + textMessBoxlblNameId).html(textMessNameVal);
    textMessBoxCheckMand = $("input[name='messboxMand']:checked").val();

    if (textMessBoxCheckMand == "yes") {
        $("#" + textMessBoxIdName).attr("required", "required");
    } else {
        $("#" + textMessBoxIdName).removeAttr("required", "required");
    }

    var fieldIndexValue = -1;
    var FormId = 0;
    var Id = 0;
    var fieldDetailsPriority = 0;
    if (editvalueid != undefined) {

        var textareadetails = JSLINQ(allFormFields).Where(function () {
            return (this.FormFieldIdentiferValue == editvalueid);
        });

        allFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        if (textareadetails.items[0] != undefined && textareadetails.items[0].FormId != null && textareadetails.items[0].FormId != "" && textareadetails.items[0].FormId > 0) {
            FormId = textareadetails.items[0].FormId;
            Id = textareadetails.items[0].Id;
        }

        fieldDetailsPriority = textareadetails.items[0].FieldPriority;

        MandatoryValue = textMessBoxCheckMand == "yes" ? 1 : 0;

        EditFormFieldsArray(textMessNameVal, 7, "", MandatoryValue, FormId, Id, fieldIndexValue, editvalueid, MappingField, fieldDetailsPriority, "");
    }

    var fieldIndexValue = -1;
    var FormId = 0;
    var Id = 0;

    if (editvalueid != undefined) {
        var textareadetails = JSLINQ(allBindingFormFields).Where(function () {
            return (this.FormFieldIdentiferValue == editvalueid);
        });

        allBindingFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        if (textareadetails.items[0] != undefined && textareadetails.items[0].FormId != null && textareadetails.items[0].FormId != "" && textareadetails.items[0].FormId > 0) {
            FormId = textareadetails.items[0].FormId;
            Id = textareadetails.items[0].Id;
        }

        MandatoryValue = textMessBoxCheckMand == "yes" ? 1 : 0;
        EditFormBindingFieldsArray(textMessNameVal, 7, "", MandatoryValue, FormId, Id, fieldIndexValue, editvalueid, MappingField, "");
    }

    $("#addMessBoxName").val("");
    $("input[name='messboxMand']").prop("checked", false);
    $(this).parents('.formMessageBoxPopupwrap').removeClass('showPopup');
});

/* Drop down list start here */

var dropDownlblCountNum, dropDownListId, dropDownlblText, dropDownlblspc, selectDropdownlist, dropDownlblCont, dropDownInptCont;
$("#selectDropdown").click(function () {

    dropdownCount++;
    fieldrowindex++;
    FieldPriority++;

    if (cssObjectsFormBody.width == null) {
        errMessPop();
    }
    else if (dropdownCount == 1) {
        $(".frmdummyconts").remove();
        selectDropdownlist = "selectDropdownlist" + dropdownCount.toString();
        let dropdownCountNum = "inputDropDown" + dropdownCount.toString();
        dropDownlblCountNum = "dropDownSelectlbl" + dropdownCount.toString();
        dropDownlblCont = "dropDownlblWrap" + dropdownCount.toString();
        dropDownInptCont = "dropDownInptWrap" + dropdownCount.toString();

        $("#appendFields").append('<div id="' + dropdownCountNum + '" FieldType="8" class="inputWrap del"><div class="frmeditrow selectDropPar"><div id="' + dropDownlblCont + '" class="form-col-4 form-mb-col-12 labelStyle"><label class="labelName" id="' + dropDownlblCountNum + '">Country</label></div><div id="' + dropDownInptCont + '" class="form-col-8 form-mb-col-12 SelectDropId"><select id="' + selectDropdownlist + '" FieldType="8" RowIndex="' + fieldrowindex + '" class="input-form-control" required="required"><option value="Select">Select Country</option><option value="India">India</option><option value="Srilanka">Srilanka</option></select></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editOption" editattrvalue="' + dropdownCountNum + '" class="fas fa-pencil-alt" title="Edit Options"></span><span id="delParent" deleteattrvalue="' + dropdownCountNum + '" class="fas fa-trash-alt" title="Delete"></span></div></div>');

        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="dropDownlblWrap"],[id^="dropDownInptWrap"]').addClass('adCol-100');
            $('[id^="dropDownlblWrap"]').show();
        }

        if ($("#labelplaceholder").hasClass("lbl-active-bg")) {
            $('[id^="dropDownlblWrap"]').hide();
            $('[id^="dropDownInptWrap"]').addClass('adCol-100');
        }

        AddFormFieldsArray("Country", 8, fieldrowindex, "India,SriLanka", 1, 0, 0, dropdownCountNum, "", FieldPriority, "");
        AddFormBindingFieldsArray("Country", 8, fieldrowindex, "India,SriLanka", 1, 0, 0, dropdownCountNum, "", "");
    }
    else {
        $(".frmdummyconts").remove();
        selectDropdownlist = "selectDropdownlist" + dropdownCount.toString();
        let dropdownCountNum = "inputDropDown" + dropdownCount.toString();
        dropDownlblCountNum = "dropDownSelectlbl" + dropdownCount.toString();
        dropDownlblCont = "dropDownlblWrap" + dropdownCount.toString();
        dropDownInptCont = "dropDownInptWrap" + dropdownCount.toString();
        fieldnamedetails = "Country" + dropdownCount.toString();

        $("#appendFields").append('<div id="' + dropdownCountNum + '" FieldType="8" class="inputWrap del"><div class="frmeditrow selectDropPar"><div id="' + dropDownlblCont + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dropDownlblCountNum + '">' + fieldnamedetails + '</label></div><div id="' + dropDownInptCont + '" class="form-col-8 form-mb-col-12 SelectDropId"><select id="' + selectDropdownlist + '" FieldType="8" RowIndex="' + fieldrowindex + '" class="input-form-control" required="required"><option value="Select">Select Country</option><option value="India">India</option><option value="Srilanka">Srilanka</option></select></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editOption" editattrvalue="' + dropdownCountNum + '" class="fas fa-pencil-alt" title="Edit Options"></span><span id="delParent" deleteattrvalue="' + dropdownCountNum + '" class="fas fa-trash-alt" title="Delete"></span></div></div>');

        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="dropDownlblWrap"],[id^="dropDownInptWrap"]').addClass('adCol-100');
        }

        if ($("#labelplaceholder").hasClass("lbl-active-bg")) {
            $('[id^="dropDownlblWrap"]').hide();
            $('[id^="dropDownInptWrap"]').addClass('adCol-100');
        }
        AddFormFieldsArray(fieldnamedetails, 8, fieldrowindex, "India,SriLanka", 1, 0, 0, dropdownCountNum, "", FieldPriority, "");
        AddFormBindingFieldsArray(fieldnamedetails, 8, fieldrowindex, "India,SriLanka", 1, 0, 0, dropdownCountNum, "", "");
    }
});

var getIdValue, dropLabelName, checkDropReq;
var selectdroplblId;

$(".formWrapper").on('click', '#editOption', function () {
    $(".formDropDownPopupwrap").removeClass('hideEditPopup').addClass('showEditPopup');
    selectdroplblId = $(this).parent('.delIconWrap').prev('.selectDropPar').children('.labelStyle').find('label').attr('id');
    getIdValue = $(this).parent('.delIconWrap').prev('.selectDropPar').children(".SelectDropId").find('select').attr("id");
    dropLabelName = $(this).parent('.delIconWrap').prev('.selectDropPar').children(".labelStyle").find('label').text();
    checkDropReq = $(this).parent('.delIconWrap').prev('.selectDropPar').children(".SelectDropId").find('select').prop("required");
    $("#selectName").val(dropLabelName);
    var getOneDropDownVal = [];

    $("#selectNameMappingField").select2().val(0).change();

    FormUtil.CreatePlumb5FieldDropDown("selectNameMappingField");

    $("#" + getIdValue).find('option').not(':first').each(function () {
        var getOneDrpDownValue = $(this).val();
        getOneDropDownVal.push(getOneDrpDownValue);
    });

    $("#optionValue").val(getOneDropDownVal.toString());

    var editAttrvalueId = $(this).attr('editattrvalue');
    $("#getOptionValue").removeAttr("txtEditIdentifierValue").attr("txtEditIdentifierValue", editAttrvalueId);

    //Binding the mapping field
    var fielddetails = JSLINQ(allFormFields).Where(function () {
        return (this.FormFieldIdentiferValue == editAttrvalueId);
    });

    if (fielddetails.items[0] != undefined && fielddetails.items[0].ContactMappingField != null && fielddetails.items[0].ContactMappingField != "" && fielddetails.items[0].ContactMappingField.length > 0) {
        //$("#selectNameMappingField").val(fielddetails.items[0].ContactMappingField);
        $("#selectNameMappingField").select2().val(fielddetails.items[0].ContactMappingField).change();
    }

    if (fielddetails.items[0] != undefined && fielddetails.items[0] != null && fielddetails.items[0] != "") {
        if (fielddetails.items[0].Mandatory == 1)
            $("#singDropYes").prop("checked", true);
        else
            $("#singDropNo").prop("checked", true);
    }
    else {
        if (checkDropReq == true) {
            $("#singDropYes").prop("checked", true);
        }
        else {
            $("#singDropNo").prop("checked", true);
        }
    }
});

var singDropCheckReq;
$("#getOptionValue").click(function () {
    var selectlabelVal = $(this).parent('.popbtn').prevUntil('.selectNameWrap').find('#selectName').val();
    var optionsValue = $(this).parent('.popbtn').prev(".form-checkEdit-wrap").prev().prev().prev().find('#optionValue').val();

    if (selectlabelVal == "") {
        $("#erroptionValue").html(GlobalErrorList.CreateEmbeddedForm.DropDownEmptyValue);
        return false;
    }
    else {
        $("#erroptionValue").html("");
    }

    if (optionsValue == "") {
        $("#erroptionValue").html(GlobalErrorList.CreateEmbeddedForm.DropDownSubFieldsValue);
        return false;
    }
    else {
        $("#erroptionValue").html("");
    }

    var editvalueid = "";

    if ($(this).attr("txtEditIdentifierValue") != undefined) {
        editvalueid = $(this).attr("txtEditIdentifierValue");
    }

    var MappingField = $("#selectNameMappingField").val();

    var fieldcheck = JSLINQ(allFormFields).Where(function () {
        return (this.Name == $.trim(selectlabelVal) && this.FormFieldIdentiferValue != editvalueid);
    });

    if (fieldcheck.items[0] != undefined && fieldcheck.items[0].Name != null && fieldcheck.items[0].Name != "" && fieldcheck.items[0].Name.length > 0) {
        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.FieldNameError);
        return false;
    }

    if (MappingField != "0") {
        var mappingfielddetails = JSLINQ(allFormFields).Where(function () {
            return (this.ContactMappingField == MappingField && this.FormFieldIdentiferValue != editvalueid);
        });

        if (mappingfielddetails.items[0] != undefined && mappingfielddetails.items[0].ContactMappingField != null && mappingfielddetails.items[0].ContactMappingField != "" && mappingfielddetails.items[0].ContactMappingField.length > 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.MappingFieldError);
            return false;
        }
    }
    else {
        MappingField = "";
    }

    $("#" + selectdroplblId).html(selectlabelVal);
    singDropCheckReq = $('input[name="singDropMand"]:checked').val();

    if (singDropCheckReq == "yes") {
        $("#" + selectDropdownlist).attr('required', 'required');
    }
    else if (singDropCheckReq == "no") {
        $("#" + selectDropdownlist).removeAttr('required', 'required');
    }

    var splitValue = optionsValue.split(',');
    $('#' + getIdValue).find('option').remove();
    for (i = 0; i < splitValue.length; i++) {
        if (i == 0) {
            $('#' + getIdValue).append('<option value="' + selectlabelVal + '">Select ' + selectlabelVal + '</option>');
        }
        $('#' + getIdValue).append('<option value="' + splitValue[i] + '">' + splitValue[i] + '</option>')
    }

    //Saving the values to allformfields array
    var fieldIndexValue = -1;
    if (editvalueid != undefined) {

        var drpfielddetails = JSLINQ(allFormFields).Where(function () {
            return (this.FormFieldIdentiferValue == editvalueid);
        });

        allFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        var FormId = 0;
        var Id = 0;
        var fieldDetailsPriority = 0;

        if (drpfielddetails.items[0] != undefined && drpfielddetails.items[0].FormId != null && drpfielddetails.items[0].FormId != "" && drpfielddetails.items[0].FormId > 0) {
            FormId = drpfielddetails.items[0].FormId;
            Id = drpfielddetails.items[0].Id;
        }

        fieldDetailsPriority = drpfielddetails.items[0].FieldPriority;

        MandatoryValue = singDropCheckReq == "yes" ? 1 : 0;
        EditFormFieldsArray(selectlabelVal, 8, optionsValue, MandatoryValue, FormId, Id, fieldIndexValue, editvalueid, MappingField, fieldDetailsPriority, "");
    }

    //Saving the values to allformfields array
    var fieldIndexValue = -1;
    if (editvalueid != undefined) {

        var drpfielddetails = JSLINQ(allBindingFormFields).Where(function () {
            return (this.FormFieldIdentiferValue == editvalueid);
        });

        allBindingFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        var FormId = 0;
        var Id = 0;

        if (drpfielddetails.items[0] != undefined && drpfielddetails.items[0].FormId != null && drpfielddetails.items[0].FormId != "" && drpfielddetails.items[0].FormId > 0) {
            FormId = drpfielddetails.items[0].FormId;
            Id = drpfielddetails.items[0].Id;
        }

        MandatoryValue = singDropCheckReq == "yes" ? 1 : 0;
        EditFormBindingFieldsArray(selectlabelVal, 8, optionsValue, MandatoryValue, FormId, Id, fieldIndexValue, editvalueid, MappingField, "");
    }

    $("#optionValue").val("");
    $("#selectName").val("");
    $(".formDropDownPopupwrap").removeClass('showEditPopup').addClass('hideEditPopup');
});

/* Drop down list end here */

/* Date start here */

var dateBoxlblName, dateTextBoxId, dateInputId, dateBoxlblText, dateBoxIdVal, dateBoxlblId, dateBoxinputId, dateBoxPlaceId, dateBoxIsCheck, dateBoxCheckMand, dateBoxlblCont, dateBoxInptCont;
$("#dateFormat").click(function () {

    textBoxDateCount++;
    fieldrowindex++;
    FieldPriority++;

    if (cssObjectsFormBody.width == null) {
        errMessPop();
    }
    else if (textBoxDateCount == 0) {
        $(".frmdummyconts").remove();
        let textBoxDateNum = "inputDateWrap" + textBoxDateCount.toString();
        dateBoxlblName = "textBoxlblDate" + textBoxDateCount.toString();
        dateTextBoxId = "textBoxDateinput" + textBoxDateCount.toString();
        dateBoxlblCont = "dateBoxlblWrap" + textBoxDateCount.toString();
        dateBoxInptCont = "dateBoxInptWrap" + textBoxDateCount.toString();

        $("#appendFields").append('<div id="' + textBoxDateNum + '" FieldType="4" class="inputWrap del"><div class="frmeditrow dateBoxWrapForm"><div id="' + dateBoxlblCont + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dateBoxlblName + '" contenteditable="true">Date</label></div><div id="' + dateBoxInptCont + '" class="form-col-8 form-mb-col-12 dateWrapForm"><input id="' + dateTextBoxId + '" FieldType="4" RowIndex="' + fieldrowindex + '" class="input-form-control dtpickrinpt" type="text" name="dateVal" required="required" ></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editDate" editattrvalue="' + textBoxDateNum + '" class="fas fa-pencil-alt" title="Edit Date"></span><span id="delParent" deleteattrvalue="' + textBoxDateNum + '" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="dateBoxlblWrap"],[id^="dateBoxInptWrap"]').addClass('adCol-100');
        }

        if ($("#labelplaceholder").hasClass("lbl-active-bg")) {
            $('[id^="dateBoxlblWrap"]').addClass('adCol-100 lblAlignPlaceholder');
            $('[id^="dateBoxInptWrap"]').addClass('adCol-100');
        }
        AddFormFieldsArray("Date", 4, fieldrowindex, "", 1, 0, 0, textBoxDateNum, "", FieldPriority, "");
        AddFormBindingFieldsArray("Date", 4, fieldrowindex, "", 1, 0, 0, textBoxDateNum, "", "");
    }
    else {
        $(".frmdummyconts").remove();
        let textBoxDateNum = "inputDateWrap" + textBoxDateCount.toString();
        dateBoxlblName = "textBoxlblDate" + textBoxDateCount.toString();
        dateTextBoxId = "textBoxDateinput" + textBoxDateCount.toString();
        dateBoxlblCont = "dateBoxlblWrap" + textBoxDateCount.toString();
        dateBoxInptCont = "dateBoxInptWrap" + textBoxDateCount.toString();

        $("#appendFields").append('<div id="' + textBoxDateNum + '" FieldType="4" class="inputWrap del"><div class="frmeditrow dateBoxWrapForm"><div id="' + dateBoxlblCont + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dateBoxlblName + '" contenteditable="true">Date</label></div><div id="' + dateBoxInptCont + '" class="form-col-8 form-mb-col-12 dateWrapForm"><input id="' + dateTextBoxId + '" FieldType="4" RowIndex="' + fieldrowindex + '" class="input-form-control dtpickrinpt" type="text" name="dateVal" required="required" ></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editDate" editattrvalue="' + textBoxDateNum + '" class="fas fa-pencil-alt" title="Edit Date"></span><span id="delParent" deleteattrvalue="' + textBoxDateNum + '" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="dateBoxlblWrap"],[id^="dateBoxInptWrap"]').addClass('adCol-100');
        }

        if ($("#labelplaceholder").hasClass("lbl-active-bg")) {
            $('[id^="dateBoxlblWrap"]').addClass('adCol-100 lblAlignPlaceholder');
            $('[id^="dateBoxInptWrap"]').addClass('adCol-100');
        }
        AddFormFieldsArray("Date", 4, fieldrowindex, "", 1, 0, 0, textBoxDateNum, "", FieldPriority, "");
        AddFormBindingFieldsArray("Date", 4, fieldrowindex, "", 1, 0, 0, textBoxDateNum, "", "");
    }

    $(".formWrapper").on("keyup", "#" + dateBoxlblName, function () {
        dateInputId = $(this).parent('.labelStyle').next('.dateWrapForm').find('input').attr('id');
        dateBoxlblText = $(this).text();
        dateBoxIdVal = dateBoxlblText.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase();
        if (dateInputId == "") {
            $(this).parent('.labelStyle').next('.dateWrapForm').find('input').attr({
                "id": dateBoxIdVal,
                "name": dateBoxIdVal
            });
        }

        $("#" + dateInputId).attr({
            "id": dateBoxIdVal,
            "name": dateBoxIdVal
        });
    });
    dynamicdatepicker();
});

$(".formWrapper").on("click", "#editDate", function () {
    $(".formDateBoxPopupwrap").addClass("showPopup").removeClass("hidePopup");
    dateBoxlblId = $(this).parent('.delIconWrap').prev('.dateBoxWrapForm').children('.labelStyle').find('label').attr('id');
    dateBoxinputId = $(this).parent('.delIconWrap').prev('.dateBoxWrapForm').children('.dateWrapForm').find('input').attr('id');
    dateBoxPlaceId = $(this).parent('.delIconWrap').prev('.dateBoxWrapForm').find('label').text();
    $("#addDateBoxName").val(dateBoxPlaceId);
    dateBoxIsCheck = $(this).parent('.delIconWrap').prev('.dateBoxWrapForm').children('.dateWrapForm').find('input').prop("required");

    $("#addDateBoxNameMappingField").select2().val(0).change();

    FormUtil.CreatePlumb5FieldDropDown("addDateBoxNameMappingField");

    var editAttrvalueId = $(this).attr('editattrvalue');
    $("#addDateboxNamebtn").removeAttr("txtEditIdentifierValue").attr("txtEditIdentifierValue", editAttrvalueId);

    //Binding the mapping field
    var fielddetails = JSLINQ(allFormFields).Where(function () {
        return (this.FormFieldIdentiferValue == editAttrvalueId);
    });

    if (fielddetails.items[0] != undefined && fielddetails.items[0].ContactMappingField != null && fielddetails.items[0].ContactMappingField != "" && fielddetails.items[0].ContactMappingField.length > 0) {
        //$("#addDateBoxNameMappingField").val(fielddetails.items[0].ContactMappingField);
        $("#addDateBoxNameMappingField").select2().val(fielddetails.items[0].ContactMappingField).change();
    }

    if (fielddetails.items[0] != undefined && fielddetails.items[0] != null && fielddetails.items[0] != "") {
        if (fielddetails.items[0].Mandatory == 1)
            $("#dateBoxYes").prop("checked", true);
        else
            $("#dateBoxNo").prop("checked", false);
    }
    else {
        if (dateBoxIsCheck) {
            $("#dateBoxYes").prop("checked", true);
        }
        else {
            $("#dateBoxNo").prop("checked", false)
        }
    }
});

var dateBoxNameVal;
$("#addDateboxNamebtn").click(function () {
    dateBoxNameVal = $("#addDateBoxName").val();
    dateBoxIdVal = dateBoxNameVal.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase();

    if (dateBoxNameVal == "") {
        $("#addDateBoxErr").html(GlobalErrorList.CreateEmbeddedForm.DropDownEmptyValue);
        $("#addDateBoxName").focus;
        return false;
    }
    else {
        $("#addDateBoxErr").html("");
    }

    var editvalueid = "";

    if ($(this).attr("txtEditIdentifierValue") != undefined) {
        editvalueid = $(this).attr("txtEditIdentifierValue");
    }

    var MappingField = $("#addDateBoxNameMappingField").val();

    var datefielddetails = JSLINQ(allFormFields).Where(function () {
        return (this.Name == $.trim(dateBoxNameVal) && this.FormFieldIdentiferValue != editvalueid);
    });

    if (datefielddetails.items[0] != undefined && datefielddetails.items[0].Name != null && datefielddetails.items[0].Name != "" && datefielddetails.items[0].Name.length > 0) {
        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.FieldNameError);
        return false;
    }

    if (MappingField != "0") {
        var mappingfielddetails = JSLINQ(allFormFields).Where(function () {
            return (this.ContactMappingField == MappingField && this.FormFieldIdentiferValue != editvalueid);
        });

        if (mappingfielddetails.items[0] != undefined && mappingfielddetails.items[0].ContactMappingField != null && mappingfielddetails.items[0].ContactMappingField != "" && mappingfielddetails.items[0].ContactMappingField.length > 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.MappingFieldError);
            return false;
        }
    }
    else {
        MappingField = "";
    }

    $("#" + dateBoxinputId).attr({
        //"placeholder" : dateBoxNameVal,
        "id": dateBoxIdVal,
        "name": dateBoxIdVal
    });

    $("#" + dateBoxlblId).html(dateBoxNameVal);
    dateBoxCheckMand = $("input[name='dateboxMand']:checked").val();

    if (dateBoxCheckMand == "yes") {
        $("#dateBoxYes").attr("required", "required");
    }
    else if (dateBoxCheckMand == "no") {
        $("#dateBoxNo").removeAttr("required", "required");
    }

    //Saving the values to allformfields array
    var fieldIndexValue = -1;
    var FormId = 0;
    var Id = 0, fieldDetailsPriority = 0;

    if (editvalueid != undefined) {
        var datefieldetails = JSLINQ(allFormFields).Where(function () {
            return (this.FormFieldIdentiferValue == editvalueid);
        });

        allFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        if (datefieldetails.items[0] != undefined && datefieldetails.items[0].FormId != null && datefieldetails.items[0].FormId != "" && datefieldetails.items[0].FormId > 0) {
            FormId = datefieldetails.items[0].FormId;
            Id = datefieldetails.items[0].Id;
        }

        fieldDetailsPriority = datefieldetails.items[0].FieldPriority;

        MandatoryValue = dateBoxCheckMand == "yes" ? 1 : 0;
        EditFormFieldsArray(dateBoxNameVal, 4, "", MandatoryValue, FormId, Id, fieldIndexValue, editvalueid, MappingField, fieldDetailsPriority, "");
    }

    //Saving the values to allformfields array
    var fieldIndexValue = -1;
    var FormId = 0;
    var Id = 0;

    if (editvalueid != undefined) {

        var datefielddetails = JSLINQ(allBindingFormFields).Where(function () {
            return (this.FormFieldIdentiferValue == editvalueid);
        });

        allBindingFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        if (datefielddetails.items[0] != undefined && datefielddetails.items[0].FormId != null && datefielddetails.items[0].FormId != "" && datefielddetails.items[0].FormId > 0) {
            FormId = datefielddetails.items[0].FormId;
            Id = datefielddetails.items[0].Id;
        }

        MandatoryValue = dateBoxCheckMand == "yes" ? 1 : 0;
        EditFormBindingFieldsArray(dateBoxNameVal, 4, "", MandatoryValue, FormId, Id, fieldIndexValue, editvalueid, MappingField, "");
    }

    $("#addDateBoxName").val("");
    $("input[name='dateboxMand']").prop("checked", false);
    $(this).parents('.formDateBoxPopupwrap').removeClass('showPopup');
});

/* Date start end here */

/* Submit Button Start here */

$("#submitBtn").click(function () {

    fieldrowindex++;

    if (cssObjectsFormBody.width == null) {
        errMessPop();
    }
    else if ($("button").hasClass("savebtn")) {
        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.SubmitButtonMutlipleAddError);
        $("#bodyWidth").focus();
    }
    else {
        $(".frmdummyconts").remove();
        $("#appendFields").append('<div id="submitWrap" FieldType="24" class="btnWrap del"><div id="btnRow" class="frmeditrow parSubBtn"><div class="childSubBtn"><button FieldType="24" id="btnSubmit" type="submit" class="btn-style savebtn">Submit</button></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="editSubBtnName" class="fas fa-pencil-alt" editattrvalue="submitWrap" title="Edit Submit Name"></span><span id="delParent" deleteattrvalue="submitWrap" class="fas fa-trash-alt" title="Duplicate"></span></div></div>');

        AddFormBindingFieldsArray("Submit", 24, fieldrowindex, "", 1, 0, 0, "submitWrap", "", "");
    }
});

var getSubmitBtnVal;
$(".formWrapper").on('click', "#editSubBtnName", function () {
    $(".formSubmitPopupwrap").addClass("showPopup").removeClass("hidePopup");
    getSubmitBtnVal = $(this).parent(".delIconWrap").prev(".parSubBtn").children(".childSubBtn").find(".savebtn").text();
    $("#getSubBtnName").val(getSubmitBtnVal);

    $("#addSubmitName").removeAttr("txtEditIdentifierValue").attr("txtEditIdentifierValue", "submitWrap");
});

$("#addSubmitName").click(function () {
    var getSubBtnVal = $("#getSubBtnName").val();

    if (getSubBtnVal == "") {
        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterButtonName);
        return false;
    }
    else {
        $("#addSubBtnErr").html(" ");
    }

    formDetails.ButtonName = $.trim(getSubBtnVal);

    $("#btnSubmit").html(getSubBtnVal);

    //Saving the values to allformfields array
    var fieldIndexValue = -1;
    if ($("#addSubmitName").attr("txtEditIdentifierValue") != undefined) {
        var editvalueid = $("#addSubmitName").attr("txtEditIdentifierValue");

        allBindingFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        EditFormBindingFieldsArray(getSubBtnVal, 24, "", 1, 0, 0, fieldIndexValue, editvalueid, "", "");
    }

    $("#getSubBtnName").val("")
    $(".formSubmitPopupwrap").addClass("hidePopup").removeClass("showPopup");
    //setTimeout(function(){ $("#addSubBtnErr").html(" "); }, 5000);
});

/* Submit Button End here */

//CheckBox Start Here

var checkboxHTML, addMoreCheckbox, addonemoreCheckBox, checkBoxlblCont, checkBoxInptCont;
var checkBoxcount = 0;

$("#checkBox").click(function () {
    checkBoxcount++;
    fieldrowindex++;
    FieldPriority++;

    if (cssObjectsFormBody.width == null) {
        errMessPop();
    } else {
        $(".frmdummyconts").remove();
        var checkBoxNum = "inputCheckBox" + checkBoxcount.toString();
        checkBoxlblCont = "checkBoxlblWrap" + checkBoxcount.toString();
        checkBoxInptCont = "checkBoxInptWrap" + checkBoxcount.toString();
        fieldNameDetails = "Gender" + checkBoxcount.toString();

        checkboxHTML = '<div id="' + checkBoxNum + '" class="form-check-wrap del">\
					 <div class="frmeditrow labelTopBot">\
					<div id="'+ checkBoxlblCont + '" class="form-col-4 form-mb-col-12 w-100">\
					<div class="labelWrap">\
					<label>'+ fieldNameDetails + '</label>\
				   </div>\
					   </div>\
					<div id="'+ checkBoxInptCont + '" FieldType="10" RowIndex="' + fieldrowindex + '" class="form-col-8 form-mb-col-12 w-100 addcheckbox">\
						<div class="check-container inline-check">\
							<input type="checkbox" class="input-check checkbxinptlnth" id="Male" value="Male" name="'+ fieldNameDetails + '">\
							<label id="addLabelval" for="Male" class="label-check">Male</label>\
						</div>\
						<div class="check-container inline-check">\
							<input type="checkbox" class="input-check checkbxinptlnth" id="Female" value="Female" name="'+ fieldNameDetails + '">\
							<label id="addLabelval" for="Female" class="label-check">Female</label>\
						</div>\
					   </div>\
				</div>\
				<div class="delIconWrap">\
					<span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="alignCheckBox" class="fas fa-list-ul" checkalignattrvalue="' + checkBoxNum + '" title="Align Vertical"></span>\<span id="editCheckBoxbtn" editattrvalue="' + checkBoxNum + '" class="fas fa-pencil-alt" title="Edit"></span>\<span id="delParent" deleteattrvalue="' + checkBoxNum + '" class="fas fa-trash-alt" title="Delete"></span>\</div>\
			   </div>';

        addMoreCheckbox = '<div class="check-container inline-check">\
							<input type="checkbox" class="input-check checkbxinptlnth" id="Male" value="Male" name="'+ fieldNameDetails + '">\
							<label id="addLabelval" for="Male" class="label-check">Male</label>\
						</div>\
						<div class="check-container inline-check">\
							<input type="checkbox" class="input-check checkbxinptlnth" id="Female" value="Female" name="'+ fieldNameDetails + '">\
							<label id="addLabelval" for="Female" class="label-check">Female</label>\
						</div>\
					   </div>';

        addonemoreCheckBox = '<div class="check-container inline-check">\
							<input type="checkbox" class="input-check checkbxinptlnth" id="Others" value="Others" name="Others">\
							<label id="addLabelval" class="label-check">Others</label>\
						</div>';
        $("#appendFields").append(checkboxHTML);

        AddFormFieldsArray(fieldNameDetails, 10, fieldrowindex, "Male,Female", 1, 0, 0, checkBoxNum, "", FieldPriority, "Horizontal");
        AddFormBindingFieldsArray(fieldNameDetails, 10, fieldrowindex, "Male,Female", 1, 0, 0, checkBoxNum, "", "Horizontal");
    }

    if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
        $('[id^="checkBoxlblWrap"],[id^="checkBoxInptWrap"]').addClass('adCol-100');
    }

    if ($("#labelplaceholder").hasClass("lbl-active-bg")) {
        $('[id^="checkBoxlblWrap"],[id^="checkBoxInptWrap"]').addClass('adCol-100');
    }
});

var getCheckbxlblId, getCheckbxlbltxt, getCheckbxinptwrpId, getCheckbxbtnlist, addCheckbxnametag;
$(".formWrapper").on('click', '#editCheckBoxbtn', function () {
    $(".formCheckbxPopupwrap").addClass("showPopup").removeClass("hidePopup");
    getCheckbxlblId = $(this).parent().prev().children().attr("id");
    getCheckbxlbltxt = $("#" + getCheckbxlblId).children().find('label').text();
    getCheckbxinptwrpId = $("#" + getCheckbxlblId).next().attr("id");
    $("#addcheckbxlbl").val(getCheckbxlbltxt);

    $("#checkbxlistMappingField").select2().val(0).change();

    FormUtil.CreatePlumb5FieldDropDown("checkbxlistMappingField");

    var editAttrvalueId = $(this).attr('editattrvalue');
    $("#addcheckbxbtns").removeAttr("txtEditIdentifierValue").attr("txtEditIdentifierValue", editAttrvalueId);

    //Binding the mapping field
    var fielddetails = JSLINQ(allFormFields).Where(function () {
        return (this.FormFieldIdentiferValue == editAttrvalueId);
    });

    if (fielddetails.items[0] != undefined && fielddetails.items[0].ContactMappingField != null && fielddetails.items[0].ContactMappingField != "" && fielddetails.items[0].ContactMappingField.length > 0) {
        //$("#checkbxlistMappingField").val(fielddetails.items[0].ContactMappingField);
        $("#checkbxlistMappingField").select2().val(fielddetails.items[0].ContactMappingField).change();
    }

    getCheckbxbtnlist = [];

    $("#" + getCheckbxinptwrpId + " .input-check.checkbxinptlnth").each(function () {
        var getCheckbxnameval = $(this).val();
        getCheckbxbtnlist.push(getCheckbxnameval);
    });

    var checkbxischecked = $("#" + getCheckbxinptwrpId + " .input-check.checkbxinptlnth").prop("required");

    if (fielddetails.items[0] != undefined && fielddetails.items[0] != null && fielddetails.items[0] != "") {
        if (fielddetails.items[0].Mandatory == 1)
            $("#checkbxYes").prop("checked", true);
        else
            $("#checkbxNo").prop("checked", true);

        if (fielddetails.items[0].SubFields != null && fielddetails.items[0].SubFields != "" && fielddetails.items[0].SubFields.length > 0) {
            getCheckbxbtnlist = fielddetails.items[0].SubFields;
        }
    }
    else {
        if (checkbxischecked == true)
            $("#checkbxYes").prop("checked", true);
        else
            $("#checkbxNo").prop("checked", true);
    }

    $("#checkbxlist").val(getCheckbxbtnlist.toString());
});

$("#addcheckbxbtns").click(function () {
    var getCheckbxlblname = $("#addcheckbxlbl").val();
    var getCheckbxbtnlistnam = $("#checkbxlist").val();

    if (getCheckbxlblname == "") {
        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterValue);
        $("#addcheckbxlbl").focus();
        return false;
    }

    if (getCheckbxbtnlistnam == "") {
        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterValue);
        $("#checkbxlist").focus();
        return false;
    }

    var MappingField = $("#checkbxlistMappingField").val();
    if (MappingField != null && MappingField != "" && MappingField.length > 0) {
        if (MappingField == "Unsubscribe" || MappingField == "IsSmsUnsubscribe" || MappingField == "IsWhatsAppOptIn") {
            if (getCheckbxbtnlistnam != "" && getCheckbxbtnlistnam != null && getCheckbxbtnlistnam.length > 0) {
                $("#checkbxlist").val("").val("Yes");
                getCheckbxbtnlistnam = "Yes";
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.OptinFieldMapping);
            }
        }
    }

    var editvalueid = "";

    if ($(this).attr("txtEditIdentifierValue") != undefined) {
        editvalueid = $(this).attr("txtEditIdentifierValue");
    }

    var radiofielddetails = JSLINQ(allFormFields).Where(function () {
        return (this.Name == $.trim(getCheckbxlblname) && this.FormFieldIdentiferValue != editvalueid);
    });

    if (radiofielddetails.items[0] != undefined && radiofielddetails.items[0].Name != null && radiofielddetails.items[0].Name != "" && radiofielddetails.items[0].Name.length > 0) {
        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.FieldNameError);
        return false;
    }

    if (MappingField != "0") {
        var mappingfielddetails = JSLINQ(allFormFields).Where(function () {
            return (this.ContactMappingField == MappingField && this.FormFieldIdentiferValue != editvalueid);
        });

        if (mappingfielddetails.items[0] != undefined && mappingfielddetails.items[0].ContactMappingField != null && mappingfielddetails.items[0].ContactMappingField != "" && mappingfielddetails.items[0].ContactMappingField.length > 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.MappingFieldError);
            return false;
        }
    }
    else {
        MappingField = "";
    }

    var CheckBoxDetails = JSLINQ(allFormFields).Where(function () {
        return (this.FormFieldIdentiferValue == editvalueid);
    });

    var ClassName = "inline-check";

    if (CheckBoxDetails.items[0].FieldDisplay != undefined && CheckBoxDetails.items[0].FieldDisplay != null && CheckBoxDetails.items[0].FieldDisplay != "" && CheckBoxDetails.items[0].FieldDisplay.length > 0) {
        if (CheckBoxDetails.items[0].FieldDisplay == "Vertical") {
            ClassName = "";
        }
    }

    $("#" + getCheckbxlblId).children().find('label').html(getCheckbxlblname);
    addCheckbxnametag = getCheckbxlblname.replace(/\s/g, '').toLowerCase();
    var getsplitCheckbxbtnname = getCheckbxbtnlistnam.split(",");

    $("#" + getCheckbxinptwrpId).html(" ");

    for (i = 0; i < getsplitCheckbxbtnname.length; i++) {
        $("#" + getCheckbxinptwrpId).append(`<div class="check-container ${ClassName}">
		<input type="checkbox" class="input-check checkbxinptlnth" id="${getsplitCheckbxbtnname[i].replace(/\s/g, '').toLowerCase()}" value="${getsplitCheckbxbtnname[i]}" name="${addCheckbxnametag}">
		<label id="${getsplitCheckbxbtnname[i].replace(/\s/g, '').toLowerCase()}" for="${getsplitCheckbxbtnname[i].replace(/\s/g, '').toLowerCase()}" class="label-check">${getsplitCheckbxbtnname[i]}</label>
	</div>`);
    }

    var checkbxbtnmandat = $('input[name="checkbxMand"]:checked').val();

    if (checkbxbtnmandat == "no")
        $("#" + getCheckbxinptwrpId + " .input-check.checkbxinptlnth").prop('required', false);
    else
        $("#" + getCheckbxinptwrpId + " .input-check.checkbxinptlnth").prop('required', true);

    //Saving the values to allformfields array
    var fieldIndexValue = -1;
    var FormId = 0;
    var Id = 0, fieldDetailsPriority = 0;

    if (editvalueid != undefined) {
        var chkfieldetails = JSLINQ(allFormFields).Where(function () {
            return (this.FormFieldIdentiferValue == editvalueid);
        });

        allFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        if (chkfieldetails.items[0] != undefined && chkfieldetails.items[0].FormId != null && chkfieldetails.items[0].FormId != "" && chkfieldetails.items[0].FormId > 0) {
            FormId = chkfieldetails.items[0].FormId;
            Id = chkfieldetails.items[0].Id;
        }

        fieldDetailsPriority = chkfieldetails.items[0].FieldPriority;

        MandatoryValue = checkbxbtnmandat == "yes" ? 1 : 0;
        EditFormFieldsArray(getCheckbxlblname, 10, getCheckbxbtnlistnam, MandatoryValue, FormId, Id, fieldIndexValue, editvalueid, MappingField, fieldDetailsPriority, chkfieldetails.items[0].FieldDisplay);
    }

    //Saving the values to allformfields array
    var fieldIndexValue = -1;
    var FormId = 0;
    var Id = 0;

    if (editvalueid != undefined) {

        var chkfieldetails = JSLINQ(allBindingFormFields).Where(function () {
            return (this.FormFieldIdentiferValue == editvalueid);
        });

        allBindingFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        if (chkfieldetails.items[0] != undefined && chkfieldetails.items[0].FormId != null && chkfieldetails.items[0].FormId != "" && chkfieldetails.items[0].FormId > 0) {
            FormId = chkfieldetails.items[0].FormId;
            Id = chkfieldetails.items[0].Id;
        }

        MandatoryValue = checkbxbtnmandat == "yes" ? 1 : 0;
        EditFormBindingFieldsArray(getCheckbxlblname, 10, getCheckbxbtnlistnam, MandatoryValue, FormId, Id, fieldIndexValue, editvalueid, MappingField, chkfieldetails.items[0].FieldDisplay);
    }

    $("#addcheckbxlbl").val("");
    $("#checkbxlist").val("");
    $('input[name="checkbxMand"]').prop("checked", false);
    $('.formCheckbxPopupwrap').removeClass('showPopup').addClass('hidePopup');
});

$('.formWrapper').on('click', '#alignCheckBox', function () {
    $(this).parents('.form-check-wrap').find('.check-container').toggleClass('inline-check');
    $(this).toggleClass('listBtnBg');

    var editvalueid = "";

    if ($(this).attr("checkalignattrvalue") != undefined) {
        editvalueid = $(this).attr("checkalignattrvalue");

        //Saving the values to allformfields array
        var fieldIndexValue = -1;
        var FormId = 0;
        var Id = 0, fieldDetailsPriority = 0;
        var FieldDisplay = "";

        if (editvalueid != undefined) {
            var chkfieldetails = JSLINQ(allFormFields).Where(function () {
                return (this.FormFieldIdentiferValue == editvalueid);
            });

            allFormFields.map(function (item, i) {
                if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
            });

            if (chkfieldetails.items[0] != undefined && chkfieldetails.items[0].FormId != null && chkfieldetails.items[0].FormId != "" && chkfieldetails.items[0].FormId > 0) {
                FormId = chkfieldetails.items[0].FormId;
                Id = chkfieldetails.items[0].Id;
            }

            fieldDetailsPriority = chkfieldetails.items[0].FieldPriority;

            if (chkfieldetails.items[0] != undefined && chkfieldetails.items[0].FieldDisplay != null && chkfieldetails.items[0].FieldDisplay != "" && chkfieldetails.items[0].FieldDisplay.length > 0) {
                if (chkfieldetails.items[0].FieldDisplay == "Vertical")
                    FieldDisplay = "Horizontal";
                else if (chkfieldetails.items[0].FieldDisplay == "Horizontal")
                    FieldDisplay = "Vertical";
            }

            EditFormFieldsArray(chkfieldetails.items[0].Name, 10, chkfieldetails.items[0].SubFields, chkfieldetails.items[0].Mandatory, FormId, Id, fieldIndexValue, editvalueid, chkfieldetails.items[0].ContactMappingField, fieldDetailsPriority, FieldDisplay);
        }

        //Saving the values to allformfields array
        var fieldIndexValue = -1;
        var FormId = 0;
        var Id = 0;
        var FieldDisplay = "";

        if (editvalueid != undefined) {

            var chkfieldetails = JSLINQ(allBindingFormFields).Where(function () {
                return (this.FormFieldIdentiferValue == editvalueid);
            });

            allBindingFormFields.map(function (item, i) {
                if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
            });

            if (chkfieldetails.items[0] != undefined && chkfieldetails.items[0].FormId != null && chkfieldetails.items[0].FormId != "" && chkfieldetails.items[0].FormId > 0) {
                FormId = chkfieldetails.items[0].FormId;
                Id = chkfieldetails.items[0].Id;
            }

            if (chkfieldetails.items[0] != undefined && chkfieldetails.items[0].FieldDisplay != null && chkfieldetails.items[0].FieldDisplay != "" && chkfieldetails.items[0].FieldDisplay.length > 0) {
                if (chkfieldetails.items[0].FieldDisplay == "Vertical")
                    FieldDisplay = "Horizontal";
                else if (chkfieldetails.items[0].FieldDisplay == "Horizontal")
                    FieldDisplay = "Vertical";
            }

            EditFormBindingFieldsArray(chkfieldetails.items[0].Name, 10, chkfieldetails.items[0].SubFields, chkfieldetails.items[0].Mandatory, FormId, Id, fieldIndexValue, editvalueid, chkfieldetails.items[0].ContactMappingField, FieldDisplay);
        }
    }
});

$(document).on('click', '#delParent', function () {

    ShowPageLoading();

    $(this).closest(".del").remove();
    dbleTextBoxLay--;

    var fieldIndexValue = -1;
    if ($(this).attr('deleteattrvalue') != undefined) {
        var deleteAttrvalueId = $(this).attr('deleteattrvalue');

        allFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === deleteAttrvalueId) fieldIndexValue = i
        });

        if (fieldIndexValue > -1) {

            var deletedetails = JSLINQ(allFormFields).Where(function () {
                return (this.FormFieldIdentiferValue == deleteAttrvalueId);
            });

            if (deletedetails != null && deletedetails.items[0] != undefined && deletedetails.items[0].Id > 0) {
                $.ajax({
                    url: "/CaptureForm/ManageEmbeddedForms/DeleteField",
                    data: JSON.stringify({ 'AccountId': Plumb5AccountId, 'Id': deletedetails.items[0].Id }),
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; },
                    success: function (response) {
                        if (response) {
                            allFormFields.splice(fieldIndexValue, 1);
                            ShowSuccessMessage(GlobalErrorList.CreateEmbeddedForm.FieldDeletionSuccessStatus);
                            DeleteResponseSettings(deletedetails.items[0].Name);
                        }
                        else if (!response) {
                            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.SessionExpiryError);
                        }
                        HidePageLoading();
                    },
                    error: ShowAjaxError
                });
            }
            else {
                allFormFields.splice(fieldIndexValue, 1);
                DeleteResponseSettings(deletedetails.items[0].Name);
            }
        }
    }

    var bindingformfieldIndexValue = -1;

    if ($(this).attr('deleteattrvalue') != undefined) {
        var deleteAttrvalueId = $(this).attr('deleteattrvalue');

        allBindingFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === deleteAttrvalueId) bindingformfieldIndexValue = i
        });

        if (bindingformfieldIndexValue > -1) {

            var deletedetails = JSLINQ(allBindingFormFields).Where(function () {
                return (this.FormFieldIdentiferValue == deleteAttrvalueId);
            });

            if (deletedetails != null && deletedetails.items[0] != undefined && deletedetails.items[0].Id > 0) {
                $.ajax({
                    url: "/CaptureForm/ManageEmbeddedForms/DeleteFormBindingField",
                    data: JSON.stringify({ 'AccountId': Plumb5AccountId, 'Id': deletedetails.items[0].Id }),
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; },
                    success: function (response) {
                        allBindingFormFields.splice(bindingformfieldIndexValue, 1);
                        HidePageLoading();
                    },
                    error: ShowAjaxError
                });
            }
            else {
                allBindingFormFields.splice(bindingformfieldIndexValue, 1);
            }
        }
    }

    if ($('[id^="doubleTextBox"]').length == 1) {
        $('#appendFields [id^="doubleTextBox"]').attr("id", "doubleTextBox1");
    }
    setTimeout(function () { HidePageLoading(); }, 1000);
});

function DeleteResponseSettings(FieldName) {
    if (responseSettings != null && responseSettings != undefined && responseSettings != "") {

        if ($("#ui_chkReportMail").is(":checked")) {
            if ($("#ui_radReportMailCondition").is(":checked")) {

                var ResponseFieldName = "";

                if ($("input:radio[name='ReportToMailDependencyFieldOption']:checked").attr("field") != undefined) {
                    ResponseFieldName = $("input:radio[name='ReportToMailDependencyFieldOption']:checked").attr("field");
                }

                if (ResponseFieldName == FieldName) {

                    if ($("#dvReportToMailConditionalFields > div").length > 0 && $("#dvReportToMailConditionalFields > #dv_" + ResponseFieldName + ""))
                        $("#dvReportToMailConditionalFields > #dv_" + ResponseFieldName + "").remove();

                    if ($("#dvReportToMailConditionalOptions > div").length > 0)
                        $("#dvReportToMailConditionalOptions > div").remove();

                    BindReportToMailDetails();
                    responseSettings.ReportToDetailsByMail = "";
                    responseSettings.ReportToFormsMailFieldId = 0;
                    responseMailSettingFieldIndex = -1;
                }
                else {
                    if ($("#dvReportToMailConditionalFields > div").length > 0 && $("#dvReportToMailConditionalFields > #dv_" + FieldName + "")) {
                        $("#dvReportToMailConditionalFields > #dv_" + FieldName + "").remove();
                        FormUtil.MailGetValues();
                    }
                }
            }
        }

        if ($("#ui_chkReportSMS").is(":checked")) {

            if ($("#ui_radReportSMSCondition").is(":checked")) {

                var ResponseFieldName = "";

                if ($("input:radio[name='ReportToSMSDependencyFieldOption']:checked").attr("field") != undefined) {
                    ResponseFieldName = $("input:radio[name='ReportToSMSDependencyFieldOption']:checked").attr("field");
                }

                if (ResponseFieldName == FieldName) {

                    if ($("#dvReportToSMSConditionalFields > div").length > 0 && $("#dvReportToSMSConditionalFields > #dv_" + ResponseFieldName + ""))
                        $("#dvReportToSMSConditionalFields > #dv_" + ResponseFieldName + "").remove();

                    if ($("#dvReportToSMSConditionalOptions > div").length > 0)
                        $("#dvReportToSMSConditionalOptions > div").remove();

                    BindReportToSmsDetails();
                    responseSettings.ReportToDetailsBySMS = "";
                    responseSettings.ReportToFormsSMSFieldId = 0;
                    responseSMSSettingFieldIndex = -1;
                }
                else {
                    if ($("#dvReportToSMSConditionalFields > div").length > 0 && $("#dvReportToSMSConditionalFields > #dv_" + FieldName + "")) {
                        $("#dvReportToSMSConditionalFields > #dv_" + FieldName + "").remove();
                        FormUtil.SMSGetValues();
                    }
                }
            }
        }
        if ($("#ui_chkReportWhatsApp").is(":checked")) {

            if ($("#ui_radReportWhatsAppCondition").is(":checked")) {

                var ResponseFieldName = "";

                if ($("input:radio[name='ReportToWhatsAppDependencyFieldOption']:checked").attr("field") != undefined) {
                    ResponseFieldName = $("input:radio[name='ReportToWhatsAppDependencyFieldOption']:checked").attr("field");
                }

                if (ResponseFieldName == FieldName) {

                    if ($("#dvReportToWhatsAppConditionalFields > div").length > 0 && $("#dvReportToWhatsAppConditionalFields > #dv_" + ResponseFieldName + ""))
                        $("#dvReportToWhatsAppConditionalFields > #dv_" + ResponseFieldName + "").remove();

                    if ($("#dvReportToWhatsAppConditionalOptions > div").length > 0)
                        $("#dvReportToWhatsAppConditionalOptions > div").remove();

                    BindReportToWhatsAppDetails();
                    responseSettings.ReportToDetailsByWhatsApp = "";
                    responseSettings.ReportToFormsWhatsAppFieldId = 0;
                    responseWhatsAppSettingFieldIndex = -1;
                }
                else {
                    if ($("#dvReportToWhatsAppConditionalFields > div").length > 0 && $("#dvReportToWhatsAppConditionalFields > #dv_" + FieldName + "")) {
                        $("#dvReportToWhatsAppConditionalFields > #dv_" + FieldName + "").remove();
                        FormUtil.WhatsAppGetValues();
                    }
                }
            }
        }
        if ($("#ui_chkSendMailOut").is(":checked")) {

            if ($("#ui_chkConditionalMailOut").is(":checked")) {

                var ResponseFieldName = "";

                if ($("input:radio[name='MailOutDependencyFieldOption']:checked").attr("field") != undefined) {
                    ResponseFieldName = $("input:radio[name='MailOutDependencyFieldOption']:checked").attr("field");
                }

                if (ResponseFieldName == FieldName) {

                    if ($("#dvMailoutConditionalFields > div").length > 0 && $("#dvMailoutConditionalFields > #dv_" + ResponseFieldName + ""))
                        $("#dvMailoutConditionalFields > #dv_" + ResponseFieldName + "").remove();

                    if ($("#dvMailoutConditionalOptions > div").length > 0)
                        $("#dvMailoutConditionalOptions > div").remove();

                    BindMailOutDetails();
                    responseSettings.MailIdList = "";
                    responseSettings.MailOutDependencyFieldId = 0;
                    responseMailOutSettingIndex = -1;
                }
                else {
                    if ($("#dvMailoutConditionalFields > div").length > 0 && $("#dvMailoutConditionalFields > #dv_" + FieldName + "")) {
                        $("#dvMailoutConditionalFields > #dv_" + FieldName + "").remove();
                        FormUtil.MailOutSetting();
                    }
                }
            }
        }

        if ($("#ui_chkSendSmsOut").is(":checked")) {

            if ($("#ui_chkConditionalSmsOut").is(":checked")) {
                var ResponseFieldName = "";

                if ($("input:radio[name='SmsOutDependencyFieldOption']:checked").attr("field") != undefined) {
                    ResponseFieldName = $("input:radio[name='SmsOutDependencyFieldOption']:checked").attr("field");
                }

                if (ResponseFieldName == FieldName) {

                    if ($("#dvSmsOutConditionalFields > div").length > 0 && $("#dvSmsOutConditionalFields > #dv_" + ResponseFieldName + ""))
                        $("#dvSmsOutConditionalFields > #dv_" + ResponseFieldName + "").remove();

                    if ($("#dvSmsOutConditionalOptions > div").length > 0)
                        $("#dvSmsOutConditionalOptions > div").remove();

                    BindSmsOutDetails();
                    responseSettings.SmsOutDependencyFieldId = 0;
                    responseSmsOutSettingIndex = -1;
                }
                else {
                    if ($("#dvSmsOutConditionalFields > div").length > 0 && $("#dvSmsOutConditionalFields > #dv_" + FieldName + "")) {
                        $("#dvSmsOutConditionalFields > #dv_" + FieldName + "").remove();
                        FormUtil.SmsOutSetting();
                    }
                }
            }
        }
        if ($("#ui_chkSendWhatsAppOut").is(":checked")) {

            if ($("#ui_chkConditionalWhatsAppOut").is(":checked")) {
                var ResponseFieldName = "";

                if ($("input:radio[name='WhatsAppOutDependencyFieldOption']:checked").attr("field") != undefined) {
                    ResponseFieldName = $("input:radio[name='WhatsAppOutDependencyFieldOption']:checked").attr("field");
                }

                if (ResponseFieldName == FieldName) {

                    if ($("#dvWhatsAppOutConditionalFields > div").length > 0 && $("#dvWhatsAppOutConditionalFields > #dv_" + ResponseFieldName + ""))
                        $("#dvWhatsAppOutConditionalFields > #dv_" + ResponseFieldName + "").remove();

                    if ($("#dvWhatsAppOutConditionalOptions > div").length > 0)
                        $("#dvWhatsAppOutConditionalOptions > div").remove();

                    BindWhatsAppOutDetails();
                    responseSettings.WhatsAppOutDependencyFieldId = 0;
                    responseWhatsAppOutSettingIndex = -1;
                }
                else {
                    if ($("#dvWhatsAppOutConditionalFields > div").length > 0 && $("#dvWhatsAppOutConditionalFields > #dv_" + FieldName + "")) {
                        $("#dvWhatsAppOutConditionalFields > #dv_" + FieldName + "").remove();
                        FormUtil.WhatsAppOutSetting();
                    }
                }
            }
        }
        if ($("#ui_chkSalesPerson").is(":checked")) {

            if ($("#ui_radConditionalAssignToSales").is(":checked")) {
                var ResponseFieldName = "";

                if ($("input:radio[name='AssignToSalesDependencyFieldOption']:checked").attr("field") != undefined) {
                    ResponseFieldName = $("input:radio[name='AssignToSalesDependencyFieldOption']:checked").attr("field");
                }

                if (ResponseFieldName == FieldName) {

                    if ($("#dvAssignToSalesConditionalFields > div").length > 0 && $("#dvAssignToSalesConditionalFields > #dv_" + ResponseFieldName + ""))
                        $("#dvAssignToSalesConditionalFields > #dv_" + ResponseFieldName + "").remove();

                    if ($("#dvAssignToSalesConditionalOptions > div").length > 0)
                        $("#dvAssignToSalesConditionalOptions > div").remove();

                    BindAssignToSalesDetails();
                    responseSettings.AccesLeadToUserId = "";
                    responseSettings.ReportToAssignLeadToUserIdFieldId = 0;
                    responseSalesAssigmentSettingIndex = -1;
                }
                else {
                    if ($("#dvAssignToSalesConditionalFields > div").length > 0 && $("#dvAssignToSalesConditionalFields > #dv_" + FieldName + "")) {
                        $("#dvAssignToSalesConditionalFields > #dv_" + FieldName + "").remove();
                        FormUtil.AssignmentGetValues();
                    }
                }
            }
        }

        if ($("#ui_chkRedirectUrl").is(":checked")) {

            if ($("#ui_chkConditionalRedirectUrl").is(":checked")) {

                var ResponseFieldName = "";

                if ($("input:radio[name='RedirectUrlDependencyFieldOption']:checked").attr("field") != undefined) {
                    ResponseFieldName = $("input:radio[name='RedirectUrlDependencyFieldOption']:checked").attr("field");
                }

                if (ResponseFieldName == FieldName) {

                    if ($("#dvRedirectUrlConditionalFields > div").length > 0 && $("#dvRedirectUrlConditionalFields > #dv_" + ResponseFieldName + ""))
                        $("#dvRedirectUrlConditionalFields > #dv_" + ResponseFieldName + "").remove();

                    if ($("#dvRedirectUrlConditionalOptions > div").length > 0)
                        $("#dvRedirectUrlConditionalOptions > div").remove();

                    BindRedirectUrlDetails();
                    responseSettings.RedirectUrl = "";
                    responseRedirectUrlSettingIndex = -1;
                }
                else {
                    if ($("#dvRedirectUrlConditionalFields > div").length > 0 && $("#dvRedirectUrlConditionalFields > #dv_" + FieldName + "")) {
                        $("#dvRedirectUrlConditionalFields > #dv_" + FieldName + "").remove();
                        FormUtil.SMSGetValues();
                        FormUtil.WhatsAppGetValues();
                    }
                }
            }
        }

        if ($("#ui_chkGroups").is(":checked")) {
            AutoAssignToGroupIdIndexValues.length = 0;

            if ($("#ui_chkConditionalGroups").is(":checked")) {
                if ($("input:checkbox[name='AutoAssignGroupDependencyFieldOption']:checked").length > 0) {

                    $("input:checkbox[name='AutoAssignGroupDependencyFieldOption']:checked").map(function () {
                        var FieldValues = { Id: "", FieldName: "" };
                        FieldValues.Id = $(this).val();
                        FieldValues.FieldName = $(this).attr("field");
                        AutoAssignToGroupIdIndexValues.push(FieldValues);
                    });

                    if (AutoAssignToGroupIdIndexValues != null && AutoAssignToGroupIdIndexValues.length > 0) {
                        for (var i = 0; i < AutoAssignToGroupIdIndexValues.length; i++) {

                            if (AutoAssignToGroupIdIndexValues[i].FieldName == FieldName) {

                                if ($("#dvGroupsConditionalFields > div").length > 0 && $("#dvGroupsConditionalFields > #dv_" + AutoAssignToGroupIdIndexValues[i].FieldName + ""))
                                    $("#dvGroupsConditionalFields > #dv_" + AutoAssignToGroupIdIndexValues[i].FieldName + "").remove();

                                BindAutoAssignGroupDetails();
                                responseSettings.RedirectUrl = "";
                                responseRedirectUrlSettingIndex = -1;
                            }
                            else {
                                if ($("#dvGroupsConditionalFields > div").length > 0 && $("#dvGroupsConditionalFields > #dv_" + FieldName + "")) {
                                    $("#dvGroupsConditionalFields > #dv_" + FieldName + "").remove();
                                    FormUtil.AutoAssignToGroup();
                                }
                            }
                        }
                    }
                }
                else {
                    responseSettings.GroupId = "";
                    AutoAssignToGroupIndexValues.length = 0;
                }
            }
        }
        if ($("#ui_chkoverridesource").is(":checked")) {
            OverSourceIdIndexValues.length = 0;

            if ($("#ui_chkConditionaloverridesource").is(":checked")) {
                if ($("input:checkbox[name='IsoverridesourceDependencyFieldOption']:checked").length > 0) {

                    $("input:checkbox[name='IsoverridesourceDependencyFieldOption']:checked").map(function () {
                        var FieldValues = { Id: "", FieldName: "" };
                        FieldValues.Id = $(this).val();
                        FieldValues.FieldName = $(this).attr("field");
                        OverSourceIdIndexValues.push(FieldValues);
                    });

                    if (OverSourceIdIndexValues != null && OverSourceIdIndexValues.length > 0) {
                        for (var i = 0; i < OverSourceIdIndexValues.length; i++) {

                            if (OverSourceIdIndexValues[i].FieldName == FieldName) {

                                if ($("#dvOverRideSourceConditionalFields > div").length > 0 && $("#dvOverRideSourceConditionalFields > #dv_" + OverSourceIdIndexValues[i].FieldName.replace(/\s/g, "") + ""))
                                    $("#dvOverRideSourceConditionalFields > #dv_" + OverSourceIdIndexValues[i].FieldName.replace(/\s/g, "") + "").remove();

                                BindOverridesourceDetails();
                                responseSettings.RedirectUrl = "";
                                responseRedirectUrlSettingIndex = -1;
                            }
                            else {
                                if ($("#dvOverRideSourceConditionalFields > div").length > 0 && $("#dvOverRideSourceConditionalFields > #dv_" + FieldName.replace(/\s/g, "") + "")) {
                                    $("#dvOverRideSourceConditionalFields > #dv_" + FieldName.replace(/\s/g, "") + "").remove();
                                    FormUtil.Isoverridesource();
                                }
                            }
                        }
                    }
                }
                else {
                    responseSettings.IsOverRideSource = "";
                    IsOverSourceIndexValues.length = 0;
                }

                if ($("#lmsStaySource").is(":checked")) {
                    responseSettings.SourceType = 0;
                }
                else if ($("#lmsOverrideSource").is(":checked")) {
                    responseSettings.SourceType = 1;
                }
                else if ($("#lmsNewSource").is(":checked")) {
                    responseSettings.SourceType = 2;
                }
            }
        }
    }
}

$(document).on('keyup', '#addLabelval', function () {
    var lblVal = $(this).text(),
        appendVal = lblVal.replace(/\s/g, '').toLowerCase();
    $(this).prev().attr({
        "id": appendVal,
        "Value": appendVal,
        "name": appendVal
    });
});


// Radio Button start here 

var radioButtonHTML, addMoreRadio, radiobtnlblCont, radiobtninptCont;
var radioButtonCount = 0;
$("#radioButton").click(function () {
    radioButtonCount++;
    fieldrowindex++;
    FieldPriority++;

    if (cssObjectsFormBody.width == null) {
        errMessPop();
    }
    else {
        $(".frmdummyconts").remove();
        var radioButtonNum = "inputRadioBtn" + radioButtonCount.toString();
        radiobtnlblCont = "radiobtnlblWrap" + radioButtonCount.toString();
        radiobtninptCont = "radiobtninptWrap" + radioButtonCount.toString();
        fieldNameDetails = "Language" + radioButtonCount.toString();

        radioButtonHTML = '<div id="' + radioButtonNum + '" class="form-radio-wrap del">\
					 <div class="frmeditrow labelTopBot">\
					<div id="'+ radiobtnlblCont + '" class="form-col-4 form-mb-col-12 w-100">\
					<div class="labelWrap">\
					<label>'+ fieldNameDetails + '</label>\
				   </div>\
					   </div>\
					<div id="'+ radiobtninptCont + '" FieldType="9" RowIndex="' + fieldrowindex + '" class="form-col-8 form-mb-col-12 w-100 addradioBtn">\
						<div class="radio-container inline-check">\
							<input type="radio" class="input-check radinptlnth" id="Tamil" value="Tamil" name="'+ fieldNameDetails + '"  required="required">\
							<label id="addLabelval" for="Tamil" class="label-check">Tamil</label>\
						</div>\
						<div class="radio-container inline-check">\
							<input type="radio" class="input-check radinptlnth" id="Kannada" value="Kannada" name="'+ fieldNameDetails + '">\
							<label id="addLabelval" for="Kannada" class="label-check">Kannada</label>\
						</div>\
					</div>\
				</div>\
				<div class="delIconWrap">\
					<span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="alignRadio" radalignattr="' + radioButtonNum + '" class="fas fa-list-ul" title="Align Vertical"></span>\<span id="editradiobtn" class="fas fa-pencil-alt" editattrvalue="' + radioButtonNum + '" title="edit"></span>\<span id="delParent" deleteattrvalue="' + radioButtonNum + '" class="fas fa-trash-alt" title="Delete"></span>\</div>\
			   </div>';


        addMoreRadio = '<div class="radio-container inline-check">\
							<input type="radio" class="input-check checkId" id="Tamil" value="Tamil" name="Tamil">\
							<label id="addLabelval" class="label-check">Tamil</label>\
						</div>\
						<div class="radio-container inline-check">\
							<input type="radio" class="input-check checkId" id="Kannada" value="Kannada" name="Kannada">\
							<label id="addLabelval" class="label-check">Kannada</label>\
						</div>';

        AddFormFieldsArray(fieldNameDetails, 9, fieldrowindex, "Tamil,Kannada", 1, 0, 0, radioButtonNum, "", FieldPriority, "Horizontal");
        AddFormBindingFieldsArray(fieldNameDetails, 9, fieldrowindex, "Tamil,Kannada", 1, 0, 0, radioButtonNum, "", "Horizontal");
    }

    $("#appendFields").append(radioButtonHTML);

    if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
        $('[id^="radiobtnlblWrap"],[id^="radiobtninptWrap"]').addClass('adCol-100');
    }

    if ($("#labelplaceholder").hasClass("lbl-active-bg")) {
        $('[id^="radiobtnlblWrap"],[id^="radiobtninptWrap"]').addClass('adCol-100');
    }
});

var getradiolblId, getradiolbltxt, getradioinptwrpId, getradiobtnlist, addradinametag;
$('.formWrapper').on('click', '#editradiobtn', function () {
    $(".formRadioPopupwrap").addClass("showPopup").removeClass("hidePopup");

    if ($(this).parent().prev().children().attr("id") != undefined)
        getradiolblId = $(this).parent().prev().children().attr("id");
    else if ($(this).parent().prev().prev().attr("id") != undefined)
        getradiolblId = $(this).parent().prev().prev().attr("id");

    getradiolbltxt = $("#" + getradiolblId).children().find('label').text();
    getradioinptwrpId = $("#" + getradiolblId).next().attr("id");
    $("#addRadiobtnlbl").val(getradiolbltxt);

    $("#radiobtnlistMappingField").select2().val(0).change();

    FormUtil.CreatePlumb5FieldDropDown("radiobtnlistMappingField");

    getradiobtnlist = [];
    $("#" + getradioinptwrpId + " .input-check.radinptlnth").each(function () {
        var getradinameval = $(this).val();
        getradiobtnlist.push(getradinameval);
    });
    var radioischecked = $("#" + getradioinptwrpId + " .input-check.radinptlnth").prop("required");

    var editAttrvalueId = $(this).attr('editattrvalue');
    $("#addradiobtns").removeAttr("txtEditIdentifierValue").attr("txtEditIdentifierValue", editAttrvalueId);

    //Binding the mapping field
    var fielddetails = JSLINQ(allFormFields).Where(function () {
        return (this.FormFieldIdentiferValue == editAttrvalueId);
    });

    if (fielddetails.items[0] != undefined && fielddetails.items[0].ContactMappingField != null && fielddetails.items[0].ContactMappingField != "" && fielddetails.items[0].ContactMappingField.length > 0) {
        //$("#radiobtnlistMappingField").val(fielddetails.items[0].ContactMappingField);
        $("#radiobtnlistMappingField").select2().val(fielddetails.items[0].ContactMappingField).change();
    }

    if (fielddetails.items[0] != undefined && fielddetails.items[0] != null && fielddetails.items[0] != "") {
        if (fielddetails.items[0].Mandatory == 1)
            $("#radioYes").prop("checked", true);
        else
            $("#radioNo").prop("checked", true);

        if (fielddetails.items[0].SubFields != null && fielddetails.items[0].SubFields != "" && fielddetails.items[0].SubFields.length > 0) {
            getradiobtnlist = fielddetails.items[0].SubFields;
        }
    }
    else {
        if (radioischecked == true)
            $("#radioYes").prop("checked", true);
        else
            $("#radioNo").prop("checked", true);
    }
    $("#radiobtnlist").val(getradiobtnlist.toString());
});

$("#addradiobtns").click(function () {
    var getradiolblname = $("#addRadiobtnlbl").val();
    var getradiobtnlistnam = $("#radiobtnlist").val();

    if (getradiolblname == "") {
        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterValue);
        $("#addRadiobtnlbl").focus();
        return false;
    }

    if (getradiobtnlistnam == "") {
        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterValue);
        $("#radiobtnlist").focus();
        return false;
    }

    var MappingField = $("#radiobtnlistMappingField").val();

    if (MappingField != null && MappingField != "" && MappingField.length > 0) {
        if (MappingField == "Unsubscribe" || MappingField == "IsSmsUnsubscribe" || MappingField == "IsWhatsAppOptIn") {
            if (getradiobtnlistnam != "" && getradiobtnlistnam != null && getradiobtnlistnam.length > 0) {
                $("#radiobtnlist").val("").val("Yes,No");
                getradiobtnlistnam = "Yes,No";
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.OptinFieldMapping);
            }
        }
    }

    var editvalueid = "";

    if ($(this).attr("txtEditIdentifierValue") != undefined) {
        editvalueid = $(this).attr("txtEditIdentifierValue");
    }

    var radiofielddetails = JSLINQ(allFormFields).Where(function () {
        return (this.Name == $.trim(getradiolblname) && this.FormFieldIdentiferValue != editvalueid);
    });

    if (radiofielddetails.items[0] != undefined && radiofielddetails.items[0].Name != null && radiofielddetails.items[0].Name != "" && radiofielddetails.items[0].Name.length > 0) {
        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.FieldNameError);
        return false;
    }

    if (MappingField != "0") {
        var mappingfielddetails = JSLINQ(allFormFields).Where(function () {
            return (this.ContactMappingField == MappingField && this.FormFieldIdentiferValue != editvalueid);
        });

        if (mappingfielddetails.items[0] != undefined && mappingfielddetails.items[0].ContactMappingField != null && mappingfielddetails.items[0].ContactMappingField != "" && mappingfielddetails.items[0].ContactMappingField.length > 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.MappingFieldError);
            return false;
        }
    }
    else {
        MappingField = "";
    }

    var RadioBtnDetails = JSLINQ(allFormFields).Where(function () {
        return (this.FormFieldIdentiferValue == editvalueid);
    });

    var ClassName = "inline-check";

    if (RadioBtnDetails.items[0].FieldDisplay != undefined && RadioBtnDetails.items[0].FieldDisplay != null && RadioBtnDetails.items[0].FieldDisplay != "" && RadioBtnDetails.items[0].FieldDisplay.length > 0) {
        if (RadioBtnDetails.items[0].FieldDisplay == "Vertical") {
            ClassName = "";
        }
    }

    $("#" + getradiolblId).children().find('label').html(getradiolblname);
    addradinametag = getradiolblname.replace(/\s/g, '').toLowerCase();

    var getsplitradibtnname = getradiobtnlistnam.split(",");

    $("#" + getradioinptwrpId).html(" ");

    for (i = 0; i < getsplitradibtnname.length; i++) {
        $("#" + getradioinptwrpId).append(`<div class="radio-container ${ClassName}">
		<input type="radio" class="input-check radinptlnth" id="${getsplitradibtnname[i].replace(/\s/g, '').toLowerCase()}" value="${getsplitradibtnname[i]}" name="${addradinametag}">
		<label id="${getsplitradibtnname[i].replace(/\s/g, '').toLowerCase()}" for="${getsplitradibtnname[i].replace(/\s/g, '').toLowerCase()}" class="label-check">${getsplitradibtnname[i]}</label>
	</div>`);
    }

    var radibtnmandat = $('input[name="radioMand"]:checked').val();

    if (radibtnmandat == "no")
        $("#" + getradioinptwrpId + " .input-check.radinptlnth").prop('required', false);
    else
        $("#" + getradioinptwrpId + " .input-check.radinptlnth").prop('required', true);

    //Saving the values to allformfields array
    var fieldIndexValue = -1;
    var FormId = 0;
    var Id = 0, fieldDetailsPriority = 0;
    var FieldDisplay = "";

    if (editvalueid != undefined) {
        var radiofieldetails = JSLINQ(allFormFields).Where(function () {
            return (this.FormFieldIdentiferValue == editvalueid);
        });

        allFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        if (radiofieldetails.items[0] != undefined && radiofieldetails.items[0].FormId != null && radiofieldetails.items[0].FormId != "" && radiofieldetails.items[0].FormId > 0) {
            FormId = radiofieldetails.items[0].FormId;
            Id = radiofieldetails.items[0].Id;
        }

        fieldDetailsPriority = radiofieldetails.items[0].FieldPriority;

        MandatoryValue = radibtnmandat == "yes" ? 1 : 0;

        if (radiofieldetails.items[0] != undefined && radiofieldetails.items[0].FieldDisplay != null && radiofieldetails.items[0].FieldDisplay != "" && radiofieldetails.items[0].FieldDisplay.length > 0) {
            FieldDisplay = radiofieldetails.items[0].FieldDisplay;
        }

        EditFormFieldsArray(getradiolblname, 9, getradiobtnlistnam, MandatoryValue, FormId, Id, fieldIndexValue, editvalueid, MappingField, fieldDetailsPriority, FieldDisplay);
    }

    //Saving the values to allformfields array
    var fieldIndexValue = -1;
    var FormId = 0;
    var Id = 0;
    var FieldDisplay = "";

    if (editvalueid != undefined) {

        var radiofielddetails = JSLINQ(allBindingFormFields).Where(function () {
            return (this.FormFieldIdentiferValue == editvalueid);
        });

        allBindingFormFields.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
        });

        if (radiofielddetails.items[0] != undefined && radiofielddetails.items[0].FormId != null && radiofielddetails.items[0].FormId != "" && radiofielddetails.items[0].FormId > 0) {
            FormId = radiofielddetails.items[0].FormId;
            Id = radiofielddetails.items[0].Id;
        }

        if (radiofielddetails.items[0] != undefined && radiofielddetails.items[0].FieldDisplay != null && radiofielddetails.items[0].FieldDisplay != "" && radiofielddetails.items[0].FieldDisplay.length > 0) {
            FieldDisplay = radiofielddetails.items[0].FieldDisplay;
        }

        MandatoryValue = radibtnmandat == "yes" ? 1 : 0;
        EditFormBindingFieldsArray(getradiolblname, 9, getradiobtnlistnam, MandatoryValue, FormId, Id, fieldIndexValue, editvalueid, MappingField, FieldDisplay);
    }

    $("#addRadiobtnlbl").val("");
    $("#radiobtnlist").val("");
    $('input[name="radioMand"]').prop("checked", false);
    $('.formRadioPopupwrap').removeClass('showPopup').addClass('hidePopup');
});

$('.formWrapper').on('click', '#alignRadio', function () {
    $(this).parents('.form-radio-wrap').find('.radio-container').toggleClass('inline-check');
    $(this).toggleClass('listBtnBg');

    var editvalueid = "";

    if ($(this).attr("radalignattr") != undefined) {
        editvalueid = $(this).attr("radalignattr");

        //Saving the values to allformfields array
        var fieldIndexValue = -1;
        var FormId = 0;
        var Id = 0, fieldDetailsPriority = 0;
        var FieldDisplay = "";

        if (editvalueid != undefined) {
            var radiofieldetails = JSLINQ(allFormFields).Where(function () {
                return (this.FormFieldIdentiferValue == editvalueid);
            });

            allFormFields.map(function (item, i) {
                if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
            });

            if (radiofieldetails.items[0] != undefined && radiofieldetails.items[0].FormId != null && radiofieldetails.items[0].FormId != "" && radiofieldetails.items[0].FormId > 0) {
                FormId = radiofieldetails.items[0].FormId;
                Id = radiofieldetails.items[0].Id;
            }

            fieldDetailsPriority = radiofieldetails.items[0].FieldPriority;

            if (radiofieldetails.items[0] != undefined && radiofieldetails.items[0].FieldDisplay != null && radiofieldetails.items[0].FieldDisplay != "" && radiofieldetails.items[0].FieldDisplay.length > 0) {
                if (radiofieldetails.items[0].FieldDisplay == "Vertical")
                    FieldDisplay = "Horizontal";
                else if (radiofieldetails.items[0].FieldDisplay == "Horizontal")
                    FieldDisplay = "Vertical";
            }

            EditFormFieldsArray(radiofieldetails.items[0].Name, 9, radiofieldetails.items[0].SubFields, radiofieldetails.items[0].Mandatory, FormId, Id, fieldIndexValue, editvalueid, radiofieldetails.items[0].ContactMappingField, fieldDetailsPriority, FieldDisplay);
        }

        //Saving the values to allformfields array
        var fieldIndexValue = -1;
        var FormId = 0;
        var Id = 0;
        var FieldDisplay = "";

        if (editvalueid != undefined) {

            var radiofielddetails = JSLINQ(allBindingFormFields).Where(function () {
                return (this.FormFieldIdentiferValue == editvalueid);
            });

            allBindingFormFields.map(function (item, i) {
                if (item.FormFieldIdentiferValue === editvalueid) fieldIndexValue = i
            });

            if (radiofielddetails.items[0] != undefined && radiofielddetails.items[0].FormId != null && radiofielddetails.items[0].FormId != "" && radiofielddetails.items[0].FormId > 0) {
                FormId = radiofielddetails.items[0].FormId;
                Id = radiofielddetails.items[0].Id;
            }

            if (radiofielddetails.items[0] != undefined && radiofielddetails.items[0].FieldDisplay != null && radiofielddetails.items[0].FieldDisplay != "" && radiofielddetails.items[0].FieldDisplay.length > 0) {
                if (radiofielddetails.items[0].FieldDisplay == "Vertical")
                    FieldDisplay = "Horizontal";
                else if (radiofielddetails.items[0].FieldDisplay == "Horizontal")
                    FieldDisplay = "Vertical";
            }

            EditFormBindingFieldsArray(radiofielddetails.items[0].Name, 9, radiofielddetails.items[0].SubFields, radiofielddetails.items[0].Mandatory, FormId, Id, fieldIndexValue, editvalueid, radiofielddetails.items[0].ContactMappingField, FieldDisplay);
        }
    }
});

$('.formWrapper').on('click', '#delRadio', function () {
    $(this).parents('.form-radio-wrap').find('.radio-container:last-child').remove();
});

// Radio Button End here

/* Move Down Tool Start here */

$(".formWrapper").on('click', '#movedown', function (event) {

    var allformfiledscopy = allFormFields;

    var presentfieldsvalues = "";
    var nextfieldvalues = "";

    var presentfieldindex = -1;
    var nextfieldindex = -1;

    var presentfieldvaluesid = $(this).parents('.del').attr('id');
    var nextfieldvaluesid = $(this).parents('.del').next().attr('id');

    if (presentfieldvaluesid != undefined) {
        var editvalueid = presentfieldvaluesid;

        allformfiledscopy.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) presentfieldindex = i
        });
    }

    if (nextfieldvaluesid != undefined) {
        var editvalueid = nextfieldvaluesid;

        allformfiledscopy.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) nextfieldindex = i
        });
    }

    presentfieldsvalues = JSLINQ(allformfiledscopy).Where(function () {
        return (this.FormFieldIdentiferValue == presentfieldvaluesid);
    });

    nextfieldvalues = JSLINQ(allformfiledscopy).Where(function () {
        return (this.FormFieldIdentiferValue == nextfieldvaluesid);
    });

    if (nextfieldindex >= 0 && presentfieldindex >= 0) {
        var b = allFormFields[nextfieldindex].FieldPriority;
        allFormFields[nextfieldindex].FieldPriority = allFormFields[presentfieldindex].FieldPriority;
        allFormFields[presentfieldindex].FieldPriority = b;

        //if (presentfieldindex >= 0 && presentfieldsvalues.items[0] != undefined) {
        //    var newField = new Object();
        //    newField.FormFieldIdentiferValue = presentfieldsvalues.items[0].FormFieldIdentiferValue;
        //    newField.FormFieldIdentiferValue = presentfieldsvalues.items[0].FormFieldIdentiferValue;
        //    newField.Id = presentfieldsvalues.items[0].Id;
        //    newField.FormId = presentfieldsvalues.items[0].FormId;
        //    newField.Name = presentfieldsvalues.items[0].Name;
        //    newField.FieldType = presentfieldsvalues.items[0].FieldType;
        //    newField.SubFields = presentfieldsvalues.items[0].SubFields;
        //    newField.RelationField = presentfieldsvalues.items[0].RelationField;
        //    newField.Mandatory = presentfieldsvalues.items[0].Mandatory;
        //    newField.ValidationType = presentfieldsvalues.items[0].ValidationType;
        //    newField.FormScore = presentfieldsvalues.items[0].FormScore;
        //    newField.PhoneValidationType = presentfieldsvalues.items[0].PhoneValidationType;
        //    newField.FieldDisplay = presentfieldsvalues.items[0].FieldDisplay;
        //    newField.CalendarDisplayType = presentfieldsvalues.items[0].CalendarDisplayType;
        //    allFormFields.splice(nextfieldindex, 1, newField);
        //}

        //if (nextfieldindex >= 0 && nextfieldvalues.items[0] != undefined) {
        //    var newField = new Object();
        //    newField.FormFieldIdentiferValue = nextfieldvalues.items[0].FormFieldIdentiferValue;
        //    newField.FormFieldIdentiferValue = nextfieldvalues.items[0].FormFieldIdentiferValue;
        //    newField.Id = nextfieldvalues.items[0].Id;
        //    newField.FormId = nextfieldvalues.items[0].FormId;
        //    newField.Name = nextfieldvalues.items[0].Name;
        //    newField.FieldType = nextfieldvalues.items[0].FieldType;
        //    newField.SubFields = nextfieldvalues.items[0].SubFields;
        //    newField.RelationField = nextfieldvalues.items[0].RelationField;
        //    newField.Mandatory = nextfieldvalues.items[0].Mandatory;
        //    newField.ValidationType = nextfieldvalues.items[0].ValidationType;
        //    newField.FormScore = nextfieldvalues.items[0].FormScore;
        //    newField.PhoneValidationType = nextfieldvalues.items[0].PhoneValidationType;
        //    newField.FieldDisplay = nextfieldvalues.items[0].FieldDisplay;
        //    newField.CalendarDisplayType = nextfieldvalues.items[0].CalendarDisplayType;
        //    allFormFields.splice(presentfieldindex, 1, newField);
        //}
    }

    // this is for form binding 
    var allformfiledscopy = allBindingFormFields;

    var presentfieldsvalues = "";
    var nextfieldvalues = "";

    var presentfieldindex = -1;
    var nextfieldindex = -1;

    var presentfieldvaluesid = $(this).parents('.del').attr('id');
    var nextfieldvaluesid = $(this).parents('.del').next().attr('id');

    if (presentfieldvaluesid != undefined) {
        var editvalueid = presentfieldvaluesid;

        allformfiledscopy.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) presentfieldindex = i
        });
    }

    if (nextfieldvaluesid != undefined) {
        var editvalueid = nextfieldvaluesid;

        allformfiledscopy.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) nextfieldindex = i
        });
    }

    presentfieldsvalues = JSLINQ(allformfiledscopy).Where(function () {
        return (this.FormFieldIdentiferValue == presentfieldvaluesid);
    });

    nextfieldvalues = JSLINQ(allformfiledscopy).Where(function () {
        return (this.FormFieldIdentiferValue == nextfieldvaluesid);
    });

    if (nextfieldindex >= 0 && presentfieldindex >= 0) {
        if (presentfieldindex >= 0 && presentfieldsvalues.items[0] != undefined) {

            var newField = new Object();
            newField.FormFieldIdentiferValue = presentfieldsvalues.items[0].FormFieldIdentiferValue;
            newField.FormFieldIdentiferValue = presentfieldsvalues.items[0].FormFieldIdentiferValue;
            newField.Id = presentfieldsvalues.items[0].Id;
            newField.FormId = presentfieldsvalues.items[0].FormId;
            newField.Name = presentfieldsvalues.items[0].Name;
            newField.FieldType = presentfieldsvalues.items[0].FieldType;
            newField.SubFields = presentfieldsvalues.items[0].SubFields;
            newField.RelationField = presentfieldsvalues.items[0].RelationField;
            newField.Mandatory = presentfieldsvalues.items[0].Mandatory;
            newField.ValidationType = presentfieldsvalues.items[0].ValidationType;
            newField.FormScore = presentfieldsvalues.items[0].FormScore;
            newField.PhoneValidationType = presentfieldsvalues.items[0].PhoneValidationType;
            newField.FieldDisplay = presentfieldsvalues.items[0].FieldDisplay;
            newField.CalendarDisplayType = presentfieldsvalues.items[0].CalendarDisplayType;

            allBindingFormFields.splice(nextfieldindex, 1, newField);
        }

        if (nextfieldindex >= 0 && nextfieldvalues.items[0] != undefined) {

            var newField = new Object();
            newField.FormFieldIdentiferValue = nextfieldvalues.items[0].FormFieldIdentiferValue;
            newField.FormFieldIdentiferValue = nextfieldvalues.items[0].FormFieldIdentiferValue;
            newField.Id = nextfieldvalues.items[0].Id;
            newField.FormId = nextfieldvalues.items[0].FormId;
            newField.Name = nextfieldvalues.items[0].Name;
            newField.FieldType = nextfieldvalues.items[0].FieldType;
            newField.SubFields = nextfieldvalues.items[0].SubFields;
            newField.RelationField = nextfieldvalues.items[0].RelationField;
            newField.Mandatory = nextfieldvalues.items[0].Mandatory;
            newField.ValidationType = nextfieldvalues.items[0].ValidationType;
            newField.FormScore = nextfieldvalues.items[0].FormScore;
            newField.PhoneValidationType = nextfieldvalues.items[0].PhoneValidationType;
            newField.FieldDisplay = nextfieldvalues.items[0].FieldDisplay;
            newField.CalendarDisplayType = nextfieldvalues.items[0].CalendarDisplayType;

            allBindingFormFields.splice(presentfieldindex, 1, newField);
        }
    }

    var moveDownFullDiv = $(this).parents('.del')[0].outerHTML;
    var nextParIdValue = $(this).parents().next().attr('id');

    if (nextParIdValue == undefined) {
        event.preventDefault();
    }
    else {
        $(this).parents('.del').remove();
        $(moveDownFullDiv).insertAfter("#" + nextParIdValue);
    }

    allformfiledscopy = "";
});

/* Move Down Tool End here */

/* Move Up Tool Start here */

$(".formWrapper").on('click', '#moveup', function (event) {

    var allformfiledscopy = allFormFields;

    var previousfieldvalues = "";
    var presentfieldsvalues = "";

    var previousfieldindex = -1;
    var presentfieldindex = -1;

    var previousfieldvaluesid = $(this).parents('.del').prev().attr('id');
    var presentfieldvaluesid = $(this).parents('.del').attr('id');

    if (previousfieldvaluesid != undefined) {
        var editvalueid = previousfieldvaluesid;

        allformfiledscopy.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) previousfieldindex = i
        });
    }

    if (presentfieldvaluesid != undefined) {
        var editvalueid = presentfieldvaluesid;

        allformfiledscopy.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) presentfieldindex = i
        });
    }

    previousfieldvalues = JSLINQ(allformfiledscopy).Where(function () {
        return (this.FormFieldIdentiferValue == previousfieldvaluesid);
    });

    presentfieldsvalues = JSLINQ(allformfiledscopy).Where(function () {
        return (this.FormFieldIdentiferValue == presentfieldvaluesid);
    });

    if (previousfieldindex >= 0 && presentfieldindex >= 0) {
        var b = allFormFields[presentfieldindex].FieldPriority;
        allFormFields[presentfieldindex].FieldPriority = allFormFields[previousfieldindex].FieldPriority;
        allFormFields[previousfieldindex].FieldPriority = b;
    }

    // this is for binding fields
    var allformfiledscopy = allBindingFormFields;

    var previousfieldvalues = "";
    var presentfieldsvalues = "";

    var previousfieldindex = -1;
    var presentfieldindex = -1;

    var previousfieldvaluesid = $(this).parents('.del').prev().attr('id');
    var presentfieldvaluesid = $(this).parents('.del').attr('id');

    if (previousfieldvaluesid != undefined) {
        var editvalueid = previousfieldvaluesid;

        allformfiledscopy.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) previousfieldindex = i
        });
    }

    if (presentfieldvaluesid != undefined) {
        var editvalueid = presentfieldvaluesid;

        allformfiledscopy.map(function (item, i) {
            if (item.FormFieldIdentiferValue === editvalueid) presentfieldindex = i
        });
    }

    previousfieldvalues = JSLINQ(allformfiledscopy).Where(function () {
        return (this.FormFieldIdentiferValue == previousfieldvaluesid);
    });

    presentfieldsvalues = JSLINQ(allformfiledscopy).Where(function () {
        return (this.FormFieldIdentiferValue == presentfieldvaluesid);
    });

    if (previousfieldindex >= 0 && presentfieldindex >= 0) {
        if (presentfieldindex >= 0 && presentfieldsvalues.items[0] != undefined) {

            var newField = new Object();
            newField.FormFieldIndex = presentfieldsvalues.items[0].FormFieldIndex;
            newField.FormFieldIdentiferValue = presentfieldsvalues.items[0].FormFieldIdentiferValue;
            newField.Id = presentfieldsvalues.items[0].Id;
            newField.FormId = presentfieldsvalues.items[0].FormId;
            newField.Name = presentfieldsvalues.items[0].Name;
            newField.FieldType = presentfieldsvalues.items[0].FieldType;
            newField.SubFields = presentfieldsvalues.items[0].SubFields;
            newField.RelationField = presentfieldsvalues.items[0].RelationField;
            newField.Mandatory = presentfieldsvalues.items[0].Mandatory;
            newField.ValidationType = presentfieldsvalues.items[0].ValidationType;
            newField.FormScore = presentfieldsvalues.items[0].FormScore;
            newField.PhoneValidationType = presentfieldsvalues.items[0].PhoneValidationType;
            newField.FieldDisplay = presentfieldsvalues.items[0].FieldDisplay;
            newField.CalendarDisplayType = presentfieldsvalues.items[0].CalendarDisplayType;
            newField.ContactMappingField = presentfieldsvalues.items[0].ContactMappingField;

            allBindingFormFields.splice(previousfieldindex, 1, newField);
        }

        if (previousfieldindex >= 0 && previousfieldvalues.items[0] != undefined) {

            var newField = new Object();
            newField.FormFieldIndex = previousfieldvalues.items[0].FormFieldIndex;
            newField.FormFieldIdentiferValue = previousfieldvalues.items[0].FormFieldIdentiferValue;
            newField.Id = previousfieldvalues.items[0].Id;
            newField.FormId = previousfieldvalues.items[0].FormId;
            newField.Name = previousfieldvalues.items[0].Name;
            newField.FieldType = previousfieldvalues.items[0].FieldType;
            newField.SubFields = previousfieldvalues.items[0].SubFields;
            newField.RelationField = previousfieldvalues.items[0].RelationField;
            newField.Mandatory = previousfieldvalues.items[0].Mandatory;
            newField.ValidationType = previousfieldvalues.items[0].ValidationType;
            newField.FormScore = previousfieldvalues.items[0].FormScore;
            newField.PhoneValidationType = previousfieldvalues.items[0].PhoneValidationType;
            newField.FieldDisplay = previousfieldvalues.items[0].FieldDisplay;
            newField.CalendarDisplayType = previousfieldvalues.items[0].CalendarDisplayType;
            newField.ContactMappingField = previousfieldvalues.items[0].ContactMappingField;
            allBindingFormFields.splice(presentfieldindex, 1, newField);
        }
    }

    let moveUpFulldiv = $(this).parents('.del')[0].outerHTML;
    let prevParIdValue = $(this).parents('.del').prev().attr('id');

    if (prevParIdValue == undefined) {
        event.preventDefault();
    }
    else {
        $(this).parents('.del').remove();
        $(moveUpFulldiv).insertBefore("#" + prevParIdValue);
    }

    allformfiledscopy = "";
});

/* Move Up Tool End here */

/* close popup */

$(".clsePopup").click(function () {
    $(this).parents('.formDropDownPopupwrap').removeClass('showEditPopup').addClass('hideEditPopup');
    $(this).parents('.formDoubInputPopupwrap').removeClass('showEditPopup').addClass('hideEditPopup');
});

$(".formEditClose").click(function () {
    $(this).parents('.formHeadPopupwrap').removeClass('showPopup').addClass('hidePopup');
    $(this).parents('.formDescPopupwrap').removeClass('showPopup').addClass('hidePopup');
    $(this).parents('.formtextBoxPopupwrap').removeClass('showPopup').addClass('hidePopup');
    $(this).parents('.formEmailBoxPopupwrap').removeClass('showPopup').addClass('hidePopup');
    $(this).parents('.formPhoneBoxPopupwrap').removeClass('showPopup').addClass('hidePopup');
    $(this).parents('.formMessageBoxPopupwrap').removeClass('showPopup').addClass('hidePopup');
    $(this).parents('.formDateBoxPopupwrap').removeClass('showPopup').addClass('hidePopup');
    $(this).parents('.formSubmitPopupwrap').removeClass('showPopup').addClass('hidePopup');
    $(this).parents('.formCustTextBoxPopupwrap').removeClass('showPopup').addClass('hidePopup');
    $(this).parents('.formotpTextBoxPopupwrap').removeClass('showPopup').addClass('hidePopup');
    $(this).parents('.formRadioPopupwrap').removeClass('showPopup').addClass('hidePopup');
    $(this).parents('.formCheckbxPopupwrap').removeClass('showPopup').addClass('hidePopup');
});

/* close popup */

/* Image upload start here */

//$("#upLodImg").click(function () {
//    if (imgUplodCount <= 0) {
//        formType = 7;
//        $('#formHead,#formDescrip,#textBox,#inputEmail,#inputPhone,#customTextBox,#otpTextBox,#selectDropdown,#inputTextarea,#radioButton,#checkBox,#dateFormat,#submitBtn,#htmlIframetab').attr('style', 'display: none !important');
//        $('#lblLabelDesignTab,#lblTextBoxDesignTab,#lblBtnDesignTab').attr('style', 'display: none !important');

//        imgUplodCount++;
//        let imgUPloadBg = "formBanBg" + imgUplodCount.toString();
//        var uploadBanHTML = '<div id="' + imgUPloadBg + '" class="bgWrap bgAppend del" onclick="BannerClicked();">\
//	<div class="bguploadbtn">\
//      <div class="imgBtnWrap">\
//        <button class="uploadBtn" type="button">Upload your Image</button>\
//        <input type="file" class="imgInput" id="ui_bannerBtnUploadDiv">\
//      </div>\
//      <div class="uploadfilenamewrp hideDiv">\
//        <div class="frmbgimgname">bodybgimg.jpg</div>\
//        <div class="frmclsimgfile"><i class="fa fa-times"></i></div>\
//      </div>\
//    </div>\
//<div class="delIconWrap">\
//				\<span id="delBg" class="fas fa-trash-alt" title="Delete Image"></span>\</div>\
//</div>';
//        $(".frmdummyconts").remove();
//        $("#appendFields").append(uploadBanHTML);
//    }
//    else {
//        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.CustomBannerMultipleAddError);
//        return false;
//    }
//});

$("#upLodImg").click(function () {
    imgUplodCount++;
    let imgUPloadBg = "formBanBg" + imgUplodCount.toString();
    var uploadBanHTML = '<div id="' + imgUPloadBg + '" class="bgWrap bgAppend del">\
	<div class="bguploadbtn">\
      <div class="imgBtnWrap">\
        <button class="uploadBtn" type="button">Upload your Image</button>\
        <input type="file" class="imgInput" id="bodybgimg">\
      </div>\
      <div class="uploadfilenamewrp hideDiv">\
        <div class="frmbgimgname">bodybgimg.jpg</div>\
        <div class="frmclsimgfile"><i class="fa fa-times"></i></div>\
      </div>\
    </div>\
<div class="delIconWrap">\
				<span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span>\<span id="delBg" class="fas fa-trash-alt" title="Delete Image"></span>\</div>\
</div>';
    $(".frmdummyconts").remove();
    //$("#appendFields").append(uploadBanHTML);
    $(uploadBanHTML).insertBefore("#appendFields");

    formDetails.ImageAppearanceAlignment = "top";

    $(".frmlayoutwrap").removeClass("formlayoutRow formlayoutRowrevrse formlayoutColrevrse");
    $("#topimglayout").addClass("active");
});

$(".formWrapper").on('click', '#delBg', function () {
    //imgUplodCount = 0;
    $(this).parents('.bgWrap').remove();
});

$(document).on('change', '#ui_bannerBtnUploadDiv', function () {
    $("#dvLoading").show();
    var data = new FormData();
    var files = $("#ui_bannerBtnUploadDiv").get(0).files;

    var checkFilesFor = ["jpg", "gif", "png", "bmp", "JPG", "GIF", "PNG", "BMP"];

    var fileExtension = GetFileExtension(files[0].name);

    if (checkFilesFor.indexOf(fileExtension[0]) < 0) {
        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.CustomBannerInvalidFile);
        $("#ui_bannerBtnUploadDiv").replaceWith($("#ui_bannerBtnUploadDiv").clone());
        $("#ui_bannerBtnUploadDiv").val("");
        HidePageLoading();
        return false;
    }

    if (files.length > 0) {
        data.append("UploadedImage", files[0]);

        $.ajax({
            url: "/CaptureForm/Create/UploadFile",
            type: 'POST',
            data: data,
            contentType: false,
            processData: false,
            success: function (response) {
                if (response.filePath != "")
                    $("#ui_bannerBtnUploadDiv").css('color', '#333');
                else
                    $("#ui_bannerBtnUploadDiv").css('color', 'transparent');

                $("#ui_txtimageContent").val(response.filePath);
                $('#formBanBg1').removeAttr('style');
                $("#formBanBg1").css("background-image", "url(" + response.filePath + ")");
                var RedirectUrl = $("#ui_txtImageRedirectUrl").val();
                var BannerHeight = $("#bodyHeight").val();
                FormUtil.bannerImageAppend(RedirectUrl, response.filePath, BannerHeight);
            },
            error: ShowAjaxError
        });
    }
    else {
        $("#ui_imgPreview").attr("src", "http://widgets.plumb5.com/images/custombanner.png");
    }
    $("#dvLoading").hide();
});

/* Image upload start here */

/* Horizontal Two TextBox Layout */

var dbleInputIdFir, dbleInputIdSec, dbleInputIdThird, dbleInputIdFour, dbleInputIdFive, dbleInputIdSix, dbleInputLayChan, dbleTextBoxNamLay;

$("#textBoxTwolay").click(function () {
    dbleTextBoxLay++;
    if (cssObjectsFormBody.width == null) {
        errMessPop();
    }
    else if (dbleTextBoxLay == 0) {
        dbleTextBoxNamLay = "doubleTextBox" + dbleTextBoxLay.toString();
        let dblelabelNamFir = "fieldTypelblFir" + dbleTextBoxLay.toString();
        let dbleLabelNamSec = "fieldTypelblSec" + dbleTextBoxLay.toString();
        dbleInputIdFir = "inputIdColFir" + dbleTextBoxLay.toString();
        dbleInputIdSec = "inputIdColSec" + dbleTextBoxLay.toString();
        let dbllabelFir = "labelFir" + dbleTextBoxLay.toString();
        let dbllabelSec = "labelSec" + dbleTextBoxLay.toString();
        let dblInputFir = "dbletxtBxFir" + dbleTextBoxLay.toString();
        let dblInputSec = "dbletxtBxSec" + dbleTextBoxLay.toString();
        dbleInputLayChan = "dbleInputLay" + dbleTextBoxLay.toString();
        $(".frmdummyconts").remove();
        let twoTextBoxHTML = '<div id=" ' + dbleTextBoxNamLay + '" class="frmeditrow del doubleWrap positionRel padTopBot"><div class="form-col-6 form-mb-col-12"><div class="rowfrmeditrow positionRel parName"><div id="' + dbllabelFir + '" class="form-col-4 form-mb-col-12 labelStyle lblAlignCheck"><label id="' + dblelabelNamFir + '">First Name</label></div><div id="' + dblInputFir + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdFir + '" type="text" class="input-form-control txtBx" name="Fname" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div id="' + dbleInputLayChan + '" class="form-col-6 form-mb-col-12"><div class="row"><div id="' + dbllabelSec + '" class="form-col-4 form-mb-col-12 labelStyle lblAlignCheck"><label id="' + dbleLabelNamSec + '">Last Name</label></div><div id="' + dblInputSec + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdSec + '" type="text" class="input-form-control txtBx" name="Lname"  ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="delParent" class="fas fa-trash-alt" title="Duplicate"></span></div></div>';
        $("#appendFields").append(twoTextBoxHTML);
        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="dbletxtBxFir"],[id^="dbletxtBxSec"]').addClass('adCol-100');
        }
        var findRadioClass = $('[id^="labelFir"],[id^="labelSec"]').next().children().hasClass('radio-container');
        var findCheckBoxClass = $('[id^="labelFir"],[id^="labelSec"]').next().children().hasClass('check-container');
        if ($("#labelplaceholder").hasClass("lbl-active-bg") && findRadioClass == true || $("#labelplaceholder").hasClass("lbl-active-bg") && findCheckBoxClass == true) {
            $('[id^="labelFir"],[id^="labelSec"]').each(function () {
                var radioLabelClassName = $(this).next().children().hasClass('radio-container');
                var checkBoxLabelClassName = $(this).next().children().hasClass('check-container');
                if (radioLabelClassName == true || checkBoxLabelClassName == true) {
                    $(this).addClass('adCol-100');
                    $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"]').addClass('adCol-100');
                } else {
                    $(this).addClass('adCol-100 lblAlignPlaceholder');
                    $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"]').addClass('adCol-100');
                }
            });
        }
        else if ($("#labelplaceholder").hasClass("lbl-active-bg") && findRadioClass !== true || $("#labelplaceholder").hasClass("lbl-active-bg") && findCheckBoxClass !== true) {
            $('[id^="labelFir"],[id^="labelSec"]').addClass('adCol-100 lblAlignPlaceholder');
            $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"]').addClass('adCol-100');
        }
    }
    else {
        dbleTextBoxNamLay = "doubleTextBox" + dbleTextBoxLay.toString();
        let dblelabelNamFir = "fieldTypelblFir" + dbleTextBoxLay.toString();
        let dbleLabelNamSec = "fieldTypelblSec" + dbleTextBoxLay.toString();
        let dbleInputIdFir = "inputIdColFir" + dbleTextBoxLay.toString();
        let dbleInputIdSec = "inputIdColSec" + dbleTextBoxLay.toString();
        let dbllabelFir = "labelFir" + dbleTextBoxLay.toString();
        let dbllabelSec = "labelSec" + dbleTextBoxLay.toString();
        let dblInputFir = "dbletxtBxFir" + dbleTextBoxLay.toString();
        let dblInputSec = "dbletxtBxSec" + dbleTextBoxLay.toString();
        dbleInputLayChan = "dbleInputLay" + dbleTextBoxLay.toString();
        $(".frmdummyconts").remove();
        let twoTextBoxHTML = '<div id="' + dbleTextBoxNamLay + '" class="frmeditrow del doubleWrap positionRel padTopBot"><div class="form-col-6 form-mb-col-12"><div class="frmeditrow positionRel parName"><div id="' + dbllabelFir + '" class="form-col-4 form-mb-col-12 labelStyle lblAlignCheck"><label id="' + dblelabelNamFir + '">First Name</label></div><div id="' + dblInputFir + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdFir + '" type="text" class="input-form-control txtBx" name="Fname" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div id="' + dbleInputLayChan + '" class="form-col-6 form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelSec + '" class="form-col-4 form-mb-col-12 labelStyle lblAlignCheck"><label id="' + dbleLabelNamSec + '">Last Name</label></div><div id="' + dblInputSec + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdSec + '" type="text" class="input-form-control txtBx" name="Lname" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="delParent" class="fas fa-trash-alt" title="Duplicate"></span></div></div>';
        $("#appendFields").append(twoTextBoxHTML);
        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="dbletxtBxFir"],[id^="dbletxtBxSec"]').addClass('adCol-100');
        }
        var findRadioClass = $('[id^="labelFir"],[id^="labelSec"]').next().children().hasClass('radio-container');
        var findCheckBoxClass = $('[id^="labelFir"],[id^="labelSec"]').next().children().hasClass('check-container');
        if ($("#labelplaceholder").hasClass("lbl-active-bg") && findRadioClass == true || $("#labelplaceholder").hasClass("lbl-active-bg") && findCheckBoxClass == true) {
            $('[id^="labelFir"],[id^="labelSec"]').each(function () {
                var radioLabelClassName = $(this).next().children().hasClass('radio-container');
                var checkBoxLabelClassName = $(this).next().children().hasClass('check-container');
                if (radioLabelClassName == true || checkBoxLabelClassName == true) {
                    $(this).addClass('adCol-100');
                    $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"]').addClass('adCol-100');
                }
                else {
                    $(this).addClass('adCol-100 lblAlignPlaceholder');
                    $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"]').addClass('adCol-100');
                }
            });
        }
        else if ($("#labelplaceholder").hasClass("lbl-active-bg") && findRadioClass !== true || $("#labelplaceholder").hasClass("lbl-active-bg") && findCheckBoxClass !== true) {
            $('[id^="labelFir"],[id^="labelSec"]').addClass('adCol-100 lblAlignPlaceholder');
            $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"]').addClass('adCol-100');
        }
    }
});

var dblchangeInputparId, dblchangeInputId, textBoxFieldName, textBoxFieldId, textBxFieldType, dblTxtBxPlacVal, dblTxtBxFieldType, dblIsRequired, dblInputlblNam, dblTextAreaId, dblDropSelect, dblDropSelectlblVal, dblappndBefore, dblCheckRadio, dblRemovRadi, dblappnRadiReq, dblRadiobtnParClass, dblCheckRadiRem, dblCheckIsReq, dblAppndRadiReq, dblAppndRadiAlign, dblCheckBoxIscls, dblCheckBoxParClass,
    dblCheckBxIsReq, dblSubbtnPrev, dblSubBtnText, dblChecktype, dblCheckTextarea, dblCheckSelect, dblLayChang, dblLayCurntId, dblLayCurrPrevAll, dblParentsallClass, dblMainParentsId, dblParentsParentClss, dblPatentsParentIds;

$(".formWrapper").on('click', '#editDblTextBoxName', function () {
    $(".formDoubInputPopupwrap").removeClass('hideEditPopup').addClass('showEditPopup');
    dblchangeInputparId = $(this).parents(".editDblTextBox").attr("id");
    dblchangeInputId = $(this).parents(".parName").children(".editDblTextBox").find(".txtBx").attr("id");
    dblTxtBxPlacVal = $(this).parents(".parName").children(".editDblTextBox").find(".txtBx").attr("placeholder");
    dblTextAreaId = $(this).parents(".parName").children(".editDblTextBox").find(".txtBx").is("textarea");
    dblDropSelect = $(this).parents(".parName").children(".editDblTextBox").find(".txtBx").is("select");
    dblDropSelectlblVal = $(this).parents(".parName").children(".labelStyle").find("label").text();
    dblTxtBxFieldType = $(this).parents(".parName").children(".editDblTextBox").find(".txtBx").attr("type");
    dblIsRequired = $(this).parents(".parName").children(".editDblTextBox").find(".txtBx").prop("required");
    dblInputlblNam = $(this).parents(".parName").children(".labelStyle").find("label").attr("id");
    dblappndBefore = $(this).parent();
    dblCheckRadio = $(this).parents(".parName").children(".editDblTextBox").find(".radio-container").hasClass('radio-container');
    dblRemovRadi = $(this).parents(".parName").children(".editDblTextBox").find(".radio-container").attr("class");
    dblappnRadiReq = $(this).parents(".parName").children(".editDblTextBox").find(".radio-container > input").attr("type");
    dblRadiobtnParClass = $(this).parents(".parName").children(".editDblTextBox").find(".radio-container > input");
    dblCheckRadiRem = $(this).parent(".editIconWrap").prev().attr("class");
    dblCheckIsReq = $(this).parent(".editIconWrap").prev(".radio-container").find("input").prop("required");
    dblAppndRadiReq = $(this).parent(".editIconWrap").prev(".radio-container").children("input").attr("class");
    dblCheckBoxIscls = $(this).parent(".editIconWrap").prev(".check-container").hasClass('check-container');
    dblCheckBoxParClass = $(this).parents(".parName").children(".editDblTextBox").find(".check-container > input");
    dblCheckBxIsReq = $(this).parent(".editIconWrap").prev(".check-container").find("input").prop("required");
    dblSubbtnPrev = $(this).parents(".editDblTextBox").prev().attr("id");
    dblSubBtnText = $(this).parent(".editIconWrap").prev().text();
    dblCheckInputType = $(this).parent(".editIconWrap").prev().attr("type");
    dblCheckTextarea = $(this).parent(".editIconWrap").prev().is('textarea')
    dblCheckSelect = $(this).parent(".editIconWrap").prev().is("select");
    dblLayChang = $(this).parents(".del").find("#" + dbleInputLayChan).attr("class");
    dblLayCurntId = $(this).parents(".parName").parent().attr("class");
    dblParentsallClass = $(this).parents(".parName").parent().prevAll().attr("class");
    dblMainParentsId = $(this).parents(".parName").parents(".padTopBot").attr("id");
    dblParentsParentClss = $(this).parents(".parName").parent().attr("class");
    dblPatentsParentIds = $(this).parents(".parName").parent().attr("id");
    //dblLayCurrPrevAll = $(this).parents(".parName").parent().prevAll().attr("id");

    if (dblDropSelect == true) {
        $("#selectfieldName").val(dblDropSelectlblVal);
        $("#dblDropdownListWrap").removeClass("hideEditPopup").addClass("showTextEdit");
        $("#editBtnName").addClass("hidePopup").removeClass("showTextEdit");
        $("#dblfieldMand").removeClass("hidePopup").addClass("showTextEdit");
        var dblGetDDList = [];
        $("#" + dblchangeInputId).find('option').not(':first').each(function () {
            var getdblDropDownList = $(this).val();
            dblGetDDList.push(getdblDropDownList);
        });
        $("#dblDropDownlist").val(dblGetDDList.toString());
    }
    else {
        $("#selectfieldName").val(dblTxtBxPlacVal);
        $("#dblDropdownListWrap").removeClass("showTextEdit").addClass("hideEditPopup");
    }

    if (dblCheckRadio == true) {
        //$("#" +dblCheckRadiRem).remove();
        $("#selectfieldName").val(dblDropSelectlblVal);
        $("#dblRadioEditWrap").removeClass("hideEditPopup").addClass("showTextEdit");
        $(".editCheckBoxOpt").removeClass("showTextEdit").addClass("hideEditPopup");
        $("#editBtnName").addClass("hidePopup").removeClass("showTextEdit");
        $("#dblfieldMand").removeClass("hidePopup").addClass("showTextEdit");
        $("#radioAlignHV").removeClass("hidePopup").addClass("showTextEdit");
        var getdblRadiCount = [];
        $(dblRadiobtnParClass).each(function () {
            var dblRadiVal = $(this).val();
            getdblRadiCount.push(dblRadiVal);
            $("#dblRadioOptlist").val(getdblRadiCount.toString());
        });

        if (dblCheckRadiRem == "radio-container") {
            $("#radiVerti").prop('checked', true);
        }
        else if (dblCheckRadiRem = "radio-container inline-check") {
            $("#radiHori").prop('checked', true);
        }
    }
    else {
        $("#selectfieldName").val(dblDropSelectlblVal);
        $("#dblRadioEditWrap").removeClass("showTextEdit").addClass("hideEditPopup");
        $("#radioAlignHV").removeClass("showTextEdit").addClass("hideEditPopup");
    }
    if (dblCheckBoxIscls == true) {
        $("#selectfieldType").val('CheckBox');
        $("#selectfieldName").val(dblDropSelectlblVal);
        $(".editCheckBoxOpt").addClass("showTextEdit").removeClass("hideEditPopup");
        $("#dblRadioEditWrap").addClass("hideEditPopup").removeClass("showTextEdit");
        $("#editBtnName").addClass("hidePopup").removeClass("showTextEdit");
        $("#dblfieldMand").removeClass("hidePopup").addClass("showTextEdit");
        var getdblCheckBoxcount = [];
        $(dblCheckBoxParClass).each(function () {
            var dblCheckBoxAppndVal = $(this).val();
            getdblCheckBoxcount.push(dblCheckBoxAppndVal);
            $("#dblCheckOptlist").val(getdblCheckBoxcount.toString());
        });

        if (dblCheckRadiRem == "check-container") {
            $("#checkVerti").prop("checked", true);
        } else if (dblCheckRadiRem == "check-container inline-check") {
            $("#checkHori").prop("checked", true);
        }

    }
    else {
        $(".editCheckBoxOpt").removeClass("showTextEdit").addClass("hideEditPopup");
    }

    if (dblCheckRadiRem == "btn-style savebtn") {
        $("#selectfieldName").val(dblSubBtnText);
        $("#selectfieldName").attr('disabled', 'disabled').css('background-color', '#f0f0f0');
        $("#editBtnName").addClass("showTextEdit");
        $("#updateBtnName").addClass("hidePopup").removeClass("showTextEdit");
        $("#selectfieldType").val("Submit");
    } else {
        $("#selectfieldName").removeAttr('disabled', 'disabled').css('background-color', '#fff');
    }
    showFieldType();
    dblInputType();
    if (dblIsRequired) {
        $("#fieldtypeYes").prop("checked", true);
    }
    else if (dblCheckIsReq) {
        $("#fieldtypeYes").prop("checked", true);
    }
    else if (dblCheckBxIsReq) {
        $("#fieldtypeYes").prop("checked", true);
    }
    else {
        $("#fieldtypeNo").prop("checked", true);
    }
});

showFieldType = function () {
    if (dblTxtBxFieldType == "text") {
        $("#selectfieldType").val("User Name");
    }
    else if (dblTxtBxFieldType == "email") {
        $("#selectfieldType").val("Email Id");
    }
    else if (dblTxtBxFieldType == "tel") {
        $("#selectfieldType").val("Phone");
    }
    else if (dblDropSelect == true) {
        $("#selectfieldType").val("Dropdown List");
    }
    else if (dblTextAreaId == true) {
        $("#selectfieldType").val("Your Message");
    }
    else if (dblCheckRadio == true) {
        $("#selectfieldType").val("Radio Button");
    }
    else if (dblTxtBxFieldType == "checkbox") {
        $("#selectfieldType").val("CheckBox");
    }
    else if (dblTxtBxFieldType == "date") {
        $("#selectfieldType").val("Date");
    }
    else if (dblTxtBxFieldType == "submit") {
        $("#selectfieldType").val("Submit");
    }
}

dblInputType = function () {

    if (dblCheckInputType == "text" || dblCheckInputType == "email" || dblCheckInputType == "tel" || dblCheckInputType == "date") {
        $("#editBtnName").addClass("hidePopup").removeClass("showTextEdit");
        $("#dblfieldMand").removeClass("hidePopup").addClass("showTextEdit");
    } else if (dblCheckInputType == "submit") {
        $("#dblfieldMand").removeClass("showTextEdit").addClass("hidePopup");
    } else if (dblCheckTextarea == true) {
        $("#editBtnName").addClass("hidePopup").removeClass("showTextEdit");
        $("#dblfieldMand").removeClass("hidePopup").addClass("showTextEdit");
    }
}

var dbldropdownlistsplt, dbldropdownlistval, dbldropdownSelId, dblSelectBxVal, dblRadioOptVal;

$(".formDoubInputPopupwrap").on('click', '#addfieldTypeBtn', function () {
    let dblDropdownListWrapClass = $("#dblDropdownListWrap").hasClass("showTextEdit"),
        dblRadioListWrapClass = $("#dblRadioEditWrap").hasClass("showTextEdit");

    textBoxFieldName = $("#selectfieldName").val();
    textBoxFieldId = textBoxFieldName.replace(/-|\s/g, "").toLowerCase();
    textBxFieldType = $("#selectfieldType").val();
    dblSelectDrpDwnVal = $("#dblDropDownlist").val();
    dblRadioOptVal = $("#dblRadioOptlist").val();
    if (textBoxFieldName == "") {
        $("#addFieldTypeErr").html("Please Enter Field Name");
        $("#selectfieldName").focus();
        return false;
    }
    else {
        $("#addFieldTypeErr").html("");
    }

    if (textBxFieldType == "") {
        $("#addFieldTypeErr").html("Please Enter Field Type");
        $("#selectfieldType").focus();
        return false;
    }
    else {
        $("#addFieldTypeErr").html("");
    }

    if (dblDropdownListWrapClass == true) {
        if (dblSelectDrpDwnVal == "") {
            $("#addFieldTypeErr").html("Please Enter Dropdown list");
            $("#dblDropDownlist").focus();
            return false;
        }
    }

    if (dblRadioListWrapClass == true) {
        if (dblRadioOptVal == "") {
            $("#addFieldTypeErr").html("Please Enter radio option list");
            $("#dblRadioOptlist").focus();
            return false;
        }
    }

    //Add TextBox here
    if (textBxFieldType == "User Name") {
        $("#" + dblchangeInputId).remove();
        $("." + dblRemovRadi).remove();
        $("#" + dblchangeInputparId + " .radio-container").remove();
        $("#" + dblchangeInputparId + " .check-container").remove();
        var appndTextBox = '<input id="' + dblchangeInputId + '" type="text"  class="input-form-control txtBx" name="' + dblchangeInputId + '" required="required">';
        //$("#" +dblchangeInputparId).append(appndTextBox);
        $("#" + dblchangeInputparId).append(function () {
            $(dblappndBefore).before(appndTextBox);
        });

        let dblAppndRequire = $('input[name="fieldtypeMand"]:checked').val();

        if (dblAppndRequire == "yes") {
            $("#" + dblchangeInputId).attr("required", "required");
        }
        else {
            $("#" + dblchangeInputId).removeAttr("required", "required");
        }

        $("#" + dblchangeInputId).attr({
            "id": textBoxFieldId,
            "name": textBoxFieldId
        });

        $("#" + dblInputlblNam).html(textBoxFieldName);
    }

    if (textBxFieldType == "Email Id") {
        $("#" + dblchangeInputId).remove();
        $("." + dblRemovRadi).remove();
        $("#" + dblchangeInputparId + " .radio-container").remove();
        $("#" + dblchangeInputparId + " .check-container").remove();
        var appndEmailBx = '<input id="' + dblchangeInputId + '" type="email"  class="input-form-control txtBx" name="' + dblchangeInputId + '" required="required">';
        //$("#" +dblchangeInputparId).append(appndEmailBx);
        $("#" + dblchangeInputparId).append(function () {
            $(dblappndBefore).before(appndEmailBx);
        });
        let dblAppndRequire = $('input[name="fieldtypeMand"]:checked').val();
        if (dblAppndRequire == "yes") {
            $("#" + dblchangeInputId).attr("required", "required");
        }
        else {
            $("#" + dblchangeInputId).removeAttr("required", "required");
        }

        $("#" + dblchangeInputId).attr({
            "id": textBoxFieldId,
            "name": textBoxFieldId
        });

        $("#" + dblInputlblNam).html(textBoxFieldName);
    }

    if (textBxFieldType == "Phone") {
        $("#" + dblchangeInputId).remove();
        $("." + dblRemovRadi).remove();
        $("#" + dblchangeInputparId + " .radio-container").remove();
        $("#" + dblchangeInputparId + " .check-container").remove();
        var appndPhoneBx = '<input id="' + dblchangeInputId + '" type="tel"  class="input-form-control txtBx" name="' + dblchangeInputId + '" required="required">';
        $("#" + dblchangeInputparId).append(function () {
            $(dblappndBefore).before(appndPhoneBx);
        });
        let dblAppndRequire = $('input[name="fieldtypeMand"]:checked').val();
        if (dblAppndRequire == "yes") {
            $("#" + dblchangeInputId).attr("required", "required");
        } else {
            $("#" + dblchangeInputId).removeAttr("required", "required");
        }

        $("#" + dblchangeInputId).attr({
            "id": textBoxFieldId,
            "name": textBoxFieldId
        });

        $("#" + dblInputlblNam).html(textBoxFieldName);

    }

    if (textBxFieldType == "Date") {
        $("#" + dblchangeInputId).remove();
        $("." + dblRemovRadi).remove();
        //$(".radio-container").remove();
        $("#" + dblchangeInputparId + " .radio-container").remove();
        $("#" + dblchangeInputparId + " .check-container").remove();
        var appndDateBx = '<input id="' + dblchangeInputId + '" type="text" placeholder="' + textBoxFieldName + '" class="input-form-control txtBx" name="' + dblchangeInputId + '" required="required">';
        //$("#" +dblchangeInputparId).append(appndDateBx);
        $("#" + dblchangeInputparId).append(function () {
            $(dblappndBefore).before(appndDateBx);
        });
        let dblAppndRequire = $('input[name="fieldtypeMand"]:checked').val();
        if (dblAppndRequire == "yes") {
            $("#" + dblchangeInputId).attr("required", "required");
        } else {
            $("#" + dblchangeInputId).removeAttr("required", "required");
        }

        $("#" + dblchangeInputId).attr({
            "placeholder": textBoxFieldName,
            "id": textBoxFieldId,
            "name": textBoxFieldId
        });

        $("#" + dblInputlblNam).html(textBoxFieldName);

    }

    if (textBxFieldType == "Your Message") {
        $("#" + dblchangeInputId).remove();
        $("." + dblRemovRadi).remove();
        $("#" + dblchangeInputparId + " .radio-container").remove();
        $("#" + dblchangeInputparId + " .check-container").remove();
        var appndTextareaBx = '<textarea id="' + dblchangeInputId + '" class="input-form-control txtBx" placeholder="' + textBoxFieldName + '" name="' + dblchangeInputId + '"></textarea>';
        $("#" + dblchangeInputparId).append(function () {
            $(dblappndBefore).before(appndTextareaBx);
        });
        let dblAppndRequire = $('input[name="fieldtypeMand"]:checked').val();
        if (dblAppndRequire == "yes") {
            $("#" + dblchangeInputId).attr("required", "required");
        } else {
            $("#" + dblchangeInputId).removeAttr("required", "required");
        }

        $("#" + dblchangeInputId).attr({
            "placeholder": textBoxFieldName,
            "id": textBoxFieldId,
            "name": textBoxFieldId
        });

        $("#" + dblInputlblNam).html(textBoxFieldName);
    }

    if (textBxFieldType == "Dropdown List") {
        $("#" + dblchangeInputId).remove();
        $("." + dblRemovRadi).remove();
        $("#" + dblchangeInputparId + " .radio-container").remove();
        $("#" + dblchangeInputparId + " .check-container").remove();
        var dblAppndDropDownSelect = '<select id="' + dblchangeInputId + '" class="input-form-control txtBx" name="' + dblchangeInputId + '"></select>';
        //$("#" +dblchangeInputparId).append(dblAppndDropDownSelect);
        $("#" + dblchangeInputparId).append(function () {
            $(dblappndBefore).before(dblAppndDropDownSelect);
        });
        var dblDropDownOptVal = $("#dblDropDownlist").val(),
            dblDropDownOptList = dblDropDownOptVal.split(',');
        $("#" + dblchangeInputId).append('<option value="' + textBoxFieldName + '">Select ' + textBoxFieldName + '</option>');
        for (i = 0; i < dblDropDownOptList.length; i++) {
            $("#" + dblchangeInputId).append('<option value="' + dblDropDownOptList[i] + '">' + dblDropDownOptList[i] + '</option>');
        }
        $("#" + dblchangeInputId).attr({
            "name": textBoxFieldId,
            "id": textBoxFieldId
        });
        let dblAppndRequire = $('input[name="fieldtypeMand"]:checked').val();
        if (dblAppndRequire == "yes") {
            $("#" + dblchangeInputId).attr("required", "required");
        } else {
            $("#" + dblchangeInputId).removeAttr("required", "required");
        }

        if ($("#labelplaceholder").hasClass("lbl-active-bg")) {
            $("#" + dblInputlblNam).hide();
        }
        $("#" + dblInputlblNam).html(textBoxFieldName);
    }

    if (textBxFieldType == "Radio Button") {
        $("#" + dblchangeInputId).remove();
        $("#" + dblchangeInputparId + " .check-container").remove();
        if (dblCheckRadiRem == "radio-container") {
            $("#" + dblchangeInputparId + " .radio-container").remove();
        } else if (dblCheckRadiRem == "radio-container inline-check") {
            $("#" + dblchangeInputparId + " .radio-container.inline-check").remove();
        }

        var dblradiolistsplitval = $("#dblRadioOptlist").val(),
            dblRadioListVal = dblradiolistsplitval.split(",");
        for (i = 0; i < dblRadioListVal.length; i++) {
            $("#" + dblchangeInputparId).append(function () {
                $(dblappndBefore).before('<div class="radio-container inline-check">\
<input type="radio" class="input-check checkId" data-input-type="radio" id="'+ dblRadioListVal[i].replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase() + '" value="' + dblRadioListVal[i] + '" name="' + textBoxFieldName.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase() + '" required="required">\
<label for="'+ dblRadioListVal[i].replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase() + '" id="' + dblRadioListVal[i].replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase() + '" class="label-check" >' + dblRadioListVal[i] + '</label>\
</div>');
            });
        }

        var dblAppndRequire = $('input[name="fieldtypeMand"]:checked').val();
        dblAppndRadiAlign = $('input[name="radioAlign"]:checked').val();


        if (dblAppndRadiAlign == "radiHori") {
            $("#" + dblchangeInputparId + " .radio-container").addClass('inline-check');
        } else if (dblAppndRadiAlign == "radiVerti") {
            $("#" + dblchangeInputparId + " .radio-container").removeClass('inline-check');
        }


        if (dblAppndRequire == "yes" && dblCheckRadiRem == "input-form-control txtBx") {
            $("#" + dblchangeInputparId + " ." + dblCheckRadiRem + " input").attr('required', 'required');
            $("#" + dblchangeInputparId + " .radio-container input").attr('required', 'required');
        } else if (dblAppndRequire == "yes" && dblCheckRadiRem == "radio-container") {
            $("#" + dblchangeInputparId + " ." + dblCheckRadiRem + " input").attr('required', 'required');
        } else if (dblAppndRequire == "no" && dblCheckRadiRem == "input-form-control txtBx") {
            $("#" + dblchangeInputparId + " ." + dblCheckRadiRem + " input").removeAttr('required', 'required');
            $("#" + dblchangeInputparId + " .radio-container input").removeAttr('required', 'required');
        } else if (dblAppndRequire == "no" && dblCheckRadiRem == "radio-container") {
            $("#" + dblchangeInputparId + " ." + dblCheckRadiRem + " input").removeAttr('required', 'required');
        }
        if ($("#labelplaceholder").hasClass("lbl-active-bg")) {
            $("#" + dblInputlblNam).parent().removeClass('lblAlignPlaceholder');
        }

        $("#" + dblInputlblNam).html(textBoxFieldName);
    }

    if (textBxFieldType == "CheckBox") {
        $("#" + dblchangeInputId).remove();
        $("#" + dblchangeInputparId + " .radio-container").remove();
        if (dblCheckRadiRem == "check-container") {
            $("#" + dblchangeInputparId + " .check-container").remove();
        } else if (dblCheckRadiRem == "check-container inline-check") {
            $("#" + dblchangeInputparId + " .check-container.inline-check").remove();
        }
        var dblcheckBoxlistVal = $("#dblCheckOptlist").val(),
            dblCheckBoxVal = dblcheckBoxlistVal.split(",");
        for (i = 0; i < dblCheckBoxVal.length; i++) {
            $("#" + dblchangeInputparId).append(function () {
                $(dblappndBefore).before('<div class="check-container inline-check">\
						<input type="checkbox" class="input-check checkId" id="'+ dblCheckBoxVal[i].replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase() + '" value="' + dblCheckBoxVal[i] + '" name="' + dblCheckBoxVal[i].replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase() + '">\
						<label for="'+ dblCheckBoxVal[i].replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase() + '" id="' + dblCheckBoxVal[i].replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '').toLowerCase() + '" class="label-check" contenteditable="true">' + dblCheckBoxVal[i] + '</label>\
					</div>');
            });
        }

        var dblCheckBxAlign = $("input[name='checkAlign']:checked").val();
        if (dblCheckBxAlign == "checkHori") {
            $("#" + dblchangeInputparId + " .check-container").addClass('inline-check');
        } else {
            $("#" + dblchangeInputparId + " .check-container").removeClass('inline-check');
        }

        var dblCheckBxReq = $('input[name="fieldtypeMand"]:checked').val();

        if (dblCheckBxReq == "yes") {
            $("#" + dblchangeInputparId + " .check-container input").attr('required', 'required');
        } else {
            $("#" + dblchangeInputparId + " .check-container input").removeAttr('required', 'required');
        }
        if ($("#labelplaceholder").hasClass("lbl-active-bg")) {
            $("#" + dblInputlblNam).parent().removeClass('lblAlignPlaceholder');
        }
        $("#" + dblInputlblNam).html(textBoxFieldName);

    }

    if (textBxFieldType == "Submit") {

        if ($("#updateBtnName").hasClass("showTextEdit")) {
            $("#addFieldTypeErr").html("Please click on update button to save button name");
            setTimeout(function () { $("#addFieldTypeErr").html(" "); }, 5000);
            return false;
        } else {
            $("#addFieldTypeErr").html("");
        }

        if ($("button").hasClass("savebtn")) {
            $("#addFieldTypeErr").html("The Submit Button is Exist Aleady");
            setTimeout(function () { $("#addFieldTypeErr").html(" "); }, 5000);
            return false;
        } else if ((dblLayChang == "form-col-6" || dblParentsParentClss == "form-col-6") && dblMainParentsId == "doubleTextBox1") {
            $("#" + dblchangeInputId).remove();
            $("#" + dblchangeInputparId + " .btn-style").remove();
            $("#" + dblchangeInputparId + " .radio-container").remove();
            $("#" + dblchangeInputparId + " .check-container").remove();
            $("#" + dblSubbtnPrev).addClass('hidePopup');
            $("#" + dblchangeInputparId).addClass("adCol-100");
            $("#" + dblPatentsParentIds + "." + dblLayCurntId).prevAll().removeClass("form-col-6").addClass("form-col-10");
            $("#" + dblPatentsParentIds + "." + dblLayCurntId).removeClass("form-col-6").addClass("form-col-2");
            $("#" + dblchangeInputparId).append(function () {
                $(dblappndBefore).before('<button id="btnSubmit" type="submit" class="btn-style savebtn">' + textBoxFieldName + '</button>');
            });
        } else if ((dblLayChang == "form-col-4" || dblParentsParentClss == "form-col-4") && dblMainParentsId == "doubleTextBox1") {
            $("#" + dblchangeInputId).remove();
            $("#" + dblchangeInputparId + " .btn-style").remove();
            $("#" + dblchangeInputparId + " .radio-container").remove();
            $("#" + dblchangeInputparId + " .check-container").remove();
            $("#" + dblSubbtnPrev).addClass('hidePopup');
            $("#" + dblchangeInputparId).addClass("adCol-100");
            $("#" + dblPatentsParentIds + "." + dblLayCurntId).prevAll().removeClass("form-col-4").addClass("form-col-5");
            $("#" + dblPatentsParentIds + "." + dblLayCurntId).removeClass("form-col-4").addClass("form-col-2");
            $("#" + dblchangeInputparId).append(function () {
                $(dblappndBefore).before('<button id="btnSubmit" type="submit" class="btn-style savebtn">' + textBoxFieldName + '</button>');
            });
        } else if (dblLayChang == "form-col-2 sixLay" || dblLayChang == "form-col-2" || dblLayChang == "form-col-3" || dblLayChang == "form-col-4" || dblLayChang == "form-col-6" || dblLayChang == "form-col-5L" || dblParentsParentClss == "form-col-2 sixLay" || dblParentsParentClss == "form-col-2" || dblParentsParentClss == "form-col-3" || dblParentsParentClss == "form-col-4" || dblParentsParentClss == "form-col-6" || dblParentsParentClss == "form-col-5L") {
            layoutChange();
        }
    } else {
        $("#" + dblSubbtnPrev).removeClass('hidePopup');
        //$("#" +dblchangeInputparId).removeClass("adCol-100")
        $("#" + dblchangeInputparId + " button").remove();

        if ((dblLayChang == "form-col-6" || dblParentsParentClss == "form-col-6") && dblMainParentsId == "doubleTextBox1") {
            $("#" + dblPatentsParentIds + "." + dblLayCurntId).prevAll().removeClass("form-col-10").addClass("form-col-6");
            $("#" + dblPatentsParentIds + "." + dblLayCurntId).removeClass("form-col-2").addClass("form-col-6");
        }
        if ((dblLayChang == "form-col-4" || dblParentsParentClss == "form-col-4") && dblMainParentsId == "doubleTextBox1") {
            $("#" + dblPatentsParentIds + "." + dblLayCurntId).prevAll().removeClass("form-col-5").addClass("form-col-4");
            $("#" + dblPatentsParentIds + "." + dblLayCurntId).removeClass("form-col-2").addClass("form-col-4");
        }

        if ((dblLayChang == "form-col-2" || dblParentsParentClss == "form-col-2") && dblMainParentsId == "doubleTextBox1") {
            if (dblParentsallClass == "form-col-5") {
                $("#" + dblPatentsParentIds + "." + dblLayCurntId).prevAll().removeClass("form-col-5").addClass("form-col-4");
                $("#" + dblPatentsParentIds + "." + dblLayCurntId).removeClass("form-col-2").addClass("form-col-4");
            } else {
                $("#" + dblPatentsParentIds + "." + dblLayCurntId).prevAll().removeClass("form-col-10").addClass("form-col-6");
                $("#" + dblPatentsParentIds + "." + dblLayCurntId).removeClass("form-col-2").addClass("form-col-6");
                $("#" + dblPatentsParentIds + "." + dblLayCurntId).removeClass("form-col-2").addClass("form-col-4");
            }
        }

        if ((dblLayChang == "form-col-10" || dblParentsParentClss == "form-col-10") && dblMainParentsId == "doubleTextBox1") {
            $("#" + dblPatentsParentIds + "." + dblLayCurntId).prevAll().removeClass("form-col-10").addClass("form-col-6");
            $("#" + dblPatentsParentIds + "." + dblLayCurntId).removeClass("form-col-2").addClass("form-col-6");
        }

    }

    $("#selectfieldName").val("");
    $("#selectfieldType").val("");
    $("#dblDropDownlist").val("");
    $("#dblRadioOptlist").val("");
    $("#dblCheckOptlist").val("");
    $('input[name="radioAlign"]').prop('checked', false);

    $(".formDoubInputPopupwrap").removeClass('showEditPopup').addClass('hideEditPopup');
});

var dblDropDownlistCount = 0;
$(".formDoubInputPopupwrap").on('click', '.iconDropWrap ul li', function () {
    dblDropDownlistCount++;
    dbldropdownSelId = "dblDropDownList" + dblDropDownlistCount.toString();
    inputdataType = $(this).attr('data-fieldTypeName');
    inputdataTypeVal = $(this).attr('data-appendInput');
    $("#selectfieldType").val(inputdataTypeVal);

    if (inputdataType == "text") {
        $("#selectfieldName").removeAttr('disabled', 'disabled').css('background-color', '#fff');
        $(".editText").addClass('hidePopup').removeClass('showTextEdit');
    }


    if (inputdataType == "email") {
        $("#selectfieldName").removeAttr('disabled', 'disabled').css('background-color', '#fff');
        $(".editText").addClass('hidePopup').removeClass('showTextEdit');
    }

    if (inputdataType == "tel") {
        $("#selectfieldName").removeAttr('disabled', 'disabled').css('background-color', '#fff');
        $(".editText").addClass('hidePopup').removeClass('showTextEdit');
    }

    if (inputdataType == "textarea") {
        $("#selectfieldName").removeAttr('disabled', 'disabled').css('background-color', '#fff');
        $(".editText").addClass('hidePopup').removeClass('showTextEdit');
    }


    if (inputdataType == "select") {
        $("#selectfieldName").removeAttr('disabled', 'disabled').css('background-color', '#fff');
        $(".editText").addClass('hidePopup').removeClass('showTextEdit');
        $("#dblDropdownListWrap").removeClass("hideEditPopup").addClass("showTextEdit");
        $("#dblDropDownlist").val("");
    } else {
        $("#dblDropdownListWrap").removeClass("showTextEdit").addClass("hideEditPopup");
    }

    if (inputdataType == "radio") {
        $("#selectfieldName").removeAttr('disabled', 'disabled').css('background-color', '#fff');
        $(".editText").addClass('hidePopup').removeClass('showTextEdit');
        $("#dblRadioEditWrap").removeClass("hideEditPopup").addClass("showTextEdit");
        $("#radioAlignHV").removeClass("hideEditPopup").addClass("showTextEdit");
        $("#dblRadioOptlist").val("");
        $("#radiHori").prop('checked', true);
    } else {
        $("#dblRadioEditWrap").removeClass("showTextEdit").addClass("hideEditPopup");
        $("#radioAlignHV").removeClass("showTextEdit").addClass("hideEditPopup");
    }

    if (inputdataType == "checkbox") {
        $(".editCheckBoxOpt").removeClass("hideEditPopup").addClass("showTextEdit");
        $(".editText").addClass('hidePopup').removeClass('showTextEdit');
        $("#selectfieldName").removeAttr('disabled', 'disabled').css('background-color', '#fff');
        $("#dblCheckOptlist").val("");
    } else {
        $(".editCheckBoxOpt").removeClass("showTextEdit").addClass("hideEditPopup");
    }

    if (inputdataType == "date") {
        $("#selectfieldName").removeAttr('disabled', 'disabled').css('background-color', '#fff');
        $(".editText").addClass('hidePopup').removeClass('showTextEdit');
    }

    if (inputdataType == "submit") {
        $("#selectfieldName").removeAttr('disabled', 'disabled').css('background-color', '#fff');
        $("#dblfieldMand").addClass('hidePopup').removeClass('showTextEdit');
    } else {
        $("#dblfieldMand").addClass('showTextEdit').removeClass('hidePopup');
    }

});


$("#editBtnName").click(function () {
    $("#selectfieldName").removeAttr('disabled', 'disabled').css('background-color', '#fff');
    $(this).addClass('hidePopup').removeClass('showTextEdit');
    $("#updateBtnName").addClass("showTextEdit").removeClass('hidePopup').css("background-color", "#1AD9E9");
});

$("#updateBtnName").click(function () {
    var getBtnNameVal = $("#selectfieldName").val();
    $("#selectfieldName").attr('disabled', 'disabled').css('background-color', '#f0f0f0');
    $(this).addClass('hidePopup').removeClass('showTextEdit');
    $("#editBtnName").addClass("showTextEdit").removeClass('hidePopup');
    $("#btnSubmit").html(getBtnNameVal);
    $(".formDoubInputPopupwrap").removeClass('showEditPopup').addClass('hideEditPopup');
});

/* Horizontal Two TextBox Layout */


/* Horizontal Three TextBox Layout */

$("#textBoxThreelay").click(function () {
    dbleTextBoxLay++;
    if (cssObjectsFormBody.width == null) {
        errMessPop();
    }
    else if (dbleTextBoxLay == 0) {
        $(".frmdummyconts").remove();
        dbleTextBoxNamLay = "doubleTextBox" + dbleTextBoxLay.toString();
        let dblelabelNamFir = "fieldTypelblFir" + dbleTextBoxLay.toString();
        let dbleLabelNamSec = "fieldTypelblSec" + dbleTextBoxLay.toString();
        let dbleLabelNamThird = "fieldTypelblThird" + dbleTextBoxLay.toString();
        dbleInputIdFir = "inputIdColFir" + dbleTextBoxLay.toString();
        dbleInputIdSec = "inputIdColSec" + dbleTextBoxLay.toString();
        dbleInputIdThird = "inputIdColThird" + dbleTextBoxLay.toString();
        let dbllabelFir = "labelFir" + dbleTextBoxLay.toString();
        let dbllabelSec = "labelSec" + dbleTextBoxLay.toString();
        let dbllabelThird = "labelThird" + dbleTextBoxLay.toString();
        let dblInputFir = "dbletxtBxFir" + dbleTextBoxLay.toString();
        let dblInputSec = "dbletxtBxSec" + dbleTextBoxLay.toString();
        let dblInputThird = "dbletxtBxThird" + dbleTextBoxLay.toString();
        dbleInputLayChan = "dbleInputLay" + dbleTextBoxLay.toString();
        let twoTextBoxHTML = '<div id="' + dbleTextBoxNamLay + '" class="frmeditrow del doubleWrap positionRel padTopBot"><div class="form-col-4 form-mb-col-12"><div class="frmeditrow positionRel parName"><div id="' + dbllabelFir + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dblelabelNamFir + '">Name</label></div><div id="' + dblInputFir + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdFir + '" type="text" class="input-form-control txtBx" name="name" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="form-col-4 form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelSec + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamSec + '">Email Id</label></div><div id="' + dblInputSec + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdSec + '" type="email" class="input-form-control txtBx" name="emailId" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div id="' + dbleInputLayChan + '" class="form-col-4 yakkub"><div class="frmeditrow parName"><div id="' + dbllabelThird + '" class="form-col-4 labelStyle"><label id="' + dbleLabelNamThird + '">Phone</label></div><div id="' + dblInputThird + '" class="form-col-8 editDblTextBox"><input id="' + dbleInputIdThird + '" type="tel" class="input-form-control txtBx" name="mobile" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="delParent" class="fas fa-trash-alt" title="Duplicate"></span></div></div>';
        $("#appendFields").append(twoTextBoxHTML);
        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"]').addClass('adCol-100');
        }
        var findRadioClass = $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"]').next().children().hasClass('radio-container');
        var findCheckBoxClass = $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"]').next().children().hasClass('check-container');
        if ($("#labelplaceholder").hasClass("lbl-active-bg") && findRadioClass == true || $("#labelplaceholder").hasClass("lbl-active-bg") && findCheckBoxClass == true) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"]').each(function () {
                var radioLabelClassName = $(this).next().children().hasClass('radio-container');
                var checkBoxLabelClassName = $(this).next().children().hasClass('check-container');
                if (radioLabelClassName == true || checkBoxLabelClassName == true) {
                    $(this).addClass('adCol-100');
                    $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"]').addClass('adCol-100');
                } else {
                    $(this).addClass('adCol-100 lblAlignPlaceholder');
                    $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"]').addClass('adCol-100');
                }
            });

        } else if ($("#labelplaceholder").hasClass("lbl-active-bg") && findRadioClass !== true || $("#labelplaceholder").hasClass("lbl-active-bg") && findCheckBoxClass !== true) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"]').addClass('adCol-100 lblAlignPlaceholder');
            $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"]').addClass('adCol-100');
        }
    } else {
        $(".frmdummyconts").remove();
        dbleTextBoxNamLay = "doubleTextBox" + dbleTextBoxLay.toString();
        let dblelabelNamFir = "fieldTypelblFir" + dbleTextBoxLay.toString();
        let dbleLabelNamSec = "fieldTypelblSec" + dbleTextBoxLay.toString();
        let dbleLabelNamThird = "fieldTypelblThird" + dbleTextBoxLay.toString();
        let dbleInputIdFir = "inputIdColFir" + dbleTextBoxLay.toString();
        let dbleInputIdSec = "inputIdColSec" + dbleTextBoxLay.toString();
        let dbleInputIdThird = "inputIdColThird" + dbleTextBoxLay.toString();
        let dbllabelFir = "labelFir" + dbleTextBoxLay.toString();
        let dbllabelSec = "labelSec" + dbleTextBoxLay.toString();
        let dbllabelThird = "labelThird" + dbleTextBoxLay.toString();
        let dblInputFir = "dbletxtBxFir" + dbleTextBoxLay.toString();
        let dblInputSec = "dbletxtBxSec" + dbleTextBoxLay.toString();
        let dblInputThird = "dbletxtBxThird" + dbleTextBoxLay.toString();
        dbleInputLayChan = "dbleInputLay" + dbleTextBoxLay.toString();
        let twoTextBoxHTML = '<div id="' + dbleTextBoxNamLay + '" class="frmeditrow del doubleWrap positionRel padTopBot"><div class="form-col-4 form-mb-col-12"><div class="frmeditrow positionRel parName"><div id="' + dbllabelFir + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dblelabelNamFir + '">Name</label></div><div id="' + dblInputFir + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdFir + '" type="text" class="input-form-control txtBx" name="name" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="form-col-4 form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelSec + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamSec + '">Email Id</label></div><div id="' + dblInputSec + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdSec + '" type="email" class="input-form-control txtBx" name="emailId" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div id="' + dbleInputLayChan + '" class="form-col-4 form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelThird + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamThird + '">Phone</label></div><div id="' + dblInputThird + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdThird + '" type="tel" class="input-form-control txtBx" name="mobile" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="delParent" class="fas fa-trash-alt" title="Duplicate"></span></div></div>';
        $("#appendFields").append(twoTextBoxHTML);
        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"]').addClass('adCol-100');
        }
        var findRadioClass = $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"]').next().children().hasClass('radio-container');
        var findCheckBoxClass = $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"]').next().children().hasClass('check-container');
        if ($("#labelplaceholder").hasClass("lbl-active-bg") && findRadioClass == true || $("#labelplaceholder").hasClass("lbl-active-bg") && findCheckBoxClass == true) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"]').each(function () {
                var radioLabelClassName = $(this).next().children().hasClass('radio-container');
                var checkBoxLabelClassName = $(this).next().children().hasClass('check-container');
                if (radioLabelClassName == true || checkBoxLabelClassName == true) {
                    $(this).addClass('adCol-100');
                    $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"]').addClass('adCol-100');
                } else {
                    $(this).addClass('adCol-100 lblAlignPlaceholder');
                    $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"]').addClass('adCol-100');
                }
            });

        } else if ($("#labelplaceholder").hasClass("lbl-active-bg") && findRadioClass !== true || $("#labelplaceholder").hasClass("lbl-active-bg") && findCheckBoxClass !== true) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"]').addClass('adCol-100 lblAlignPlaceholder');
            $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"]').addClass('adCol-100');
        }
    }

});


/* Horizontal Three TextBox Layout */


/* Horizontal Four TextBox Layout */

$("#textBoxFourlay").click(function () {
    dbleTextBoxLay++;
    if (cssObjectsFormBody.width == null) {
        errMessPop();
    }
    else if (dbleTextBoxLay == 0) {
        $(".frmdummyconts").remove();
        dbleTextBoxNamLay = "doubleTextBox" + dbleTextBoxLay.toString();
        let dblelabelNamFir = "fieldTypelblFir" + dbleTextBoxLay.toString();
        let dbleLabelNamSec = "fieldTypelblSec" + dbleTextBoxLay.toString();
        let dbleLabelNamThird = "fieldTypelblThird" + dbleTextBoxLay.toString();
        let dbleLabelNamFour = "fieldTypelblFour" + dbleTextBoxLay.toString();
        dbleInputIdFir = "inputIdColFir" + dbleTextBoxLay.toString();
        dbleInputIdSec = "inputIdColSec" + dbleTextBoxLay.toString();
        dbleInputIdThird = "inputIdColThird" + dbleTextBoxLay.toString();
        dbleInputIdFour = "inputIdColFour" + dbleTextBoxLay.toString();
        let dbllabelFir = "labelFir" + dbleTextBoxLay.toString();
        let dbllabelSec = "labelSec" + dbleTextBoxLay.toString();
        let dbllabelThird = "labelThird" + dbleTextBoxLay.toString();
        let dbllabelFour = "labelFour" + dbleTextBoxLay.toString();
        let dblInputFir = "dbletxtBxFir" + dbleTextBoxLay.toString();
        let dblInputSec = "dbletxtBxSec" + dbleTextBoxLay.toString();
        let dblInputThird = "dbletxtBxThird" + dbleTextBoxLay.toString();
        let dblInputFour = "dbletxtBxFour" + dbleTextBoxLay.toString();
        dbleInputLayChan = "dbleInputLay" + dbleTextBoxLay.toString();
        let twoTextBoxHTML = '<div id="' + dbleTextBoxNamLay + '" class="frmeditrow del doubleWrap positionRel padTopBot"><div class="form-col-3 form-mb-col-12"><div class="frmeditrow positionRel parName"><div id="' + dbllabelFir + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dblelabelNamFir + '">Name</label></div><div id="' + dblInputFir + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdFir + '" type="text" class="input-form-control txtBx" name="name" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="form-col-3 form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelSec + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamSec + '">Email Id</label></div><div id="' + dblInputSec + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdSec + '" type="email" class="input-form-control txtBx" name="emailId" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="form-col-3 form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelThird + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamThird + '">Phone</label></div><div id="' + dblInputThird + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdThird + '" type="tel" class="input-form-control txtBx" name="mobile" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div id="' + dbleInputLayChan + '" class="form-col-3 form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelFour + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamFour + '">Query</label></div><div id="' + dblInputFour + '" class="form-col-8 form-mb-col-12 editDblTextBox"><textarea id="' + dbleInputIdFour + '" class="input-form-control txtBx" name="query"></textarea><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="delParent" class="fas fa-trash-alt" title="Duplicate"></span></div></div>';
        $("#appendFields").append(twoTextBoxHTML);
        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"]').addClass('adCol-100');
        }
        var findRadioClass = $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"]').next().children().hasClass('radio-container');
        var findCheckBoxClass = $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"]').next().children().hasClass('check-container');
        if ($("#labelplaceholder").hasClass("lbl-active-bg") && findRadioClass == true || $("#labelplaceholder").hasClass("lbl-active-bg") && findCheckBoxClass == true) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"]').each(function () {
                var radioLabelClassName = $(this).next().children().hasClass('radio-container');
                var checkBoxLabelClassName = $(this).next().children().hasClass('check-container');
                if (radioLabelClassName == true || checkBoxLabelClassName == true) {
                    $(this).addClass('adCol-100');
                    $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"]').addClass('adCol-100');
                } else {
                    $(this).addClass('adCol-100 lblAlignPlaceholder');
                    $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"]').addClass('adCol-100');
                }
            });

        } else if ($("#labelplaceholder").hasClass("lbl-active-bg") && findRadioClass !== true || $("#labelplaceholder").hasClass("lbl-active-bg") && findCheckBoxClass !== true) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"]').addClass('adCol-100 lblAlignPlaceholder');
            $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"]').addClass('adCol-100');
        }
    } else {
        $(".frmdummyconts").remove();
        dbleTextBoxNamLay = "doubleTextBox" + dbleTextBoxLay.toString();
        let dblelabelNamFir = "fieldTypelblFir" + dbleTextBoxLay.toString();
        let dbleLabelNamSec = "fieldTypelblSec" + dbleTextBoxLay.toString();
        let dbleLabelNamThird = "fieldTypelblThird" + dbleTextBoxLay.toString();
        let dbleLabelNamFour = "fieldTypelblFour" + dbleTextBoxLay.toString();
        let dbleInputIdFir = "inputIdColFir" + dbleTextBoxLay.toString();
        let dbleInputIdSec = "inputIdColSec" + dbleTextBoxLay.toString();
        let dbleInputIdThird = "inputIdColThird" + dbleTextBoxLay.toString();
        let dbleInputIdFour = "inputIdColFour" + dbleTextBoxLay.toString();
        let dbllabelFir = "labelFir" + dbleTextBoxLay.toString();
        let dbllabelSec = "labelSec" + dbleTextBoxLay.toString();
        let dbllabelThird = "labelThird" + dbleTextBoxLay.toString();
        let dbllabelFour = "labelFour" + dbleTextBoxLay.toString();
        let dblInputFir = "dbletxtBxFir" + dbleTextBoxLay.toString();
        let dblInputSec = "dbletxtBxSec" + dbleTextBoxLay.toString();
        let dblInputThird = "dbletxtBxThird" + dbleTextBoxLay.toString();
        let dblInputFour = "dbletxtBxFour" + dbleTextBoxLay.toString();
        dbleInputLayChan = "dbleInputLay" + dbleTextBoxLay.toString();
        let twoTextBoxHTML = '<div id="' + dbleTextBoxNamLay + '" class="frmeditrow del doubleWrap positionRel padTopBot"><div  class="form-col-3 form-mb-col-12"><div class="frmeditrow positionRel parName"><div id="' + dbllabelFir + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dblelabelNamFir + '">Name</label></div><div id="' + dblInputFir + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdFir + '" type="text" class="input-form-control txtBx" name="name" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="form-col-3 form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelSec + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamSec + '">Email Id</label></div><div id="' + dblInputSec + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdSec + '" type="email" class="input-form-control txtBx" name="emailId" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="form-col-3 form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelThird + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamThird + '">Phone</label></div><div id="' + dblInputThird + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdThird + '" type="tel" class="input-form-control txtBx" name="mobile" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div id="' + dbleInputLayChan + '" class="form-col-3 form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelFour + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamFour + '">Query</label></div><div id="' + dblInputFour + '" class="form-col-8 form-mb-col-12 editDblTextBox"><textarea id="' + dbleInputIdFour + '" class="input-form-control txtBx" name="query"></textarea><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="delParent" class="fas fa-trash-alt" title="Duplicate"></span></div></div>';
        $("#appendFields").append(twoTextBoxHTML);
        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"]').addClass('adCol-100');
        }
        var findRadioClass = $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"]').next().children().hasClass('radio-container');
        var findCheckBoxClass = $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"]').next().children().hasClass('check-container');
        if ($("#labelplaceholder").hasClass("lbl-active-bg") && findRadioClass == true || $("#labelplaceholder").hasClass("lbl-active-bg") && findCheckBoxClass == true) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"]').each(function () {
                var radioLabelClassName = $(this).next().children().hasClass('radio-container');
                var checkBoxLabelClassName = $(this).next().children().hasClass('check-container');
                if (radioLabelClassName == true || checkBoxLabelClassName == true) {
                    $(this).addClass('adCol-100');
                    $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"]').addClass('adCol-100');
                } else {
                    $(this).addClass('adCol-100 lblAlignPlaceholder');
                    $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"]').addClass('adCol-100');
                }
            });

        } else if ($("#labelplaceholder").hasClass("lbl-active-bg") && findRadioClass !== true || $("#labelplaceholder").hasClass("lbl-active-bg") && findCheckBoxClass !== true) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"]').addClass('adCol-100 lblAlignPlaceholder');
            $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"]').addClass('adCol-100');
        }
    }

});


/* Horizontal Four TextBox Layout */


/* Horizontal Five TextBox Layout */

$("#textBoxFivelay").click(function () {
    dbleTextBoxLay++;
    if (cssObjectsFormBody.width == null) {
        errMessPop();
    }
    else if (dbleTextBoxLay == 0) {
        $(".frmdummyconts").remove();
        dbleTextBoxNamLay = "doubleTextBox" + dbleTextBoxLay.toString();
        let dblelabelNamFir = "fieldTypelblFir" + dbleTextBoxLay.toString();
        let dbleLabelNamSec = "fieldTypelblSec" + dbleTextBoxLay.toString();
        let dbleLabelNamThird = "fieldTypelblThird" + dbleTextBoxLay.toString();
        let dbleLabelNamFour = "fieldTypelblFour" + dbleTextBoxLay.toString();
        let dbleLabelNamFive = "fieldTypelblFive" + dbleTextBoxLay.toString();
        dbleInputIdFir = "inputIdColFir" + dbleTextBoxLay.toString();
        dbleInputIdSec = "inputIdColSec" + dbleTextBoxLay.toString();
        dbleInputIdThird = "inputIdColThird" + dbleTextBoxLay.toString();
        dbleInputIdFour = "inputIdColFour" + dbleTextBoxLay.toString();
        dbleInputIdFive = "inputIdColFive" + dbleTextBoxLay.toString();
        let dbllabelFir = "labelFir" + dbleTextBoxLay.toString();
        let dbllabelSec = "labelSec" + dbleTextBoxLay.toString();
        let dbllabelThird = "labelThird" + dbleTextBoxLay.toString();
        let dbllabelFour = "labelFour" + dbleTextBoxLay.toString();
        let dbllabelFive = "labelFive" + dbleTextBoxLay.toString();
        let dblInputFir = "dbletxtBxFir" + dbleTextBoxLay.toString();
        let dblInputSec = "dbletxtBxSec" + dbleTextBoxLay.toString();
        let dblInputThird = "dbletxtBxThird" + dbleTextBoxLay.toString();
        let dblInputFour = "dbletxtBxFour" + dbleTextBoxLay.toString();
        let dblInputFive = "dbletxtBxFive" + dbleTextBoxLay.toString();
        dbleInputLayChan = "dbleInputLay" + dbleTextBoxLay.toString();
        let twoTextBoxHTML = '<div id="' + dbleTextBoxNamLay + '" class="frmeditrow del doubleWrap positionRel padTopBot"><div class="form-col-5L form-mb-col-12"><div class="frmeditrow positionRel parName"><div id="' + dbllabelFir + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dblelabelNamFir + '">Name</label></div><div id="' + dblInputFir + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdFir + '" type="text" class="input-form-control txtBx" name="name" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="form-col-5L form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelSec + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamSec + '">Email Id</label></div><div id="' + dblInputSec + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdSec + '" type="email" class="input-form-control txtBx" name="emailId" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="form-col-5L form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelThird + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamThird + '">Phone</label></div><div id="' + dblInputThird + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdThird + '" type="tel" class="input-form-control txtBx" name="mobile" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="form-col-5L form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelFour + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamFour + '">Products</label></div><div id="' + dblInputFour + '" class="form-col-8 form-mb-col-12 editDblTextBox"><select id="' + dbleInputIdFour + '" class="input-form-control"><option value="Select">Product</option><option value="shirt">Shirts</option><option value="pants">Pants</option></select><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div id="' + dbleInputLayChan + '" class="form-col-5L form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelFive + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamFive + '">Query</label></div><div id="' + dblInputFive + '" class="form-col-8 form-mb-col-12 editDblTextBox"><textarea id="' + dbleInputIdFive + '" class="input-form-control txtBx" name="query"></textarea><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="delParent" class="fas fa-trash-alt" title="Duplicate"></span></div></div>';
        $("#appendFields").append(twoTextBoxHTML);
        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"],[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"],[id^="dbletxtBxFive"]').addClass('adCol-100');
        }
        var findRadioClass = $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"]').next().children().hasClass('radio-container');
        var findCheckBoxClass = $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"]').next().children().hasClass('check-container');
        if ($("#labelplaceholder").hasClass("lbl-active-bg") && findRadioClass == true || $("#labelplaceholder").hasClass("lbl-active-bg") && findCheckBoxClass == true) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"]').each(function () {
                var radioLabelClassName = $(this).next().children().hasClass('radio-container');
                var checkBoxLabelClassName = $(this).next().children().hasClass('check-container');
                if (radioLabelClassName == true || checkBoxLabelClassName == true) {
                    $(this).addClass('adCol-100');
                    $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"],[id^="labelFive"]').addClass('adCol-100');
                } else {
                    $(this).addClass('adCol-100 lblAlignPlaceholder');
                    $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"],[id^="dbletxtBxFive"]').addClass('adCol-100');
                }
            });

        } else if ($("#labelplaceholder").hasClass("lbl-active-bg") && findRadioClass !== true || $("#labelplaceholder").hasClass("lbl-active-bg") && findCheckBoxClass !== true) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"]').addClass('adCol-100 lblAlignPlaceholder');
            $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"],[id^="dbletxtBxFive"]').addClass('adCol-100');
        }
    } else {
        $(".frmdummyconts").remove();
        dbleTextBoxNamLay = "doubleTextBox" + dbleTextBoxLay.toString();
        let dblelabelNamFir = "fieldTypelblFir" + dbleTextBoxLay.toString();
        let dbleLabelNamSec = "fieldTypelblSec" + dbleTextBoxLay.toString();
        let dbleLabelNamThird = "fieldTypelblThird" + dbleTextBoxLay.toString();
        let dbleLabelNamFour = "fieldTypelblFour" + dbleTextBoxLay.toString();
        let dbleLabelNamFive = "fieldTypelblFive" + dbleTextBoxLay.toString();
        let dbleInputIdFir = "inputIdColFir" + dbleTextBoxLay.toString();
        let dbleInputIdSec = "inputIdColSec" + dbleTextBoxLay.toString();
        let dbleInputIdThird = "inputIdColThird" + dbleTextBoxLay.toString();
        let dbleInputIdFour = "inputIdColFour" + dbleTextBoxLay.toString();
        let dbleInputIdFive = "inputIdColFive" + dbleTextBoxLay.toString();
        let dbllabelFir = "labelFir" + dbleTextBoxLay.toString();
        let dbllabelSec = "labelSec" + dbleTextBoxLay.toString();
        let dbllabelThird = "labelThird" + dbleTextBoxLay.toString();
        let dbllabelFour = "labelFour" + dbleTextBoxLay.toString();
        let dbllabelFive = "labelFive" + dbleTextBoxLay.toString();
        let dblInputFir = "dbletxtBxFir" + dbleTextBoxLay.toString();
        let dblInputSec = "dbletxtBxSec" + dbleTextBoxLay.toString();
        let dblInputThird = "dbletxtBxThird" + dbleTextBoxLay.toString();
        let dblInputFour = "dbletxtBxFour" + dbleTextBoxLay.toString();
        let dblInputFive = "dbletxtBxFive" + dbleTextBoxLay.toString();
        dbleInputLayChan = "dbleInputLay" + dbleTextBoxLay.toString();
        let twoTextBoxHTML = '<div id="' + dbleTextBoxNamLay + '" class="frmeditrow del doubleWrap positionRel padTopBot"><div class="form-col-5L form-mb-col-12"><div class="frmeditrow positionRel parName"><div id="' + dbllabelFir + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dblelabelNamFir + '">Name</label></div><div id="' + dblInputFir + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdFir + '" type="text" class="input-form-control txtBx" name="name" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="form-col-5L form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelSec + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamSec + '">Email</label></div><div id="' + dblInputSec + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdSec + '" type="email" class="input-form-control txtBx" name="emailId" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="form-col-5L form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelThird + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamThird + '">Phone</label></div><div id="' + dblInputThird + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdThird + '" type="tel" class="input-form-control txtBx" name="phone" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="form-col-5L form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelFour + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamFour + '">Mobile</label></div><div id="' + dblInputFour + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdFour + '" type="tel" class="input-form-control txtBx" name="mobile" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div id="' + dbleInputLayChan + '" class="form-col-5L form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelFive + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamFive + '">Query</label></div><div id="' + dblInputFive + '" class="form-col-8 form-mb-col-12 editDblTextBox"><textarea id="' + dbleInputIdFive + '" class="input-form-control txtBx" name="query"></textarea><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="delParent" class="fas fa-trash-alt" title="Duplicate"></span></div></div>';
        $("#appendFields").append(twoTextBoxHTML);
        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"],[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"],[id^="dbletxtBxFive"]').addClass('adCol-100');
        }
        var findRadioClass = $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"]').next().children().hasClass('radio-container');
        var findCheckBoxClass = $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"]').next().children().hasClass('check-container');
        if ($("#labelplaceholder").hasClass("lbl-active-bg") && findRadioClass == true || $("#labelplaceholder").hasClass("lbl-active-bg") && findCheckBoxClass == true) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"]').each(function () {
                var radioLabelClassName = $(this).next().children().hasClass('radio-container');
                var checkBoxLabelClassName = $(this).next().children().hasClass('check-container');
                if (radioLabelClassName == true || checkBoxLabelClassName == true) {
                    $(this).addClass('adCol-100');
                    $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"],[id^="labelFive"]').addClass('adCol-100');
                } else {
                    $(this).addClass('adCol-100 lblAlignPlaceholder');
                    $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"],[id^="dbletxtBxFive"]').addClass('adCol-100');
                }
            });

        } else if ($("#labelplaceholder").hasClass("lbl-active-bg") && findRadioClass !== true || $("#labelplaceholder").hasClass("lbl-active-bg") && findCheckBoxClass !== true) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"]').addClass('adCol-100 lblAlignPlaceholder');
            $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"],[id^="dbletxtBxFive"]').addClass('adCol-100');
        }
    }

});

/* Horizontal Five TextBox Layout */


/* Horizontal Six TextBox Layout */

$("#textBoxSixlay").click(function () {
    dbleTextBoxLay++;
    if (cssObjectsFormBody.width == null) {
        errMessPop();
    }
    else if (dbleTextBoxLay == 0) {
        $(".frmdummyconts").remove();
        dbleTextBoxNamLay = "doubleTextBox" + dbleTextBoxLay.toString();
        let dblelabelNamFir = "fieldTypelblFir" + dbleTextBoxLay.toString();
        let dbleLabelNamSec = "fieldTypelblSec" + dbleTextBoxLay.toString();
        let dbleLabelNamThird = "fieldTypelblThird" + dbleTextBoxLay.toString();
        let dbleLabelNamFour = "fieldTypelblFour" + dbleTextBoxLay.toString();
        let dbleLabelNamFive = "fieldTypelblFive" + dbleTextBoxLay.toString();
        let dbleLabelNamSix = "fieldTypelblSix" + dbleTextBoxLay.toString();
        dbleInputIdFir = "inputIdColFir" + dbleTextBoxLay.toString();
        dbleInputIdSec = "inputIdColSec" + dbleTextBoxLay.toString();
        dbleInputIdThird = "inputIdColThird" + dbleTextBoxLay.toString();
        dbleInputIdFour = "inputIdColFour" + dbleTextBoxLay.toString();
        dbleInputIdFive = "inputIdColFive" + dbleTextBoxLay.toString();
        dbleInputIdSix = "inputIdColSix" + dbleTextBoxLay.toString();
        let dbllabelFir = "labelFir" + dbleTextBoxLay.toString();
        let dbllabelSec = "labelSec" + dbleTextBoxLay.toString();
        let dbllabelThird = "labelThird" + dbleTextBoxLay.toString();
        let dbllabelFour = "labelFour" + dbleTextBoxLay.toString();
        let dbllabelFive = "labelFive" + dbleTextBoxLay.toString();
        let dbllabelSix = "labelSix" + dbleTextBoxLay.toString();
        let dblInputFir = "dbletxtBxFir" + dbleTextBoxLay.toString();
        let dblInputSec = "dbletxtBxSec" + dbleTextBoxLay.toString();
        let dblInputThird = "dbletxtBxThird" + dbleTextBoxLay.toString();
        let dblInputFour = "dbletxtBxFour" + dbleTextBoxLay.toString();
        let dblInputFive = "dbletxtBxFive" + dbleTextBoxLay.toString();
        let dblInputSix = "dbletxtBxSix" + dbleTextBoxLay.toString();
        dbleInputLayChan = "dbleInputLay" + dbleTextBoxLay.toString();
        let twoTextBoxHTML = '<div id="' + dbleTextBoxNamLay + '" class="frmeditrow del doubleWrap positionRel padTopBot"><div class="form-col-2 form-mb-col-12"><div class="frmeditrow positionRel parName"><div id="' + dbllabelFir + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dblelabelNamFir + '">Name</label></div><div id="' + dblInputFir + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdFir + '" type="text" class="input-form-control txtBx" name="name" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="form-col-2 form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelSec + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamSec + '">Email</label></div><div id="' + dblInputSec + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdSec + '" type="email" class="input-form-control txtBx" name="emailId" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="form-col-2 form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelThird + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamThird + '">Phone</label></div><div id="' + dblInputThird + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdThird + '" type="tel" class="input-form-control txtBx" name="phone" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="form-col-2 form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelFour + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamFour + '">Mobile</label></div><div id="' + dblInputFour + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdFour + '" type="tel" class="input-form-control txtBx" name="mobile" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="form-col-2 form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelFive + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamFive + '">DOB</label></div><div id="' + dblInputFive + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdFive + '" type="date" onfocus="(this.type=&quot;date&quot;)" class="input-form-control txtBx" name="dob" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div id="' + dbleInputLayChan + '" class="form-col-2 form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelSix + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamSix + '">Query</label></div><div id="' + dblInputSix + '" class="form-col-8 form-mb-col-12 editDblTextBox"><textarea id="' + dbleInputIdSix + '" class="input-form-control txtBx"  name="query"></textarea><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="delParent" class="fas fa-trash-alt" title="Duplicate"></span></div></div>';
        $("#appendFields").append(twoTextBoxHTML);
        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"],[id^="labelSix"],[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"],[id^="dbletxtBxFive"],[id^="dbletxtBxSix"]').addClass('adCol-100');
        }
        var findRadioClass = $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"],[id^="labelSix"]').next().children().hasClass('radio-container');
        var findCheckBoxClass = $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"],[id^="labelSix"]').next().children().hasClass('check-container');
        if ($("#labelplaceholder").hasClass("lbl-active-bg") && findRadioClass == true || $("#labelplaceholder").hasClass("lbl-active-bg") && findCheckBoxClass == true) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"],[id^="labelSix"]').each(function () {
                var radioLabelClassName = $(this).next().children().hasClass('radio-container');
                var checkBoxLabelClassName = $(this).next().children().hasClass('check-container');
                if (radioLabelClassName == true || checkBoxLabelClassName == true) {
                    $(this).addClass('adCol-100');
                    $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"],[id^="dbletxtBxFive"],[id^="dbletxtBxSix"]').addClass('adCol-100');
                } else {
                    $(this).addClass('adCol-100 lblAlignPlaceholder');
                    $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"],[id^="dbletxtBxFive"],[id^="dbletxtBxSix"]').addClass('adCol-100');
                }
            });

        } else if ($("#labelplaceholder").hasClass("lbl-active-bg") && findRadioClass !== true || $("#labelplaceholder").hasClass("lbl-active-bg") && findCheckBoxClass !== true) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"],[id^="labelSix"]').addClass('adCol-100 lblAlignPlaceholder');
            $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"],[id^="dbletxtBxFive"],[id^="dbletxtBxSix"]').addClass('adCol-100');
        }
    } else {
        $(".frmdummyconts").remove();
        dbleTextBoxNamLay = "doubleTextBox" + dbleTextBoxLay.toString();
        let dblelabelNamFir = "fieldTypelblFir" + dbleTextBoxLay.toString();
        let dbleLabelNamSec = "fieldTypelblSec" + dbleTextBoxLay.toString();
        let dbleLabelNamThird = "fieldTypelblThird" + dbleTextBoxLay.toString();
        let dbleLabelNamFour = "fieldTypelblFour" + dbleTextBoxLay.toString();
        let dbleLabelNamFive = "fieldTypelblFive" + dbleTextBoxLay.toString();
        let dbleLabelNamSix = "fieldTypelblSix" + dbleTextBoxLay.toString();
        let dbleInputIdFir = "inputIdColFir" + dbleTextBoxLay.toString();
        let dbleInputIdSec = "inputIdColSec" + dbleTextBoxLay.toString();
        let dbleInputIdThird = "inputIdColThird" + dbleTextBoxLay.toString();
        let dbleInputIdFour = "inputIdColFour" + dbleTextBoxLay.toString();
        let dbleInputIdFive = "inputIdColFive" + dbleTextBoxLay.toString();
        let dbleInputIdSix = "inputIdColSix" + dbleTextBoxLay.toString();
        let dbllabelFir = "labelFir" + dbleTextBoxLay.toString();
        let dbllabelSec = "labelSec" + dbleTextBoxLay.toString();
        let dbllabelThird = "labelThird" + dbleTextBoxLay.toString();
        let dbllabelFour = "labelFour" + dbleTextBoxLay.toString();
        let dbllabelFive = "labelFive" + dbleTextBoxLay.toString();
        let dbllabelSix = "labelSix" + dbleTextBoxLay.toString();
        let dblInputFir = "dbletxtBxFir" + dbleTextBoxLay.toString();
        let dblInputSec = "dbletxtBxSec" + dbleTextBoxLay.toString();
        let dblInputThird = "dbletxtBxThird" + dbleTextBoxLay.toString();
        let dblInputFour = "dbletxtBxFour" + dbleTextBoxLay.toString();
        let dblInputFive = "dbletxtBxFive" + dbleTextBoxLay.toString();
        let dblInputSix = "dbletxtBxSix" + dbleTextBoxLay.toString();
        dbleInputLayChan = "dbleInputLay" + dbleTextBoxLay.toString();
        let twoTextBoxHTML = '<div id="' + dbleTextBoxNamLay + '" class="frmeditrow del doubleWrap positionRel padTopBot"><div class="form-col-2 form-mb-col-12"><div class="frmeditrow positionRel parName"><div id="' + dbllabelFir + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dblelabelNamFir + '">Name</label></div><div id="' + dblInputFir + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdFir + '" type="text" class="input-form-control txtBx" name="name" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="form-col-2 form-mb-col-12"><div class="frmeditrowrow parName"><div id="' + dbllabelSec + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamSec + '">Email</label></div><div id="' + dblInputSec + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdSec + '" type="email" class="input-form-control txtBx" name="emailId" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="form-col-2 form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelThird + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamThird + '">Phone</label></div><div id="' + dblInputThird + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdThird + '" type="tel" class="input-form-control txtBx" name="phone" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="form-col-2 form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelFour + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamFour + '">Mobile</label></div><div id="' + dblInputFour + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdFour + '" type="tel" class="input-form-control txtBx" name="mobile" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="form-col-2 form-mb-col-12"><div class="frmeditrow parName"><div id="' + dbllabelFive + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamFive + '">DOB</label></div><div id="' + dblInputFive + '" class="form-col-8 form-mb-col-12 editDblTextBox"><input id="' + dbleInputIdFive + '" type="date" onfocus="(this.type=&quot;date&quot;)" class="input-form-control txtBx" name="dob" required="required" ><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div id="' + dbleInputLayChan + '" class="form-col-2 form-mb-col-12 sixLay"><div class="frmeditrow parName"><div id="' + dbllabelSix + '" class="form-col-4 form-mb-col-12 labelStyle"><label id="' + dbleLabelNamSix + '">Query</label></div><div id="' + dblInputSix + '" class="form-col-8 form-mb-col-12 editDblTextBox"><textarea id="' + dbleInputIdSix + '" class="input-form-control txtBx"  name="query"></textarea><div class="editIconWrap"><span id="editDblTextBoxName" class="fas fa-pencil-alt" title="Edit TextBox"></span></div></div></div></div><div class="delIconWrap"><span id="movedown" class="fas fa-arrow-down" title="Move Down"></span><span id="moveup" class="fas fa-arrow-up" title="Move Up"></span><span id="delParent" class="fas fa-trash-alt" title="Duplicate"></span></div></div>';
        $("#appendFields").append(twoTextBoxHTML);
        if ($("#labelTopAlign").hasClass("lbl-active-bg")) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"],[id^="labelSix"],[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"],[id^="dbletxtBxFive"],[id^="dbletxtBxSix"]').addClass('adCol-100');
        }
        var findRadioClass = $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"],[id^="labelSix"]').next().children().hasClass('radio-container');
        var findCheckBoxClass = $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"],[id^="labelSix"]').next().children().hasClass('check-container');
        if ($("#labelplaceholder").hasClass("lbl-active-bg") && findRadioClass == true || $("#labelplaceholder").hasClass("lbl-active-bg") && findCheckBoxClass == true) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"],[id^="labelSix"]').each(function () {
                var radioLabelClassName = $(this).next().children().hasClass('radio-container');
                var checkBoxLabelClassName = $(this).next().children().hasClass('check-container');
                if (radioLabelClassName == true || checkBoxLabelClassName == true) {
                    $(this).addClass('adCol-100');
                    $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"],[id^="dbletxtBxFive"],[id^="dbletxtBxSix"]').addClass('adCol-100');
                } else {
                    $(this).addClass('adCol-100 lblAlignPlaceholder');
                    $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"],[id^="dbletxtBxFive"],[id^="dbletxtBxSix"]').addClass('adCol-100');
                }
            });

        } else if ($("#labelplaceholder").hasClass("lbl-active-bg") && findRadioClass !== true || $("#labelplaceholder").hasClass("lbl-active-bg") && findCheckBoxClass !== true) {
            $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"],[id^="labelSix"]').addClass('adCol-100 lblAlignPlaceholder');
            $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"],[id^="dbletxtBxFive"],[id^="dbletxtBxSix"]').addClass('adCol-100');
        }
    }

});

/* Horizontal Six TextBox Layout */



layoutChange = function () {
    $("#" + dblchangeInputId).remove();
    $("#" + dblchangeInputparId + " .btn-style").remove();
    $("#" + dblchangeInputparId + " .radio-container").remove();
    $("#" + dblchangeInputparId + " .check-container").remove();
    $("#" + dblSubbtnPrev).addClass('hidePopup');
    $("#" + dblchangeInputparId).addClass("adCol-100");
    $("#" + dblchangeInputparId).append(function () {
        $(dblappndBefore).before('<button id="btnSubmit" type="submit" class="btn-style savebtn">' + textBoxFieldName + '</button>');
    });
}


//Style Editor Started here

labelAlignTop = function () {
    $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"],[id^="labelSix"],[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"],[id^="dbletxtBxFive"],[id^="dbletxtBxSix"],[id^="textBoxlblCont"],[id^="textBoxInptCont"],[id^="emailLblCont"],[id^="emailInptCont"],[id^="phoneLblWrap"],[id^="phoneInptWrap"],[id^="custTextBoxlblwrp"],[id^="custTextBoxinptWrp"],[id^="otpTextBoxlblwrp"],[id^="otpTextBoxinptWrp"],[id^="txtMessLblWrap"],[id^="txtMessInptWrap"],[id^="dropDownlblWrap"],[id^="dropDownInptWrap"],[id^="radiobtnlblWrap"],[id^="radiobtninptWrap"],[id^="checkBoxlblWrap"],[id^="radiobtninptWrap"],[id^="dateBoxlblWrap"],[id^="dateBoxInptWrap"]').addClass("adCol-100");
    $('[id^="checkBoxInptWrap"]').show().addClass("adCol-100");
};

labelAlignDefaultLeft = function () {
    $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"],[id^="labelSix"],[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"],[id^="dbletxtBxFive"],[id^="dbletxtBxSix"],[id^="textBoxlblCont"],[id^="textBoxInptCont"],[id^="emailLblCont"],[id^="emailInptCont"],[id^="phoneLblWrap"],[id^="phoneInptWrap"],[id^="custTextBoxlblwrp"],[id^="custTextBoxinptWrp"],[id^="otpTextBoxlblwrp"],[id^="otpTextBoxinptWrp"],[id^="txtMessLblWrap"],[id^="txtMessInptWrap"],[id^="dropDownlblWrap"],[id^="dropDownInptWrap"],[id^="radiobtnlblWrap"],[id^="radiobtninptWrap"],[id^="checkBoxlblWrap"],[id^="checkBoxInptWrap"],[id^="dateBoxlblWrap"],[id^="dateBoxInptWrap"]').removeClass("adCol-100");
    $('[id^="dropDownlblWrap"]').show();
};

labelAlignPlaceholder = function () {
    $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"],[id^="labelSix"],[id^="textBoxlblCont"],[id^="emailLblCont"],[id^="phoneLblWrap"],[id^="custTextBoxlblwrp"],[id^="otpTextBoxlblwrp"],[id^="txtMessLblWrap"],[id^="dateBoxlblWrap"]').addClass("lblAlignPlaceholder adCol-100");
    $('[id^="dropDownlblWrap"]').hide();
    $('[id^="dbletxtBxFir"],[id^="dbletxtBxSec"],[id^="dbletxtBxThird"],[id^="dbletxtBxFour"],[id^="dbletxtBxFive"],[id^="dbletxtBxSix"],[id^="textBoxInptCont"],[id^="emailInptCont"],[id^="phoneInptWrap"],[id^="custTextBoxinptWrp"],[id^="otpTextBoxinptWrp"],[id^="txtMessInptWrap"],[id^="dropDownInptWrap"],[id^="radiobtninptWrap"],[id^="checkBoxInptWrap"],[id^="dateBoxInptWrap"]').addClass("adCol-100");
};

$("#labelTopAlign").click(function () {
    if ($('[id^="doubleTextBox"],[id^="textBoxName"],[id^="textBoxEmail"],[id^="textBoxPhone"],[id^="custTextbox"],[id^="otpTextbox"],[id^="inputDropDown"], [id^="inputMess1"],[id^="inputRadioBtn"],[id^="inputCheckBox"],[id^="inputDateWrap"]').length == 0) {
        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterFormWidth);
    }
    else {
        $(this).addClass("lbl-active-bg");

        if ($(this).hasClass("labelAlignImgTwo lbl-active-bg")) {
            $(allLblId).show();
            $('[id^="dropDownlblWrap"]').show();
            $("#" + dblInputlblNam).show();
            // $('.simpleForm input[type=text],input[type=email],input[type=tel],input[type=date],textarea').val('');
        }

        $("#labelDefaultAlign").removeClass("lbl-active-bg");
        $("#labelplaceholder").removeClass("lbl-active-bg");
        $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"],[id^="labelSix"],[id^="textBoxlblCont"],[id^="emailLblCont"],[id^="phoneLblWrap"],[id^="custTextBoxlblwrp"],[id^="otpTextBoxlblwrp"],[id^="txtMessLblWrap"],[id^="dropDownlblWrap"],[id^="radiobtnlblWrap"],[id^="checkBoxlblWrap"],[id^="dateBoxlblWrap"]').removeClass("lblAlignPlaceholder top-6");
        labelAlignTop();
    }
});

$("#labelDefaultAlign").click(function () {

    if ($('[id^="doubleTextBox"],[id^="textBoxName"],[id^="textBoxEmail"],[id^="textBoxPhone"],[id^="custTextbox"],[id^="otpTextbox"],[id^="inputDropDown"], [id^="inputMess1"],[id^="inputRadioBtn"],[id^="inputCheckBox"],[id^="inputDateWrap"]').length == 0) {
        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.EnterFormWidth);
    }
    else {
        $(this).addClass("lbl-active-bg");
        if ($(this).hasClass("labelAlignImgone lbl-active-bg")) {
            //$('.simpleForm input[type=text],input[type=email],input[type=tel],input[type=date],textarea').val('');
            $(allLblId).show();
        }
        $("#labelTopAlign").removeClass("lbl-active-bg");
        $("#labelplaceholder").removeClass("lbl-active-bg");
        $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"],[id^="labelSix"],[id^="textBoxlblCont"],[id^="emailLblCont"],[id^="phoneLblWrap"],[id^="custTextBoxlblwrp"],[id^="otpTextBoxlblwrp"],[id^="txtMessLblWrap"],[id^="dropDownlblWrap"],[id^="dateBoxlblWrap"]').removeClass("lblAlignPlaceholder top-6");
        labelAlignDefaultLeft();
    }
});

$("#labelplaceholder").click(function () {

    if ($('[id^="doubleTextBox"],[id^="textBoxName"],[id^="textBoxEmail"],[id^="textBoxPhone"],[id^="custTextbox"],[id^="otpTextbox"],[id^="inputDropDown"], [id^="inputMess1"],[id^="inputRadioBtn"],[id^="inputCheckBox"],[id^="inputDateWrap"]').length == 0) {
        errMessPop();
    }
    else {
        var checkRadioBtnCont = $('[id^="dbletxtBx"]').children().hasClass('radio-container');
        var checkCheckBxCont = $('[id^="dbletxtBx"]').children().hasClass('check-container');
        var checkSelectTag = $('[id^="dbletxtBx"] > select');
        $(this).addClass("lbl-active-bg");
        if ($(this).hasClass("labelAlignImgThree lbl-active-bg")) {
            //$('.simpleForm input[type=text],input[type=email],input[type=tel],input[type=date],textarea').val('');
        }

        $('[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"],[id^="labelSix"]').removeClass("lblAlignCheck");
        $("#labelDefaultAlign").removeClass("lbl-active-bg");
        $("#labelTopAlign").removeClass("lbl-active-bg");
        labelAlignPlaceholder();
        if (checkRadioBtnCont) {
            $("[id^='dbletxtBx'] >.radio-container").parent().prev().each(function () {
                var radioBtnlblids = $(this).attr('id');
                $("#" + radioBtnlblids).removeClass('lblAlignPlaceholder');
            });
        }

        if (checkCheckBxCont) {
            $("[id^='dbletxtBx'] >.check-container").parent().prev().each(function () {
                var checkbxlblids = $(this).attr('id');
                $("#" + checkbxlblids).removeClass('lblAlignPlaceholder');
            });
        }

        if (checkSelectTag) {
            $("[id^='dbletxtBx'] > select").parent().prev().each(function () {
                var checkbxlblids = $(this).attr('id');
                $("#" + checkbxlblids).hide();
            });
        }
    }
});

// Form Body style Function Start here
var bodyBgcolor;

cssObjectsFormBody.width = "300";
cssObjectsFormBody.height = "300";
$("#bodyWidth").change(function () {
    cssObjectsFormBody.width = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#formHead, #formDescrip, #upLodImg, #textBox, #inputEmail, #inputPhone, #customTextBox, #otpTextBox, #selectDropdown, #inputTextarea, #radioButton, #checkBox, #dateFormat, #submitBtn, #textBoxTwolay, #textBoxThreelay, #textBoxFourlay, #textBoxFivelay, #textBoxSixlay").click(function () {
    $(".clsWrap").addClass("showflex");
});


$("#bodyHeight").change(function () {
    cssObjectsFormBody.height = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("input[name='frmBodyfullwidth']").change(function () {
    if (this.checked) {
        $("#bodyWidth").val("100%");
        $(".simpleForm").addClass("body-100");
        AppendCSS(cssObjectsFormBody);
    }
    else {
        $("#bodyWidth").val("300");
        $(".simpleForm").removeClass("body-100");
        cssObjectsFormBody.width = $("#bodyWidth").val();
        AppendCSS(cssObjectsFormBody);
    }
});

var slidopacVal;
$("#bodyBg").change(function () {
    bodyBgcolor = $(this).val();
    slidRange = $("#bgRange").val();
    cssObjectsFormBody.bodyBgCol = bgOpacity(bodyBgcolor, slidRange);
    AppendCSS(cssObjectsFormBody);
});

// border settings start here

$("#mainbrdstyle").click(function () {
    var checkdatabrd = $(this).attr('data-border');

    if (checkdatabrd == "mainborder") {
        $(this).attr('data-border', 'indivBrd');
        $("#bodyBrdStyleAll").val("");
        $("#bodyBrdSizeAll").val('');
        $("#bodyBrdColAll").val('');
        cssObjectsFormBody.bdyBrdStyleAll = "";
        cssObjectsFormBody.bdyBrdSizeAll = "";
        cssObjectsFormBody.bdyBrdColAll = "";
        AppendCSS(cssObjectsFormBody);
    }
    else {
        $(this).attr('data-border', 'mainborder');
        $("#bodyBrdStyleTop").val("none");
        $("#bodyBrdSizeTop").val("");
        $("#bodyBrdColTop").val("");
        $("#bodyBrdStyleRit").val("none");
        $("#bodyBrdSizeRit").val("");
        $("#bodyBrdColRit").val("");
        $("#bodyBrdStyleBottm").val("none");
        $("#bodyBrdSizeBottm").val("");
        $("#bodyBrdColBott").val("");
        $("#bodyBrdStyleLft").val("none");
        $("#bodyBrdWidthLft").val("");
        $("#bodyBrdColLft").val("");
        cssObjectsFormBody.bdyBrdStyleTop = $("#bodyBrdStyleTop").val("none");
        cssObjectsFormBody.bdyBrdWidthTop = "";
        cssObjectsFormBody.bdyBrdColTop = "";
        cssObjectsFormBody.bdyBrdStyleRight = $("#bodyBrdStyleRit").val("none");
        cssObjectsFormBody.bdyBrdWidthRight = "";
        cssObjectsFormBody.bdyBrdColRight = "";
        cssObjectsFormBody.bdyBrdStyleBottm = $("#bodyBrdStyleBottm").val("none");
        cssObjectsFormBody.bdyBrdWidthBottm = "";
        cssObjectsFormBody.bdyBrdColBottm = "";
        cssObjectsFormBody.bdyBrdStyleLft = $("#bodyBrdStyleLft").val("none");
        cssObjectsFormBody.bdyBrdWidthLft = "";
        cssObjectsFormBody.bdyBrdColLft = "";
        AppendCSS(cssObjectsFormBody);
    }
});

$("#bodyBrdStyleAll").change(function () {
    cssObjectsFormBody.bdyBrdStyleAll = $("#bodyBrdStyleAll option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#bodyBrdSizeAll").change(function () {
    cssObjectsFormBody.bdyBrdSizeAll = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#bodyBrdColAll").change(function () {
    cssObjectsFormBody.bdyBrdColAll = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#bodyBrdStyleTop").change(function () {
    cssObjectsFormBody.bdyBrdStyleTop = $("#bodyBrdStyleTop option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#bodyBrdSizeTop").change(function () {
    cssObjectsFormBody.bdyBrdWidthTop = $(this).val();
    AppendCSS(cssObjectsFormBody);

});

$("#bodyBrdColTop").change(function () {
    cssObjectsFormBody.bdyBrdColTop = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#bodyBrdStyleRit").change(function () {
    cssObjectsFormBody.bdyBrdStyleRight = $("#bodyBrdStyleRit option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#bodyBrdSizeRit").change(function () {
    cssObjectsFormBody.bdyBrdWidthRight = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#bodyBrdColRit").change(function () {
    cssObjectsFormBody.bdyBrdColRight = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#bodyBrdStyleBottm").change(function () {
    cssObjectsFormBody.bdyBrdStyleBottm = $("#bodyBrdStyleBottm option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#bodyBrdSizeBottm").change(function () {
    cssObjectsFormBody.bdyBrdWidthBottm = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#bodyBrdColBott").change(function () {
    cssObjectsFormBody.bdyBrdColBottm = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#bodyBrdStyleLft").change(function () {
    cssObjectsFormBody.bdyBrdStyleLft = $("#bodyBrdStyleLft option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#bodyBrdWidthLft").change(function () {
    cssObjectsFormBody.bdyBrdWidthLft = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#bodyBrdColLft").change(function () {
    cssObjectsFormBody.bdyBrdColLft = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#bdyPadAll").change(function () {
    cssObjectsFormBody.bdyPaddAll = $(this).val();
    if (cssObjectsFormBody.bdyPaddAll === 'nullpx' || cssObjectsFormBody.bdyPaddAll == "") {
        cssObjectsFormBody.bdyPaddAll = "";
        AppendCSS(cssObjectsFormBody);
    }
    else {
        AppendCSS(cssObjectsFormBody);
    }
});

$("#bdyPadTop").change(function () {
    cssObjectsFormBody.bdyPaddTop = $(this).val();
    if (cssObjectsFormBody.bdyPaddTop === 'nullpx' || cssObjectsFormBody.bdyPaddTop === "") {
        cssObjectsFormBody.bdyPaddTop = "";
        AppendCSS(cssObjectsFormBody);
    }
    else {
        AppendCSS(cssObjectsFormBody);
    }
});

$("#bdyPadRight").change(function () {
    cssObjectsFormBody.bdyPaddRit = $(this).val();
    if (cssObjectsFormBody.bdyPaddRit === 'nullpx' || cssObjectsFormBody.bdyPaddRit === "") {
        cssObjectsFormBody.bdyPaddRit = "";
        AppendCSS(cssObjectsFormBody);
    }
    else {
        AppendCSS(cssObjectsFormBody);
    }
});

$("#bdyPadBottom").change(function () {
    cssObjectsFormBody.bdyPaddBottm = $(this).val();
    if (cssObjectsFormBody.bdyPaddBottm === 'nullpx' || cssObjectsFormBody.bdyPaddBottm === "") {
        cssObjectsFormBody.bdyPaddBottm = "";
        AppendCSS(cssObjectsFormBody);
    }
    else {
        AppendCSS(cssObjectsFormBody);
    }
});

$("#bdyPadLeft").change(function () {
    cssObjectsFormBody.bdyPaddLft = $(this).val();
    if (cssObjectsFormBody.bdyPaddLft === 'nullpx' || cssObjectsFormBody.bdyPaddLft === "") {
        cssObjectsFormBody.bdyPaddLft = "";
        AppendCSS(cssObjectsFormBody);
    }
    else {
        AppendCSS(cssObjectsFormBody);
    }
});

$("#mainbrdRadiAll").change(function () {
    cssObjectsFormBody.bdyBrdradiAll = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#mainbrdRadiTopLeft").change(function () {
    cssObjectsFormBody.bdyBrdraditopleft = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#mainbrdRadiTopRight").change(function () {
    cssObjectsFormBody.bdyBrdraditopright = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#mainbrdRadiBottomLeft").change(function () {
    cssObjectsFormBody.bdyBrdradibttmleft = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#mainbrdRadiBottomRight").change(function () {
    cssObjectsFormBody.bdyBrdradibttmright = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

//label styles start here

$(".alignTxtItem").click(function () {
    var lblTxtAlignLftVal = $(this).attr("data-lblalign");
    if (lblTxtAlignLftVal == "flex-start") {
        cssObjectsFormBody.lblTextAlignCenter = "";
        cssObjectsFormBody.lblTextAlignRight = "";
        cssObjectsFormBody.lblTextAlignLeft = lblTxtAlignLftVal;
        AppendCSS(cssObjectsFormBody);
    }
    else if (lblTxtAlignLftVal == "center") {
        cssObjectsFormBody.lblTextAlignLeft = "";
        cssObjectsFormBody.lblTextAlignRight = "";
        cssObjectsFormBody.lblTextAlignCenter = lblTxtAlignLftVal;
        AppendCSS(cssObjectsFormBody);
    }
    else {
        cssObjectsFormBody.lblTextAlignLeft = "";
        cssObjectsFormBody.lblTextAlignCenter = "";
        cssObjectsFormBody.lblTextAlignRight = lblTxtAlignLftVal;
        AppendCSS(cssObjectsFormBody);
    }
});

$("#lblPadall").change(function () {
    cssObjectsFormBody.lblTextPaddAll = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#lblPadTop").change(function () {
    cssObjectsFormBody.lblTextPaddTop = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#lblPadRight").change(function () {
    cssObjectsFormBody.lblTextPaddRight = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#lblPadBottom").change(function () {
    cssObjectsFormBody.lblTextPaddBottom = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#lblPadLeft").change(function () {
    cssObjectsFormBody.lblTextPaddLeft = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#lblSpacestyle").click(function () {
    var lblAllPadVal = $(this).attr('data-lblPad');
    if (lblAllPadVal == "lblAllPadding") {
        $(this).attr('data-lblPad', "lblIndiPadd");
        $("#lblPadall").val('');
        cssObjectsFormBody.lblTextPaddAll = null;
        AppendCSS(cssObjectsFormBody);
    }
    else {
        $(this).attr('data-lblPad', "lblAllPadding");
        $("#lblPadTop, #lblPadRight, #lblPadBottom, #lblPadLeft").val('');
        cssObjectsFormBody.lblTextPaddTop = null;
        cssObjectsFormBody.lblTextPaddRight = null;
        cssObjectsFormBody.lblTextPaddBottom = null;
        cssObjectsFormBody.lblTextPaddLeft = null;
        AppendCSS(cssObjectsFormBody);
    }
});

$("#selectFontFamily").change(function () {
    cssObjectsFormBody.lblTextFontFamily = $("#selectFontFamily option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#lblTxtFontsize").change(function () {
    cssObjectsFormBody.lblTextFontSize = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#lblTxtFontCol").change(function () {
    cssObjectsFormBody.lblTextFontColor = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#lblTxtFontWeight").change(function () {
    cssObjectsFormBody.lblTextFontWeight = $("#lblTxtFontWeight option:selected").val();
    cssObjectsFormBody.lblTextFontStyle = $("#lblTxtFontWeight option:selected").attr('data-fontstyle');
    AppendCSS(cssObjectsFormBody);
});

$("#lblTxtfontCaps").change(function () {
    cssObjectsFormBody.lblTextFontCaps = $("#lblTxtfontCaps option:selected").val();
    AppendCSS(cssObjectsFormBody);
});


//Text Css Settings Start here

$("#txtBoxFontFam").change(function () {
    cssObjectsFormBody.textBoxFontFamily = $("#txtBoxFontFam option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtBoxFontSize").change(function () {
    cssObjectsFormBody.textBoxFontSize = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtBoxFontCol").change(function () {
    cssObjectsFormBody.textBoxFontColor = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtBoxFontStroke").change(function () {
    cssObjectsFormBody.textBoxFontWeight = $("#txtBoxFontStroke option:selected").val();
    cssObjectsFormBody.textBoxFontStyle = $("#txtBoxFontStroke option:selected").attr('data-fontstyle');
    AppendCSS(cssObjectsFormBody);
});

$("#txtBoxTextIndent").change(function () {
    cssObjectsFormBody.textBoxFontIndent = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtBoxHeight").change(function () {
    cssObjectsFormBody.textBoxHeight = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

var txtBxBgCol;
$("#txtBoxBgCol").change(function () {
    txtBxBgCol = $(this).val();
    slidTxtBxVal = $("#txtBoxbgRange").val();
    cssObjectsFormBody.textBoxBgColor = bgOpacity(txtBxBgCol, slidTxtBxVal);
    AppendCSS(cssObjectsFormBody);
});

$("#txtBxAllBrd").change(function () {
    cssObjectsFormBody.textBoxAllBrd = $("#txtBxAllBrd option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtBxAllBrdSize").change(function () {
    cssObjectsFormBody.textBoxAllBrdsize = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtBxBrdColAll").change(function () {
    cssObjectsFormBody.textBoxAllBrdcol = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtBxBrdTop").change(function () {
    cssObjectsFormBody.textBoxBrdTop = $("#txtBxBrdTop option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtBxBrdTopSize").change(function () {
    cssObjectsFormBody.textBoxBrdTopSize = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtBxBrdTopCol").change(function () {
    cssObjectsFormBody.textBoxBrdTopCol = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtBxBrdRit").change(function () {
    cssObjectsFormBody.textBoxBrdRight = $("#txtBxBrdRit option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtBxBrdRitSize").change(function () {
    cssObjectsFormBody.textBoxBrdRightSize = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtBxBrdRitCol").change(function () {
    cssObjectsFormBody.textBoxBrdRightCol = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtBxBrdBttm").change(function () {
    cssObjectsFormBody.textBoxBrdBttm = $("#txtBxBrdBttm option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtBxBrdBttmSize").change(function () {
    cssObjectsFormBody.textBoxBrdBttmSize = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtBxBrdBttmCol").change(function () {
    cssObjectsFormBody.textBoxBrdBttmCol = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtBxBrdLeft").change(function () {
    cssObjectsFormBody.textBoxBrdleft = $("#txtBxBrdLeft option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtBxBrdLeftSize").change(function () {
    cssObjectsFormBody.textBoxBrdLeftSize = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtBxBrdLeftCol").change(function () {
    cssObjectsFormBody.textBoxBrdLeftCol = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtbxbrdstyle").change(function () {
    var textBxBrdOpt = $(this).attr("data-txtbxbrd");
    if (textBxBrdOpt == "txtBxBrdAllStyle") {
        $(this).attr('data-txtbxbrd', 'textBxIndivBrd');
        $("#txtBxAllBrd").val("");
        $("#txtBxAllBrdSize").val("");
        $("#txtBxBrdColAll").val("");
        cssObjectsFormBody.textBoxAllBrd = "";
        cssObjectsFormBody.textBoxAllBrdsize = "";
        cssObjectsFormBody.textBoxAllBrdcol = "";
        AppendCSS(cssObjectsFormBody);
    }
    else {
        $(this).attr('data-txtbxbrd', 'txtBxBrdAllStyle');
        $("#txtBxBrdTop").val("");
        $("#txtBxBrdTopSize").val("");
        $("#txtBxBrdTopCol").val("");
        $("#txtBxBrdRit").val("");
        $("#txtBxBrdRitSize").val("");
        $("#txtBxBrdRitCol").val("");
        $("#txtBxBrdBttm").val("");
        $("#txtBxBrdBttmSize").val("");
        $("#txtBxBrdBttmCol").val("");
        $("#txtBxBrdLeft").val("");
        $("#txtBxBrdLeftSize").val("");
        $("#txtBxBrdLeftCol").val("");
        cssObjectsFormBody.textBoxBrdTop = "";
        cssObjectsFormBody.textBoxBrdTopSize = "";
        cssObjectsFormBody.textBoxBrdTopCol = "";
        cssObjectsFormBody.textBoxBrdRight = "";
        cssObjectsFormBody.textBoxBrdRightSize = "";
        cssObjectsFormBody.textBoxBrdRightCol = "";
        cssObjectsFormBody.textBoxBrdBttm = "";
        cssObjectsFormBody.textBoxBrdBttmSize = "";
        cssObjectsFormBody.textBoxBrdBttmCol = "";
        cssObjectsFormBody.textBoxBrdleft = "";
        cssObjectsFormBody.textBoxBrdLeftSize = "";
        cssObjectsFormBody.textBoxBrdLeftCol = "";
        AppendCSS(cssObjectsFormBody);
    }
});

$("#txtBoxRadiAll").change(function () {
    cssObjectsFormBody.textBoxBrdRadiusAll = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtBoxRadiTopLeft").change(function () {
    cssObjectsFormBody.textBoxBrdRadiusTopLeft = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtBoxRadiTopRight").change(function () {
    cssObjectsFormBody.textBoxBrdRadiusTopRight = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtBoxRadiBottomLeft").change(function () {
    cssObjectsFormBody.textBoxBrdRadiusBttmLeft = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#txtBoxRadiBottomRight").change(function () {
    cssObjectsFormBody.textBoxBrdRadiusBttmRight = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#textBoxRadiusall").change(function () {
    var textBoxRadidataType = $(this).attr("data-textboxradius");

    if (textBoxRadidataType == "txtBoxRadiusAll") {
        $(this).attr("data-textboxradius", "txtBoxRadiusIndiv");
        $("#txtBoxRadiAll").val("");
        cssObjectsFormBody.textBoxBrdRadiusAll = "";
        AppendCSS(cssObjectsFormBody);
    }
    else {
        $(this).attr("data-textboxradius", "txtBoxRadiusAll");
        $("#txtBoxRadiTopLeft").val("");
        $("#txtBoxRadiTopRight").val("");
        $("#txtBoxRadiBottomLeft").val("");
        $("#txtBoxRadiBottomRight").val("");
        cssObjectsFormBody.textBoxBrdRadiusTopLeft = "";
        cssObjectsFormBody.textBoxBrdRadiusTopRight = "";
        cssObjectsFormBody.textBoxBrdRadiusBttmLeft = "";
        cssObjectsFormBody.textBoxBrdRadiusBttmRight = "";
        AppendCSS(cssObjectsFormBody);
    }
});

$("#mainbrdradistyle").change(function () {

    if ($("#mainbrdradistyle").is(":checked")) {
        $("#mainbrdRadiAll").val("");
        cssObjectsFormBody.bdyBrdradiAll = $("#mainbrdRadiAll").val();
        AppendCSS(cssObjectsFormBody);
    }
    else {
        $("#mainbrdRadiTopLeft").val("");
        $("#mainbrdRadiTopRight").val("");
        $("#mainbrdRadiBottomLeft").val("");
        $("#mainbrdRadiBottomRight").val("");
        cssObjectsFormBody.bdyBrdraditopleft = "";
        cssObjectsFormBody.bdyBrdraditopright = "";
        cssObjectsFormBody.bdyBrdradibttmleft = "";
        cssObjectsFormBody.bdyBrdradibttmright = "";
        AppendCSS(cssObjectsFormBody);
    }
});

var appentToStyle;
AppendCSS = cssObjectsFormBody => {
    var simpleFormClass = `.simpleForm{width:${cssObjectsFormBody.width + "px"};height:${cssObjectsFormBody.height + "px"};background-color:${cssObjectsFormBody.bodyBgCol}; border-style:${cssObjectsFormBody.bdyBrdStyleAll}; border-width: ${cssObjectsFormBody.bdyBrdSizeAll + "px"}; border-color:${cssObjectsFormBody.bdyBrdColAll};border-top-style: ${cssObjectsFormBody.bdyBrdStyleTop}; border-top-width:${cssObjectsFormBody.bdyBrdWidthTop + "px"};border-top-color:${cssObjectsFormBody.bdyBrdColTop}; border-right-style:${cssObjectsFormBody.bdyBrdStyleRight}; border-right-width:${cssObjectsFormBody.bdyBrdWidthRight + "px"}; border-right-color:${cssObjectsFormBody.bdyBrdColRight}; border-bottom-style:${cssObjectsFormBody.bdyBrdStyleBottm}; border-bottom-width:${cssObjectsFormBody.bdyBrdWidthBottm + "px"}; border-bottom-color:${cssObjectsFormBody.bdyBrdColBottm}; border-left-style:${cssObjectsFormBody.bdyBrdStyleLft}; border-left-width:${cssObjectsFormBody.bdyBrdWidthLft + "px"}; border-left-color:${cssObjectsFormBody.bdyBrdColLft}; padding:${cssObjectsFormBody.bdyPaddAll + "px"}; padding-top:${cssObjectsFormBody.bdyPaddTop + "px"}; padding-right:${cssObjectsFormBody.bdyPaddRit + "px"}; padding-bottom:${cssObjectsFormBody.bdyPaddBottm + "px"}; padding-left:${cssObjectsFormBody.bdyPaddLft + "px"};border-radius:${cssObjectsFormBody.bdyBrdradiAll + "px"};border-top-left-radius:${cssObjectsFormBody.bdyBrdraditopleft + "px"};border-top-right-radius:${cssObjectsFormBody.bdyBrdraditopright + "px"};border-bottom-left-radius:${cssObjectsFormBody.bdyBrdradibttmleft + "px"};border-bottom-right-radius:${cssObjectsFormBody.bdyBrdradibttmright + "px"};}
	.labelStyle, .labelWrap{justify-content:${cssObjectsFormBody.lblTextAlignLeft}; justify-content: ${cssObjectsFormBody.lblTextAlignCenter}; justify-content:${cssObjectsFormBody.lblTextAlignRight}; padding:${cssObjectsFormBody.lblTextPaddAll + "px"}; padding-top:${cssObjectsFormBody.lblTextPaddTop + "px"}; padding-right:${cssObjectsFormBody.lblTextPaddRight + "px"}; padding-bottom:${cssObjectsFormBody.lblTextPaddBottom + "px"}; padding-left:${cssObjectsFormBody.lblTextPaddLeft + "px"}; font-family:${cssObjectsFormBody.lblTextFontFamily}; font-size:${cssObjectsFormBody.lblTextFontSize + "px"}; color:${cssObjectsFormBody.lblTextFontColor}; font-weight:${cssObjectsFormBody.lblTextFontWeight + " !important"}; font-style:${cssObjectsFormBody.lblTextFontStyle}; text-transform:${cssObjectsFormBody.lblTextFontCaps};}
	.labelStyle{height:${cssObjectsFormBody.textBoxHeight + "px"};}
	.input-form-control{font-family:${cssObjectsFormBody.textBoxFontFamily}; font-size:${cssObjectsFormBody.textBoxFontSize + "px"}; color:${cssObjectsFormBody.textBoxFontColor}; font-weight:${cssObjectsFormBody.textBoxFontWeight}; font-style:${cssObjectsFormBody.textBoxFontStyle};text-indent:${cssObjectsFormBody.textBoxFontIndent + "px"}; height:${cssObjectsFormBody.textBoxHeight + "px"};background-color:${cssObjectsFormBody.textBoxBgColor};border:${cssObjectsFormBody.textBoxAllBrd}; border-width:${cssObjectsFormBody.textBoxAllBrdsize + "px"}; border-color:${cssObjectsFormBody.textBoxAllBrdcol}; border-top-style:${cssObjectsFormBody.textBoxBrdTop};border-top-width:${cssObjectsFormBody.textBoxBrdTopSize + "px"};border-top-color:${cssObjectsFormBody.textBoxBrdTopCol};border-right-style:${cssObjectsFormBody.textBoxBrdRight}; border-right-width:${cssObjectsFormBody.textBoxBrdRightSize + "px"};border-right-color:${cssObjectsFormBody.textBoxBrdRightCol}; border-bottom-style:${cssObjectsFormBody.textBoxBrdBttm}; border-bottom-width:${cssObjectsFormBody.textBoxBrdBttmSize + "px"}; border-bottom-color:${cssObjectsFormBody.textBoxBrdBttmCol}; border-left-style:${cssObjectsFormBody.textBoxBrdleft}; border-left-width:${cssObjectsFormBody.textBoxBrdLeftSize + "px"}; border-left-color:${cssObjectsFormBody.textBoxBrdLeftCol}; justify-content:${cssObjectsFormBody.btnAlignLeft}; border-radius:${cssObjectsFormBody.textBoxBrdRadiusAll + "px"}; border-top-left-radius:${cssObjectsFormBody.textBoxBrdRadiusTopLeft + "px"}; border-top-right-radius:${cssObjectsFormBody.textBoxBrdRadiusTopRight + "px"}; border-bottom-left-radius:${cssObjectsFormBody.textBoxBrdRadiusBttmLeft + "px"}; border-bottom-right-radius:${cssObjectsFormBody.textBoxBrdRadiusBttmRight + "px"}; }
	.parSubBtn{justify-content:${cssObjectsFormBody.btnAlignCenter}; justify-content:${cssObjectsFormBody.btnAlignRight};}
	.childSubBtn{width:${cssObjectsFormBody + "px"}; margin:${cssObjectsFormBody.subBtnMarginAll + "px"};margin-top:${cssObjectsFormBody.subBtnMarginTop + "px"};margin-bottom:${cssObjectsFormBody.subBtnMarginBttm + "px"};margin-left:${cssObjectsFormBody.subBtnMarginLeft + "px"};margin-right:${cssObjectsFormBody.subBtnMarginRight + "px"};}
	.btn-style{width:${cssObjectsFormBody.btnWidth + "px"}; height:${cssObjectsFormBody.subBtnHeight + "px"}; background-color:${cssObjectsFormBody.subBtnBgCol}; font-family:${cssObjectsFormBody.subBtnFontFamily};font-size:${cssObjectsFormBody.subBtnFontSize + "px"};color:${cssObjectsFormBody.subBtnFontcol + "!important"}; font-style:${cssObjectsFormBody.subBtnFontStyle}; font-weight:${cssObjectsFormBody.subBtnFontStroke}; text-transform:${cssObjectsFormBody.subBtnTxtTransform};border-radius:${cssObjectsFormBody.subBtnBorderRadius + "px"};border-top-left-radius:${cssObjectsFormBody.subBtnBorderRadiusTopLeft + "px"}; border-top-right-radius:${cssObjectsFormBody.subBtnBorderRadiusTopRight + "px"}; border-bottom-left-radius:${cssObjectsFormBody.subBtnBorderRadiusbottomLeft + "px"}; border-bottom-right-radius:${cssObjectsFormBody.subBtnBorderRadiusbottomRight + "px"}; border-style:${cssObjectsFormBody.subBtnBorderAll}; border-width:${cssObjectsFormBody.subBtnBorderSizeAll + "px"};border-color:${cssObjectsFormBody.subBtnBorderColAll}; border-top-style:${cssObjectsFormBody.subBtnBrdIndivTop}; border-top-width:${cssObjectsFormBody.subBtnBrdIndivTopSize + "px"};border-top-color:${cssObjectsFormBody.subBtnBrdIndivTopCol}; border-right-style:${cssObjectsFormBody.subBtnBrdIndivRit}; border-right-width:${cssObjectsFormBody.subBtnBrdIndivRitSize + "px"}; border-right-color:${cssObjectsFormBody.subBtnBrdIndivRitCol};border-bottom-style:${cssObjectsFormBody.subBtnBrdIndivBottom}; border-bottom-width:${cssObjectsFormBody.subBtnBrdIndivBttmSiz + "px"};border-bottom-color:${cssObjectsFormBody.subBtnBrdIndivBttmCol};border-left-style:${cssObjectsFormBody.subBtnBrdIndivLeft};border-left-width:${cssObjectsFormBody.subBtnBrdIndivLftSiz + "px"};border-left-color:${cssObjectsFormBody.subBtnBrdIndivLftCol};}
	.btn-style:hover{background-color:${cssObjectsFormBody.subBtnBgHvCol};color:${cssObjectsFormBody.subBtnTxtHvrCol + "!important"};}
	.clsWrap{width:${cssObjectsFormBody.frmClsWidth + "px"}; height:${cssObjectsFormBody.frmClsWidth + "px"};font-size:${cssObjectsFormBody.frmClsFontSize + "px"};color:${cssObjectsFormBody.frmClsFontCol};background-color:${cssObjectsFormBody.frmClsBgCol};border-style:${cssObjectsFormBody.frmClsBrdStyle};border-width:${cssObjectsFormBody.frmClsBrdSiz + "px"};border-color:${cssObjectsFormBody.frmClsBrdCol};top:${cssObjectsFormBody.frmClsSpacTop + "px"};right:${cssObjectsFormBody.frmClsSpacRight + "px"};bottom:${cssObjectsFormBody.frmClsSpacBottom + "px"};}
	.clsleftalign{left:${cssObjectsFormBody.frmClsSpacLeft + "px !important"};}
	.headTitOne{ font-family:${cssObjectsFormBody.frmTitFontFamily}; font-size:${cssObjectsFormBody.frmtTitFontSiz + "px"}; color:${cssObjectsFormBody.frmTitFontCol}; text-align:${cssObjectsFormBody.frmTitAlignType};font-weight:${cssObjectsFormBody.frmTitFontStroke};font-style:${cssObjectsFormBody.frmTitFontStyle};text-transform:${cssObjectsFormBody.frmTitTextCapital};margin:${cssObjectsFormBody.frmtitFontMargin + "px"};margin-top:${cssObjectsFormBody.frmtitFontMarginTop + "px"}; margin-right:${cssObjectsFormBody.frmtitFontMarginRight + "px"};margin-bottom:${cssObjectsFormBody.frmtitFontMarginBttm + "px"}; margin-left:${cssObjectsFormBody.frmtitFontMarginLeft + "px"}; padding:${cssObjectsFormBody.frmTitFontPaddAll + "px"};padding-top:${cssObjectsFormBody.frmTitFontPaddTop + "px"}; padding-right:${cssObjectsFormBody.frmTitFontPaddRight + "px"};padding-bottom:${cssObjectsFormBody.frmTitFontPaddBttm + "px"}; padding-left:${cssObjectsFormBody.frmTitFontPaddLeft + "px"};background-color:${cssObjectsFormBody.frmTitBgcolor};border-radius:${cssObjectsFormBody.frmTitRadiusAll + "px"};border-top-left-radius:${cssObjectsFormBody.frmTitRadiusTopLeft + "px"}; border-top-right-radius:${cssObjectsFormBody.frmTitRadiusTopRight + "px"}; border-bottom-left-radius:${cssObjectsFormBody.frmTitRadiusBttmLeft + "px"}; border-bottom-right-radius:${cssObjectsFormBody.frmTitRadiusBttmRight + "px"};border-style:${cssObjectsFormBody.frmTitBrdStylAll};border-width:${cssObjectsFormBody.frmTitBrdWidAll + "px"};border-color:${cssObjectsFormBody.frmTitBrdColAll};border-top-style:${cssObjectsFormBody.frmTitBrdStylTop}; border-top-width:${cssObjectsFormBody.frmTitBrdWidTop + "px"}; border-top-color:${cssObjectsFormBody.frmTitBrdColTop}; border-right-style:${cssObjectsFormBody.frmTitBrdStylRight}; border-right-width:${cssObjectsFormBody.frmTitBrdWidRight + "px"}; border-right-color:${cssObjectsFormBody.frmTitBrdColRight}; border-bottom-style:${cssObjectsFormBody.frmTitBrdStyleBttm}; border-bottom-width:${cssObjectsFormBody.frmTitBrdWidBttm + "px"}; border-bottom-color:${cssObjectsFormBody.frmTitBrdColBttm}; border-left-style:${cssObjectsFormBody.frmTitBrdStylLeft}; border-left-width:${cssObjectsFormBody.frmTitBrdWidLeft + "px"}; border-left-color:${cssObjectsFormBody.frmTitBrdColLeft};}
	.formDescripTxt{text-align:${cssObjectsFormBody.frmDesTxtAlign}; font-family:${cssObjectsFormBody.frmDesFont};font-size:${cssObjectsFormBody.frmDesFontSize + "px"}; color:${cssObjectsFormBody.frmDesFontCol}; font-weight:${cssObjectsFormBody.frmDesFontStroke}; font-style:${cssObjectsFormBody.frmDesFontStyle}; text-transform:${cssObjectsFormBody.frmDesFontCaps}; background-color:${cssObjectsFormBody.frmDesTxtBgCol}; padding:${cssObjectsFormBody.frmDesFontPaddAll + "px"};padding-top:${cssObjectsFormBody.frmDesFontPaddTop + "px"};padding-right:${cssObjectsFormBody.frmDesFontPaddRight + "px"};padding-bottom:${cssObjectsFormBody.frmDesFontPaddBttm + "px"}; padding-left:${cssObjectsFormBody.frmDesFontPaddLeft + "px"}; border-radius:${cssObjectsFormBody.frmDesRadiusAll + "px"}; border-top-left-radius:${cssObjectsFormBody.frmDesRadiusTopLeft + "px"};border-top-right-radius:${cssObjectsFormBody.frmDesRadiusTopRight + "px"};border-bottom-left-radius:${cssObjectsFormBody.frmDesRadiusBttmLeft + "px"};border-bottom-right-radius:${cssObjectsFormBody.frmDesRadiusBttmRight + "px"}; border-style:${cssObjectsFormBody.frmDesBrdStylAll}; border-width:${cssObjectsFormBody.frmDesBrdWidAll + "px"}; border-color:${cssObjectsFormBody.frmDesBrdColAll}; border-right-style:${cssObjectsFormBody.frmDesBrdStylRight};border-right-width:${cssObjectsFormBody.frmDesBrdWidRight + "px"};border-right-color:${cssObjectsFormBody.frmDesBrdColRight}; border-top-style:${cssObjectsFormBody.frmDesBrdStylTop}; border-top-width:${cssObjectsFormBody.frmDesBrdWidTop + "px"};border-top-color:${cssObjectsFormBody.frmDesBrdColTop};border-bottom-style:${cssObjectsFormBody.frmDesBrdStyleBttm};border-bottom-width:${cssObjectsFormBody.frmDesBrdWidBttm + "px"};border-bottom-color:${cssObjectsFormBody.frmDesBrdColBttm};border-left-style:${cssObjectsFormBody.frmDesBrdStylLeft};border-left-width:${cssObjectsFormBody.frmDesBrdWidLeft + "px"};border-left-color:${cssObjectsFormBody.frmDesBrdColLeft};}
	.formDescript{margin:${cssObjectsFormBody.frmDesFontMarg + "px"}; margin-top:${cssObjectsFormBody.frmDesFontMargTop + "px"}; margin-right:${cssObjectsFormBody.frmDesFontMargRighted + "px"}; margin-bottom:${cssObjectsFormBody.frmDesFontMargBttm + "px"}; margin-left:${cssObjectsFormBody.frmDesFontMargLeft + "px"};}


	//Add class here
	`;

    appentToStyle = `<style id="interStyle">${simpleFormClass}</style>`;
    $("#interStyle").remove();
    $('head').append(appentToStyle);
}
// Form Body style Function End here

// Editor Style Functions Start here

$(".formStyleTab li").click(function () {
    var listClickData = $(this).attr("data-tab");
    $(".formStyleTab li").removeClass("tab-active");
    $(this).addClass("tab-active");
    $(".labelAlignWrap, #formTitTabCont").removeClass("showCont");
    $("#" + listClickData).addClass("showCont");
    if (listClickData == "effectsTabCont") {
        $(this).removeClass('tab-active');
        $("#frmprevpopup").addClass('hideDiv');
        $("#" + listClickData).removeClass('hideDiv showCont');
        $("#frmeffectspopup").removeClass('hideDiv showCont');
        $("#bodyTabCont").addClass("showCont");
        $(".formStyleTab li:first-child").addClass('tab-active');
    }
});

$(".formWrapper").on('click', '#textTitEdit', function () {
    $(".formStyleWrap").removeClass("frmstyle-hide");
    $(".frmstyle-brushwrp").addClass("hideDiv");
    $(".formStyleTab li").removeClass("tab-active");
    $(".labelAlignWrap").removeClass("showCont");
    $("#formDesTabCont").removeClass("showCont");
    $("#formTitTabCont").addClass("showCont");
});

$(".formWrapper").on('click', '#frmDesEdit', function () {
    $(".formStyleWrap").removeClass("frmstyle-hide");
    $(".frmstyle-brushwrp").addClass("hideDiv");
    $(".formStyleTab li").removeClass("tab-active");
    $(".labelAlignWrap").removeClass("showCont");
    $("#formTitTabCont").removeClass("showCont");
    $("#formDesTabCont").addClass("showCont");
});

$("#mainbrdstyle").click(function () {
    $("#brdIndivWrap, #brdAllWrap").toggleClass("hideToolWrap");
});

$("#bdyPadding").change(function () {
    var checkAlert = $(this).attr('data-paddAll');
    if (checkAlert == "paddingAll") {
        $("#bdyspaceAllWrap, #bdyspaceIndivWrap").toggleClass("hideToolWrap");
        $(this).attr('data-paddAll', "paddingIndividual");
        $("#bdyPadAll").val("");
        cssObjectsFormBody.bdyPaddAll = "";
        AppendCSS(cssObjectsFormBody);
    } else {
        $("#bdyspaceAllWrap, #bdyspaceIndivWrap").toggleClass("hideToolWrap");
        $(this).attr('data-paddAll', "paddingAll");
        $("#bdyPadTop").val("");
        $("#bdyPadRight").val("");
        $("#bdyPadBottom").val("");
        $("#bdyPadLeft").val("");
        cssObjectsFormBody.bdyPaddTop = "";
        cssObjectsFormBody.bdyPaddRit = "";
        cssObjectsFormBody.bdyPaddBottm = "";
        cssObjectsFormBody.bdyPaddLft = "";
        AppendCSS(cssObjectsFormBody);
    }
});

$("#lblSpacestyle").click(function () {
    $("#lblspaceAllWrap, #lblspaceIndivWrap").toggleClass("hideToolWrap");
});

$("#txtbxbrdstyle").click(function () {
    $("#txtBxbrdAllWrap, #txtBxbrdIndivWrap").toggleClass("hideToolWrap");
});

$("#mainBtnbrdstyle").click(function () {
    $("#btnBrdAllWrap, #btnBrdIndivWrap").toggleClass("hideToolWrap");

});

$("#btnRadiusall").click(function () {
    $("#btnspaceAllWrap, #btnspaceIndivWrap").toggleClass("hideToolWrap");
});

$("#closeSpacestyle").click(function () {
    $("#closeSpaceAllWrap, #closeSpaceIndivWrap").toggleClass("hideToolWrap");
});

$("#closeBtnbrdstyle").click(function () {
    $("#closeBrdAllWrap, #closeBrdIndivWrap").toggleClass("hideToolWrap");
});

$("#textBoxRadiusall").click(function () {
    $("#textBoxspaceAllWrap, #textBoxspaceIndivWrap").toggleClass("hideToolWrap");
});

$("#mainbrdradistyle").click(function () {
    $("#mainbrdradiAllWrap, #mainbrdradiusIndivWrap").toggleClass("hideToolWrap");
});

$("#frmTitPadAll").click(function () {
    $("#titMarginAllWrap, #titMarginIndivWrap").toggleClass("hideToolWrap");
});

$("#frmTitleFontPadd").click(function () {
    $("#frmTitPaddAllWrap, #frmTitPaddIndivWrap").toggleClass("hideToolWrap");
});

$("#frmTitleRadiusall").click(function () {
    $("#frmTitRadiusAllWrap, #frmTitRadiusIndivWrap").toggleClass("hideToolWrap");
});

$("#frmTitbrdstyle").click(function () {
    $("#frmTitbrdAllWrap, #frmTitbrdIndivWrap").toggleClass("hideToolWrap");
});

$("#frmDesPadAll").click(function () {
    $("#frmDesMarginAllWrap, #frmDesMarginIndivWrap").toggleClass("hideToolWrap");
});

$("#frmDesFontPadd").click(function () {
    $("#frmDesPaddAllWrap, #frmDesPaddIndivWrap").toggleClass("hideToolWrap");
});

$("#frmDesRadiusall").click(function () {
    $("#frmDesRadiusAllWrap, #frmDesRadiusIndivWrap").toggleClass("hideToolWrap");
});

$("#frmDesbrdstyle").click(function () {
    $("#frmDesbrdAllWrap, #frmDesbrdIndivWrap").toggleClass("hideToolWrap");
});


var slidVal, slidTxtBxVal;
$("#bgRange").change(function () {
    slidVal = $(this).val();
    bodyBgcolor = $("#bodyBg").val();
    $("#opacValue").html(slidVal + "%");
    cssObjectsFormBody.bodyBgCol = bgOpacity(bodyBgcolor, slidVal);
    AppendCSS(cssObjectsFormBody);

});

$("#txtBoxbgRange").change(function () {
    slidTxtBxVal = $(this).val();
    txtBxBgCol = $("#txtBoxBgCol").val();
    $("#txtBoxopacValue").html(slidTxtBxVal + "%");
    cssObjectsFormBody.textBoxBgColor = bgOpacity(txtBxBgCol, slidTxtBxVal);
    AppendCSS(cssObjectsFormBody);
});


function bgOpacity(hex, opacity) {
    hex = hex.replace('#', '');
    r = parseInt(hex.substring(0, 2), 16);
    g = parseInt(hex.substring(2, 4), 16);
    b = parseInt(hex.substring(4, 6), 16);

    slidResult = 'rgba(' + r + ',' + g + ',' + b + ',' + opacity / 100 + ')';
    return slidResult;
}

//Slider Value 
var allLblIdSingle = '[id^="textBoxlblCont"],[id^="emailLblCont"],[id^="phoneLblWrap"],[id^="dropDownlblWrap"],[id^="txtMessLblWrap"],[id^="dateBoxlblWrap"]';
var allLblId = '[id^="labelFir"],[id^="labelSec"],[id^="labelThird"],[id^="labelFour"],[id^="labelFive"],[id^="labelSix"]';

//var allLblId = $(this).parent().attr('id');


//editIconWrap
var checkFocusInput;
/* $("#appendFields").on('mouseover', allLblId, function(){
    if($(this).hasClass("labelStyle adCol-100 lblAlignPlaceholder")|| $(this).hasClass("labelStyle lblAlignPlaceholder adCol-100")){
        hoverEditInputIcon = $(this).next().children().find('.editIconWrap').attr();
    }
}); */

$(document).on('click', allLblId, function () {
    if ($(this).hasClass("labelStyle adCol-100 lblAlignPlaceholder") || $(this).hasClass("labelStyle lblAlignPlaceholder adCol-100")) {
        var checkIdlbl = $(this).attr('id');
        checkIdlbl = "#" + checkIdlbl;
        $(checkIdlbl).hide();
        $("#frmprevpopup " + checkIdlbl).hide();
        checkFocusInput = $(this).next().children().attr('id');
        $("#" + checkFocusInput).focus();
        checkFocusInput = "#" + checkFocusInput;
        $("#frmprevpopup " + checkFocusInput).focus();
    }

});

var nextId;
$(document).on('focus', 'input, textarea', function () {
    nextId = $(this).parent().prev().attr('id');
    if ($("#" + nextId).hasClass("labelStyle adCol-100 lblAlignPlaceholder") || $("#" + nextId).hasClass("labelStyle lblAlignPlaceholder adCol-100")) {
        $('#' + nextId).hide();
        $("#frmprevpopup " + "#" + nextId).hide();
    }

});

$(document).on('blur', 'input, textarea', function () {
    var checkInputVal = $(this).val();
    if (($("#" + nextId).hasClass("labelStyle adCol-100 lblAlignPlaceholder") || $("#" + nextId).hasClass("labelStyle lblAlignPlaceholder adCol-100")) && (checkInputVal == "")) {
        $('#' + nextId).show();
        $("#frmprevpopup " + "#" + nextId).show();
    }
});

$(document).on('click', allLblIdSingle, function () {
    if ($(this).hasClass("labelStyle adCol-100 lblAlignPlaceholder") || $(this).hasClass("labelStyle lblAlignPlaceholder adCol-100")) {
        var checklblId = $(this).attr("id");
        checklblId = "#" + checklblId;
        $(checklblId).hide();
        $("#frmprevpopup " + checklblId).hide();
        checkFocusInput = $(this).next().children().attr('id');
        checkFocusInput = "#" + checkFocusInput;
        $(checkFocusInput).focus();
        $("#frmprevpopup " + checkFocusInput).focus();
    }
});

//label settings start here
$(".alignTxtItem").click(function () {
    $(".alignTxtItem").removeClass("txt-active");
    $(this).addClass('txt-active');
});

// Button settings start here

$(".alignBtnItem").click(function () {
    $(".alignBtnItem").removeClass("txt-active");
    $(this).addClass('txt-active');
});

$(".alignBtnItem").click(function () {
    var btnAlignVal = $(this).attr("data-btnalign");

    if (btnAlignVal == "flex-start") {
        cssObjectsFormBody.btnAlignCenter = "";
        cssObjectsFormBody.btnAlignRight = "";
        cssObjectsFormBody.btnAlignLeft = btnAlignVal;
        AppendCSS(cssObjectsFormBody);
    }
    else if (btnAlignVal == "center") {
        cssObjectsFormBody.btnAlignLeft = "";
        cssObjectsFormBody.btnAlignRight = "";
        cssObjectsFormBody.btnAlignCenter = btnAlignVal;
        AppendCSS(cssObjectsFormBody);
    }
    else {
        cssObjectsFormBody.btnAlignLeft = "";
        cssObjectsFormBody.btnAlignCenter = "";
        cssObjectsFormBody.btnAlignRight = btnAlignVal;
        AppendCSS(cssObjectsFormBody);
    }
});

$("#btnWidth").change(function () {
    cssObjectsFormBody.btnWidth = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#btnHeight").change(function () {
    cssObjectsFormBody.subBtnHeight = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$('input[name="fullwidth"]').change(function () {
    if (this.checked) {
        $("#btnWidth").val("100%");
        $(".childSubBtn").addClass('btn-100');
        $(".btn-style").addClass('btn-100');
        AppendCSS(cssObjectsFormBody);
    }
    else {
        $("#btnWidth").val("120");
        $(".childSubBtn").removeClass('btn-100');
        $(".btn-style").removeClass('btn-100');
        cssObjectsFormBody.btnWidth = $("#btnWidth").val();
        AppendCSS(cssObjectsFormBody);
    }
});

$("#btnBgcol").change(function () {
    cssObjectsFormBody.subBtnBgCol = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#btnHvrBgcol").change(function () {
    cssObjectsFormBody.subBtnBgHvCol = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#btnHvrTxtcol").change(function () {
    cssObjectsFormBody.subBtnTxtHvrCol = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#btnfontfamall").change(function () {
    cssObjectsFormBody.subBtnFontFamily = $("#btnfontfamall option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#btnfontsizall").change(function () {
    cssObjectsFormBody.subBtnFontSize = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#btnFontColall").change(function () {
    cssObjectsFormBody.subBtnFontcol = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#btnfontStrokeall").change(function () {
    cssObjectsFormBody.subBtnFontStroke = $("#btnfontStrokeall option:selected").val();
    cssObjectsFormBody.subBtnFontStyle = $("#btnfontStrokeall option:selected").attr("data-btnfontstyle");
    AppendCSS(cssObjectsFormBody);
});

$("#btnfontCaps").change(function () {
    cssObjectsFormBody.subBtnTxtTransform = $("#btnfontCaps option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnRadiAll").change(function () {
    cssObjectsFormBody.subBtnBorderRadius = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnRadiTop").change(function () {
    cssObjectsFormBody.subBtnBorderRadiusTopLeft = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnRadiRight").change(function () {
    cssObjectsFormBody.subBtnBorderRadiusTopRight = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnRadiBottom").change(function () {
    cssObjectsFormBody.subBtnBorderRadiusbottomLeft = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnRadiLeft").change(function () {
    cssObjectsFormBody.subBtnBorderRadiusbottomRight = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#btnRadiusall").change(function () {
    var brnRadiusType = $(this).attr("data-btnradius");
    if (brnRadiusType == "subBtnRadiusIndi") {
        $(this).attr("data-btnradius", "subBtnRadiusAll");
        cssObjectsFormBody.subBtnBorderRadiusTopLeft = "";
        cssObjectsFormBody.subBtnBorderRadiusTopRight = "";
        cssObjectsFormBody.subBtnBorderRadiusbottomLeft = "";
        cssObjectsFormBody.subBtnBorderRadiusbottomRight = "";
        $("#subBtnRadiTop").val("");
        $("#subBtnRadiRight").val("");
        $("#subBtnRadiBottom").val("");
        $("#subBtnRadiLeft").val("");
        AppendCSS(cssObjectsFormBody);
    }
    else {
        $(this).attr("data-btnradius", "subBtnRadiusIndi");
        cssObjectsFormBody.subBtnBorderRadius = "";
        $("#subBtnRadiAll").val("");
        AppendCSS(cssObjectsFormBody);
    }
});


$("#subBtnBorderStyleAll").change(function () {
    cssObjectsFormBody.subBtnBorderAll = $("#subBtnBorderStyleAll option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnBorderSizeAll").change(function () {
    cssObjectsFormBody.subBtnBorderSizeAll = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnBordercolAll").change(function () {
    cssObjectsFormBody.subBtnBorderColAll = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnBrdIndiTop").change(function () {
    cssObjectsFormBody.subBtnBrdIndivTop = $("#subBtnBrdIndiTop option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnBrdIndiTopSize").change(function () {
    cssObjectsFormBody.subBtnBrdIndivTopSize = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnBrdIndiTopCol").change(function () {
    cssObjectsFormBody.subBtnBrdIndivTopCol = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnBrdIndiRit").change(function () {
    cssObjectsFormBody.subBtnBrdIndivRit = $("#subBtnBrdIndiRit option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnBrdIndiRitSiz").change(function () {
    cssObjectsFormBody.subBtnBrdIndivRitSize = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnBrdIndiRitCol").change(function () {
    cssObjectsFormBody.subBtnBrdIndivRitCol = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnBrdIndiBttm").change(function () {
    cssObjectsFormBody.subBtnBrdIndivBottom = $("#subBtnBrdIndiBttm option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnBrdIndiBttmSiz").change(function () {
    cssObjectsFormBody.subBtnBrdIndivBttmSiz = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnBrdIndiBttmCol").change(function () {
    cssObjectsFormBody.subBtnBrdIndivBttmCol = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnBrdIndiLft").change(function () {
    cssObjectsFormBody.subBtnBrdIndivLeft = $("#subBtnBrdIndiLft option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnBrdIndiLftSiz").change(function () {
    cssObjectsFormBody.subBtnBrdIndivLftSiz = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnBrdIndiLftCol").change(function () {
    cssObjectsFormBody.subBtnBrdIndivLftCol = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#mainBtnbrdstyle").change(function () {
    var subBtnBrdType = $(this).attr("data-subBtnBrd");

    if (subBtnBrdType == "subBtnBrdAll") {
        $(this).attr("data-subBtnBrd", "subBtnBrdIndivs");
        $("#subBtnBorderStyleAll").val("");
        $("#subBtnBorderSizeAll").val("");
        $("#subBtnBordercolAll").val("");
        cssObjectsFormBody.subBtnBorderAll = "";
        cssObjectsFormBody.subBtnBorderSizeAll = "";
        cssObjectsFormBody.subBtnBorderColAll = "";
        AppendCSS(cssObjectsFormBody);
    }
    else {
        $(this).attr("data-subBtnBrd", "subBtnBrdAll");
        $("#subBtnBrdIndiTop").val("");
        $("#subBtnBrdIndiTopSize").val("");
        $("#subBtnBrdIndiTopCol").val("");
        $("#subBtnBrdIndiRit").val("");
        $("#subBtnBrdIndiRitSiz").val("");
        $("#subBtnBrdIndiRitCol").val("");
        $("#subBtnBrdIndiBttm").val("");
        $("#subBtnBrdIndiBttmSiz").val("");
        $("#subBtnBrdIndiBttmCol").val("");
        $("#subBtnBrdIndiLft").val("");
        $("#subBtnBrdIndiLftSiz").val("");
        $("#subBtnBrdIndiLftCol").val("");
        cssObjectsFormBody.subBtnBrdIndivTop = "";
        cssObjectsFormBody.subBtnBrdIndivTopSize = "";
        cssObjectsFormBody.subBtnBrdIndivTopCol = "";
        cssObjectsFormBody.subBtnBrdIndivRit = "";
        cssObjectsFormBody.subBtnBrdIndivRitSize = "";
        cssObjectsFormBody.subBtnBrdIndivRitCol = "";
        cssObjectsFormBody.subBtnBrdIndivBottom = "";
        cssObjectsFormBody.subBtnBrdIndivBttmSiz = "";
        cssObjectsFormBody.subBtnBrdIndivBttmCol = "";
        cssObjectsFormBody.subBtnBrdIndivLeft = "";
        cssObjectsFormBody.subBtnBrdIndivLftSiz = "";
        cssObjectsFormBody.subBtnBrdIndivLftCol = "";
        AppendCSS(cssObjectsFormBody);
    }
});

$("#btnMarginall").click(function () {
    $("#btnMarginAllWrap, #btnMarginIndivWrap").toggleClass("hideToolWrap");
});

$("#subBtnMargAll").change(function () {
    cssObjectsFormBody.subBtnMarginAll = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnMargTop").change(function () {
    cssObjectsFormBody.subBtnMarginTop = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnMargRight").change(function () {
    cssObjectsFormBody.subBtnMarginRight = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnMargBottom").change(function () {
    cssObjectsFormBody.subBtnMarginBttm = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#subBtnMargLeft").change(function () {
    cssObjectsFormBody.subBtnMarginLeft = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#btnMarginall").change(function () {
    var subBtnMargintype = $(this).attr("data-btnradius");
    if (subBtnMargintype == "subBtnMarginAll") {
        $(this).attr("data-btnradius", "subBtnMarginIndiv");
        $("#subBtnMargAll").val("");
        cssObjectsFormBody.subBtnMarginAll = "";
        AppendCSS(cssObjectsFormBody);
    }
    else {
        $(this).attr("data-btnradius", "subBtnMarginAll");
        $("#subBtnMargTop").val("");
        $("#subBtnMargRight").val("");
        $("#subBtnMargBottom").val("");
        $("#subBtnMargLeft").val("");
        cssObjectsFormBody.subBtnMarginTop = "";
        cssObjectsFormBody.subBtnMarginRight = "";
        cssObjectsFormBody.subBtnMarginBttm = "";
        cssObjectsFormBody.subBtnMarginLeft = "";
        AppendCSS(cssObjectsFormBody);
    }
});

// Button settings End here

// Close Button Settings Start here

$("input[name='closeType']").change(function () {
    if ($(this).val() == "square")
        $(".clsWrap").removeClass('clsRound');
    else
        $(".clsWrap").addClass('clsRound');
});

$("#frmClsWid").change(function () {
    cssObjectsFormBody.frmClsWidth = $(this).val();
    $("#frmClsHite").val(cssObjectsFormBody.frmClsWidth);
    AppendCSS(cssObjectsFormBody);
});

$("input[name='closeAlign']").change(function () {
    if ($(this).val() == "clsleft")
        $(".clsWrap").addClass('clsleftalign');
    else
        $(".clsWrap").removeClass('clsleftalign');
});

$("#clsFontSiz").change(function () {
    cssObjectsFormBody.frmClsFontSize = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#clsFontCol").change(function () {
    cssObjectsFormBody.frmClsFontCol = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

var clsBgTrans, clsSlidVal;
$("#clsBgCol").change(function () {
    clsBgTrans = $(this).val();
    clsSlidVal = $("#clsbgRange").val();
    cssObjectsFormBody.frmClsBgCol = bgOpacity(clsBgTrans, clsSlidVal);
    AppendCSS(cssObjectsFormBody);
});


$("#clsbgRange").change(function () {
    clsSlidVal = $(this).val();
    clsBgTrans = $("#clsBgCol").val();
    $("#clsopacValue").html(clsSlidVal + "%");
    cssObjectsFormBody.frmClsBgCol = bgOpacity(clsBgTrans, clsSlidVal);
    AppendCSS(cssObjectsFormBody);
});

$("#clsBrdStyle").change(function () {
    cssObjectsFormBody.frmClsBrdStyle = $("#clsBrdStyle option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#clsBrdSiz").change(function () {
    cssObjectsFormBody.frmClsBrdSiz = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#clsBrdCol").change(function () {
    cssObjectsFormBody.frmClsBrdCol = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#clsBtnMarTop").change(function () {
    cssObjectsFormBody.frmClsSpacTop = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#clsBtnMarRight").change(function () {
    cssObjectsFormBody.frmClsSpacRight = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#clsBtnBttm").change(function () {
    cssObjectsFormBody.frmClsSpacBottom = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#clsBtnLeft").change(function () {
    cssObjectsFormBody.frmClsSpacLeft = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

// Close Button Settings End here

// Form Title Settings Start here

$("#textTitAlignleft").click(function () {
    $(this).addClass('txt-active');
    $('#textTitAlignRight').removeClass('txt-active');
    $('#textTitAlignCenter').removeClass('txt-active');
    cssObjectsFormBody.frmTitAlignType = $(this).attr("data-frmTitalign");
    AppendCSS(cssObjectsFormBody);
});

$('#textTitAlignRight').click(function () {
    $(this).addClass('txt-active');
    $('#textTitAlignleft').removeClass('txt-active');
    $('#textTitAlignCenter').removeClass('txt-active');
    cssObjectsFormBody.frmTitAlignType = $(this).attr("data-frmTitalign");
    AppendCSS(cssObjectsFormBody);
});

$("#textTitAlignCenter").click(function () {
    $(this).addClass('txt-active');
    $('#textTitAlignRight').removeClass('txt-active');
    $('#textTitAlignleft').removeClass('txt-active');
    cssObjectsFormBody.frmTitAlignType = $(this).attr("data-frmTitalign");
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitleFontAll").change(function () {
    cssObjectsFormBody.frmTitFontFamily = $("#frmTitleFontAll option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitleFontSizAll").change(function () {
    cssObjectsFormBody.frmtTitFontSiz = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitleFontColall").change(function () {
    cssObjectsFormBody.frmTitFontCol = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitleFontStrokeAll").change(function () {
    cssObjectsFormBody.frmTitFontStroke = $("#frmTitleFontStrokeAll option:selected").val();
    cssObjectsFormBody.frmTitFontStyle = $("#frmTitleFontStrokeAll option:selected").attr('data-titfontstyle');
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitleFontCaps").change(function () {
    cssObjectsFormBody.frmTitTextCapital = $("#frmTitleFontCaps option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitleFontMargAll").change(function () {
    cssObjectsFormBody.frmtitFontMargin = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitleFontMargTop").change(function () {
    cssObjectsFormBody.frmtitFontMarginTop = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitleFontMargRight").change(function () {
    cssObjectsFormBody.frmtitFontMarginRight = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitleFontMargBottom").change(function () {
    cssObjectsFormBody.frmtitFontMarginBttm = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitleFontMargLeft").change(function () {
    cssObjectsFormBody.frmtitFontMarginLeft = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitPadAll").change(function () {
    var frmTitleMarType = $(this).attr('data-frmTitMarg');

    if (frmTitleMarType == "formTitlePaddingAll") {
        $(this).attr('data-frmTitMarg', "formTitlePaddingIndiv");
        $("#frmTitleFontMargAll").val("");
        cssObjectsFormBody.frmtitFontMargin = "";
        AppendCSS(cssObjectsFormBody);
    }
    else {
        $(this).attr('data-frmTitMarg', "formTitlePaddingAll");
        $("#frmTitleFontMargTop").val("");
        $("#frmTitleFontMargRight").val("");
        $("#frmTitleFontMargBottom").val("");
        $("#frmTitleFontMargLeft").val("");
        cssObjectsFormBody.frmtitFontMarginTop = "";
        cssObjectsFormBody.frmtitFontMarginRight = "";
        cssObjectsFormBody.frmtitFontMarginBttm = "";
        cssObjectsFormBody.frmtitFontMarginLeft = "";
        AppendCSS(cssObjectsFormBody);
    }
});

$("#frmTitleFontPaddAll").change(function () {
    cssObjectsFormBody.frmTitFontPaddAll = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitleFontPaddTop").change(function () {
    cssObjectsFormBody.frmTitFontPaddTop = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitleFontPaddRight").change(function () {
    cssObjectsFormBody.frmTitFontPaddRight = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitleFontPaddBottom").change(function () {
    cssObjectsFormBody.frmTitFontPaddBttm = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitleFontPaddLeft").change(function () {
    cssObjectsFormBody.frmTitFontPaddLeft = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitleFontPadd").change(function () {
    var frmTitFontPaddAttr = $(this).attr("data-frmTitleFontPadd");

    if (frmTitFontPaddAttr == "frmTitleFontPadAll") {
        $(this).attr("data-frmTitleFontPadd", "frmTitleFontPadIndiv");
        $("#frmTitleFontPaddAll").val("");
        cssObjectsFormBody.frmTitFontPaddAll = "";
        AppendCSS(cssObjectsFormBody);
    }
    else {
        $(this).attr("data-frmTitleFontPadd", "frmTitleFontPadAll");
        $("#frmTitleFontPaddTop").val("");
        $("#frmTitleFontPaddRight").val("");
        $("#frmTitleFontPaddBottom").val("");
        $("#frmTitleFontPaddLeft").val("");
        cssObjectsFormBody.frmTitFontPaddTop = "";
        cssObjectsFormBody.frmTitFontPaddRight = "";
        cssObjectsFormBody.frmTitFontPaddBttm = "";
        cssObjectsFormBody.frmTitFontPaddLeft = "";
        AppendCSS(cssObjectsFormBody);
    }
});

var frmTitleBgCol, frmTitleSliderVal;
$("#frmTitleFontBgcol").change(function () {
    frmTitleBgCol = $(this).val();
    frmTitleSliderVal = $("#frmTitlebgRange").val();
    cssObjectsFormBody.frmTitBgcolor = bgOpacity(frmTitleBgCol, frmTitleSliderVal);
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitlebgRange").change(function () {
    frmTitleSliderVal = $(this).val();
    frmTitleBgCol = $("#frmTitleFontBgcol").val();
    $("#frmTitleOpacValue").html(frmTitleSliderVal + "%");
    cssObjectsFormBody.frmTitBgcolor = bgOpacity(frmTitleBgCol, frmTitleSliderVal);
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitRadiAll").change(function () {
    cssObjectsFormBody.frmTitRadiusAll = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitRadiTopLeft").change(function () {
    cssObjectsFormBody.frmTitRadiusTopLeft = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitRadiTopRight").change(function () {
    cssObjectsFormBody.frmTitRadiusTopRight = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitRadiBottomLeft").change(function () {
    cssObjectsFormBody.frmTitRadiusBttmLeft = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitRadiBottomRight").change(function () {
    cssObjectsFormBody.frmTitRadiusBttmRight = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitleRadiusall").change(function () {
    var frmTitRadiAttr = $(this).attr("data-frmtitradius");
    if (frmTitRadiAttr == "frmTitRadiusAll") {
        $(this).attr("data-frmtitradius", "frmTitRadiusIndiv");
        $("#frmTitRadiAll").val("");
        cssObjectsFormBody.frmTitRadiusAll = "";
        AppendCSS(cssObjectsFormBody);

    }
    else {
        $(this).attr("data-frmtitradius", "frmTitRadiusAll");
        $("#frmTitRadiTopLeft").val("");
        $("#frmTitRadiTopRight").val("");
        $("#frmTitRadiBottomLeft").val("");
        $("#frmTitRadiBottomRight").val("");
        cssObjectsFormBody.frmTitRadiusTopLeft = "";
        cssObjectsFormBody.frmTitRadiusTopRight = "";
        cssObjectsFormBody.frmTitRadiusBttmLeft = "";
        cssObjectsFormBody.frmTitRadiusBttmRight = "";
        AppendCSS(cssObjectsFormBody);
    }
});

$("#frmTitAllBrd").change(function () {
    cssObjectsFormBody.frmTitBrdStylAll = $("#frmTitAllBrd option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitAllBrdSize").change(function () {
    cssObjectsFormBody.frmTitBrdWidAll = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitBrdColAll").change(function () {
    cssObjectsFormBody.frmTitBrdColAll = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitBrdTop").change(function () {
    cssObjectsFormBody.frmTitBrdStylTop = $("#frmTitBrdTop option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitBrdTopSize").change(function () {
    cssObjectsFormBody.frmTitBrdWidTop = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitBrdTopCol").change(function () {
    cssObjectsFormBody.frmTitBrdColTop = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitBrdRit").change(function () {
    cssObjectsFormBody.frmTitBrdStylRight = $("#frmTitBrdRit option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitBrdRitSize").change(function () {
    cssObjectsFormBody.frmTitBrdWidRight = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitBrdRitCol").change(function () {
    cssObjectsFormBody.frmTitBrdColRight = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitBrdBttm").change(function () {
    cssObjectsFormBody.frmTitBrdStyleBttm = $("#frmTitBrdBttm option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitBrdBttmSize").change(function () {
    cssObjectsFormBody.frmTitBrdWidBttm = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitBrdBttmCol").change(function () {
    cssObjectsFormBody.frmTitBrdColBttm = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitBrdLeft").change(function () {
    cssObjectsFormBody.frmTitBrdStylLeft = $("#frmTitBrdLeft option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitBrdLeftSize").change(function () {
    cssObjectsFormBody.frmTitBrdWidLeft = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmTitBrdLeftCol").change(function () {
    cssObjectsFormBody.frmTitBrdColLeft = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});


$("#frmTitbrdstyle").change(function () {
    var frmTitBrdAttr = $(this).attr("data-frmTitBrd");

    if (frmTitBrdAttr == "frmTitBrdAllStyle") {
        $(this).attr("data-frmTitBrd", "frmTitBrdIndivStyle");
        $("#frmTitAllBrd").val("");
        $("#frmTitAllBrdSize").val("");
        $("#frmTitBrdColAll").val("");
        cssObjectsFormBody.frmTitBrdStylAll = "";
        cssObjectsFormBody.frmTitBrdWidAll = "";
        cssObjectsFormBody.frmTitBrdColAll = "";
        AppendCSS(cssObjectsFormBody);
    }
    else {
        $(this).attr("data-frmTitBrd", "frmTitBrdAllStyle");
        $("#frmTitBrdTop").val("");
        $("#frmTitBrdTopSize").val("");
        $("#frmTitBrdTopCol").val("");
        $("#frmTitBrdRit").val("");
        $("#frmTitBrdRitSize").val("");
        $("#frmTitBrdRitCol").val("");
        $("#frmTitBrdBttm").val("");
        $("#frmTitBrdBttmSize").val("");
        $("#frmTitBrdBttmCol").val("");
        $("#frmTitBrdLeft").val("");
        $("#frmTitBrdLeftSize").val("");
        $("#frmTitBrdLeftCol").val("");
        cssObjectsFormBody.frmTitBrdStylTop = "";
        cssObjectsFormBody.frmTitBrdWidTop = "";
        cssObjectsFormBody.frmTitBrdColTop = "";
        cssObjectsFormBody.frmTitBrdStylRight = "";
        cssObjectsFormBody.frmTitBrdWidRight = "";
        cssObjectsFormBody.frmTitBrdColRight = "";
        cssObjectsFormBody.frmTitBrdStyleBttm = "";
        cssObjectsFormBody.frmTitBrdWidBttm = "";
        cssObjectsFormBody.frmTitBrdColBttm = "";
        cssObjectsFormBody.frmTitBrdStylLeft = "";
        cssObjectsFormBody.frmTitBrdWidLeft = "";
        cssObjectsFormBody.frmTitBrdColLeft = "";
        AppendCSS(cssObjectsFormBody);
    }
});

// Form Title Settings End here

// Form Description Settings Start Here

$("#frmDesAlignleft").click(function () {
    $(this).addClass('txt-active');
    $('#frmDesAlignRight').removeClass('txt-active');
    $('#frmDesAlignCenter').removeClass('txt-active');
    cssObjectsFormBody.frmDesTxtAlign = $(this).attr("data-frmDesalign");
    AppendCSS(cssObjectsFormBody);
});

$('#frmDesAlignRight').click(function () {
    $(this).addClass('txt-active');
    $('#frmDesAlignleft').removeClass('txt-active');
    $('#frmDesAlignCenter').removeClass('txt-active');
    cssObjectsFormBody.frmDesTxtAlign = $(this).attr("data-frmDesalign");
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesAlignCenter").click(function () {
    $(this).addClass('txt-active');
    $('#frmDesAlignRight').removeClass('txt-active');
    $('#frmDesAlignleft').removeClass('txt-active');
    cssObjectsFormBody.frmDesTxtAlign = $(this).attr("data-frmDesalign");
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesFontAll").change(function () {
    cssObjectsFormBody.frmDesFont = $("#frmDesFontAll option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesFontSizAll").change(function () {
    cssObjectsFormBody.frmDesFontSize = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesFontColall").change(function () {
    cssObjectsFormBody.frmDesFontCol = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesFontStrokeAll").change(function () {
    cssObjectsFormBody.frmDesFontStroke = $("#frmDesFontStrokeAll option:selected").val();
    cssObjectsFormBody.frmDesFontStyle = $("#frmDesFontStrokeAll option:selected").attr('data-desfontstyle');
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesFontCaps").change(function () {
    cssObjectsFormBody.frmDesFontCaps = $("#frmDesFontCaps option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesFontMargAll").change(function () {
    cssObjectsFormBody.frmDesFontMarg = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesFontMargTop").change(function () {
    cssObjectsFormBody.frmDesFontMargTop = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesFontMargRight").change(function () {
    cssObjectsFormBody.frmDesFontMargRighted = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesFontMargBottom").change(function () {
    cssObjectsFormBody.frmDesFontMargBttm = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesFontMargLeft").change(function () {
    cssObjectsFormBody.frmDesFontMargLeft = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesPadAll").change(function () {
    var frmDesMarType = $(this).attr('data-frmDesMarg');

    if (frmDesMarType == "frmDesPaddingAll") {
        $(this).attr('data-frmDesMarg', "frmDesPaddingIndiv");
        $("#frmDesFontMargAll").val("");
        cssObjectsFormBody.frmDesFontMarg = "";
        AppendCSS(cssObjectsFormBody);
    }
    else {
        $(this).attr('data-frmDesMarg', "frmDesPaddingAll");
        $("#frmDesFontMargTop").val("");
        $("#frmDesFontMargRight").val("");
        $("#frmDesFontMargBottom").val("");
        $("#frmDesFontMargLeft").val("");
        cssObjectsFormBody.frmDesFontMargTop = "";
        cssObjectsFormBody.frmDesFontMargRighted = "";
        cssObjectsFormBody.frmDesFontMargBttm = "";
        cssObjectsFormBody.frmDesFontMargLeft = "";
        AppendCSS(cssObjectsFormBody);
    }
});

var frmDesBgCol, frmDesSliderVal;
$("#frmDesFontBgcol").change(function () {
    frmDesBgCol = $(this).val();
    frmDesSliderVal = $("#frmDesbgRange").val();
    cssObjectsFormBody.frmDesTxtBgCol = bgOpacity(frmDesBgCol, frmDesSliderVal);
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesbgRange").change(function () {
    frmDesSliderVal = $(this).val();
    frmDesBgCol = $("#frmDesFontBgcol").val();
    $("#frmDesOpacValue").html(frmDesSliderVal + "%");
    cssObjectsFormBody.frmDesTxtBgCol = bgOpacity(frmDesBgCol, frmDesSliderVal);
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesFontPaddAll").change(function () {
    cssObjectsFormBody.frmDesFontPaddAll = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesFontPaddTop").change(function () {
    cssObjectsFormBody.frmDesFontPaddTop = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesFontPaddRight").change(function () {
    cssObjectsFormBody.frmDesFontPaddRight = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesFontPaddBottom").change(function () {
    cssObjectsFormBody.frmDesFontPaddBttm = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesFontPaddLeft").change(function () {
    cssObjectsFormBody.frmDesFontPaddLeft = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesFontPadd").change(function () {
    var frmDesFontPaddAttr = $(this).attr("data-frmDesFontPadd");

    if (frmDesFontPaddAttr == "frmDesFontPadAll") {
        $(this).attr("data-frmDesFontPadd", "frmDesFontPadIndiv");
        $("#frmDesFontPaddAll").val("");
        cssObjectsFormBody.frmDesFontPaddAll = "";
        AppendCSS(cssObjectsFormBody);
    }
    else {
        $(this).attr("data-frmDesFontPadd", "frmDesFontPadAll");
        $("#frmDesFontPaddTop").val("");
        $("#frmDesFontPaddRight").val("");
        $("#frmDesFontPaddBottom").val("");
        $("#frmDesFontPaddLeft").val("");
        cssObjectsFormBody.frmDesFontPaddTop = "";
        cssObjectsFormBody.frmDesFontPaddRight = "";
        cssObjectsFormBody.frmDesFontPaddBttm = "";
        cssObjectsFormBody.frmDesFontPaddLeft = "";
        AppendCSS(cssObjectsFormBody);
    }
});

$("#frmDesRadiAll").change(function () {
    cssObjectsFormBody.frmDesRadiusAll = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesRadiTopLeft").change(function () {
    cssObjectsFormBody.frmDesRadiusTopLeft = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesRadiTopRight").change(function () {
    cssObjectsFormBody.frmDesRadiusTopRight = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesRadiBottomLeft").change(function () {
    cssObjectsFormBody.frmDesRadiusBttmLeft = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesRadiBottomRight").change(function () {
    cssObjectsFormBody.frmDesRadiusBttmRight = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesRadiusall").change(function () {
    var frmDesRadiAttr = $(this).attr("data-frmDesradius");

    if (frmDesRadiAttr == "frmDesRadiusAll") {
        $(this).attr("data-frmDesradius", "frmDesRadiusIndiv");
        $("#frmDesRadiAll").val("");
        cssObjectsFormBody.frmDesRadiusAll = "";
        AppendCSS(cssObjectsFormBody);

    }
    else {
        $(this).attr("data-frmDesradius", "frmDesRadiusAll");
        $("#frmDesRadiTopLeft").val("");
        $("#frmDesRadiTopRight").val("");
        $("#frmDesRadiBottomLeft").val("");
        $("#frmDesRadiBottomRight").val("");
        cssObjectsFormBody.frmDesRadiusTopLeft = "";
        cssObjectsFormBody.frmDesRadiusTopRight = "";
        cssObjectsFormBody.frmDesRadiusBttmLeft = "";
        cssObjectsFormBody.frmDesRadiusBttmRight = "";
        AppendCSS(cssObjectsFormBody);
    }
});

$("#frmDesAllBrd").change(function () {
    cssObjectsFormBody.frmDesBrdStylAll = $("#frmDesAllBrd option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesAllBrdSize").change(function () {
    cssObjectsFormBody.frmDesBrdWidAll = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesBrdColAll").change(function () {
    cssObjectsFormBody.frmDesBrdColAll = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesBrdRit").change(function () {
    cssObjectsFormBody.frmDesBrdStylRight = $("#frmDesBrdRit option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesBrdRitSize").change(function () {
    cssObjectsFormBody.frmDesBrdWidRight = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesBrdRitCol").change(function () {
    cssObjectsFormBody.frmDesBrdColRight = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesBrdTop").change(function () {
    cssObjectsFormBody.frmDesBrdStylTop = $("#frmDesBrdTop option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesBrdTopSize").change(function () {
    cssObjectsFormBody.frmDesBrdWidTop = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesBrdTopCol").change(function () {
    cssObjectsFormBody.frmDesBrdColTop = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesBrdBttm").change(function () {
    cssObjectsFormBody.frmDesBrdStyleBttm = $("#frmDesBrdBttm option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesBrdBttmSize").change(function () {
    cssObjectsFormBody.frmDesBrdWidBttm = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesBrdBttmCol").change(function () {
    cssObjectsFormBody.frmDesBrdColBttm = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesBrdLeft").change(function () {
    cssObjectsFormBody.frmDesBrdStylLeft = $("#frmDesBrdLeft option:selected").val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesBrdLeftSize").change(function () {
    cssObjectsFormBody.frmDesBrdWidLeft = $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesBrdLeftCol").change(function () {
    cssObjectsFormBody.frmDesBrdColLeft = "#" + $(this).val();
    AppendCSS(cssObjectsFormBody);
});

$("#frmDesbrdstyle").change(function () {
    var frmTitBrdAttr = $(this).attr("data-frmDesBrd");

    if (frmTitBrdAttr == "frmDesBrdAllStyle") {
        $(this).attr("data-frmDesBrd", "frmDesBrdIndivStyle");
        $("#frmDesAllBrd").val("");
        $("#frmDesAllBrdSize").val("");
        $("#frmDesBrdColAll").val("");
        cssObjectsFormBody.frmDesBrdStylAll = "";
        cssObjectsFormBody.frmDesBrdWidAll = "";
        cssObjectsFormBody.frmDesBrdColAll = "";
        AppendCSS(cssObjectsFormBody);
    }
    else {
        $(this).attr("data-frmDesBrd", "frmDesBrdAllStyle");
        $("#frmDesBrdTop").val("");
        $("#frmDesBrdTopSize").val("");
        $("#frmDesBrdTopCol").val("");
        $("#frmDesBrdRit").val("");
        $("#frmDesBrdRitSize").val("");
        $("#frmDesBrdRitCol").val("");
        $("#frmDesBrdBttm").val("");
        $("#frmDesBrdBttmSize").val("");
        $("#frmDesBrdBttmCol").val("");
        $("#frmDesBrdLeft").val("");
        $("#frmDesBrdLeftSize").val("");
        $("#frmDesBrdLeftCol").val("");
        cssObjectsFormBody.frmDesBrdStylTop = "";
        cssObjectsFormBody.frmDesBrdWidTop = "";
        cssObjectsFormBody.frmDesBrdColTop = "";
        cssObjectsFormBody.frmDesBrdStylRight = "";
        cssObjectsFormBody.frmDesBrdWidRight = "";
        cssObjectsFormBody.frmDesBrdColRight = "";
        cssObjectsFormBody.frmDesBrdStyleBttm = "";
        cssObjectsFormBody.frmDesBrdWidBttm = "";
        cssObjectsFormBody.frmDesBrdColBttm = "";
        cssObjectsFormBody.frmDesBrdStylLeft = "";
        cssObjectsFormBody.frmDesBrdWidLeft = "";
        cssObjectsFormBody.frmDesBrdColLeft = "";
        AppendCSS(cssObjectsFormBody);
    }
});

// Form Description Settings Start Here

/* error message pop up */

errMessPop = () => {
    $(".errWrap").show();
    $("#errorText").html(GlobalErrorList.CreateEmbeddedForm.FormWidthEmptyError);
    $("#bodyWidth").focus();
}

$(".errItemClse").click(function () {
    $(this).parents('.errWrap').hide();
});

$(".frmprevdevwrp").click(function () {
    let devtabcontval = $(this).attr("data-devicetabcont");
    $(".frmdevdeskwrp, .frmdevmobwrp").addClass('hideDiv');
    $("#" + devtabcontval).removeClass('hideDiv');
});

var removeElements = function (text, selector) {
    var wrapped = $("<div>" + text + "</div>");
    wrapped.find(selector).remove();
    return wrapped.html();
}

$(".clsefrmprev").click(function () {
    $(".frmprevbgtrans").addClass('hideDiv');
    $("#frmdeskprevcont").html("");
    $("label").prop('contenteditable', true);
    $(".frmactItem").removeClass('active');
});

$(".icnbarwrp").click(function () {
    $(this).parent().next().toggleClass('show');
});

$(".frmactItem").click(function () {
    let icnbarchkid = $(this).attr("id");
    $(".frmactItem").removeClass('active');
    $(this).addClass('active');
    if (icnbarchkid == "setrules") {
        $(".frmprevbgtrans").addClass("hideDiv");
        $("#containerfluid").addClass("position-relative");
        $(".setfrmrulewrp").removeClass("hideDiv");
        $(".setfrmrulecontwrp").addClass('hideDiv');
        $(".pagetitle").html("Set Form Rules");
        $("#cont_" + icnbarchkid).removeClass('hideDiv');
        $(".frmeditoractwrp").removeClass("show");
    }
    else if (icnbarchkid == "setresponserule") {
        $("#containerfluid").addClass("position-relative");
        $(".setfrmrulewrp").removeClass("hideDiv");
        $(".setfrmrulecontwrp").addClass('hideDiv');
        $("#cont_" + icnbarchkid).removeClass('hideDiv');
        $(".pagetitle").html("Set Form Response");
        $(".frmeditoractwrp").removeClass("show");
    }
    else if (icnbarchkid == "formeffects") {
        $("#frmprevpopup").addClass("hideDiv");
        $(".frmprevbgtrans").addClass("hideDiv");
        $("#frmeffectspopup").removeClass("hideDiv");
        $(".frmeditoractwrp").removeClass("show");
    }
});

$("#formpreview").click(function () {
    $(".setfrmrulewrp").addClass('hideDiv');
    $("#frmeffectspopup").addClass("hideDiv");
    $(".frmprevbgtrans").removeClass("hideDiv");
    $("#frmprevpopup").removeClass("hideDiv");
    var getformdesign = $(".simpleForm")[0].outerHTML;
    let formdesignBody = getformdesign.replace(/inputWrap/gi, "frminputWrap").replace(/form-radio-wrap/gi, "form-radio-wrapee").replace(/form-check-wrap/gi, "form-check-wrapee").replace(/btnWrap/gi, "btnWrapee").replace(/doubleWrap/gi, "doubleWrapee").replace(/formTitle/gi, "formTitleee").replace(/formDescriptwrp/gi, "formDescriptwrp").replace(/contenteditable="true"/gi, " ");
    let ff = removeElements(formdesignBody, ".delIconWrap");
    ff = removeElements(ff, ".editIconWrap");
    $(".frmdevdeskwrp").removeClass("frmmob-preview frmaligcenter");
    $("#desktoppreview").addClass("active");
    $("#mobilepreview").removeClass("active");
    $("#frmdeskprevcont").append(ff);
});

$(".clsesetrule").click(function () {
    $("#containerfluid").removeClass("position-relative");
    $(".setfrmrulewrp").addClass("hideDiv");
    $(".pagetitle").html("Form Editor");
    $(".frmactItem").removeClass('active');
});

$('input[name="PageLoadOrOnExitOrOnScroll"]').click(function () {
    let frmdistypeval = $(this).attr("id");

    if (frmdistypeval == "ui_radAppearOnScroll")
        $("#dvScrollDownValue").removeClass('hideDiv');
    else
        $("#dvScrollDownValue").addClass('hideDiv');
});

$(".totalCountTitle span.fa-pencil").click(function () {
    if ($("#editicn").hasClass("fa-check")) {
        $("#editicn").removeClass("fa fa-check").addClass("fa fa-pencil");
        $(".frmidentitxt").prop("contenteditable", false).css({ 'background-color': "transparent", "padding": "0" });
    }
    else {
        $("#editicn").removeClass("fa fa-pencil").addClass("fa fa-check");
        $(".frmidentitxt").prop("contenteditable", true).css({ 'background-color': "white", "padding": "3px" }).focus();
    }
});

$(".frmstyle-brushwrp").click(function () {
    $(".formStyleWrap").removeClass("frmstyle-hide");
    $(".frmstyle-brushwrp").addClass('hideDiv');
});

$(".frmdstitlwrp .fa-times").click(function () {
    $(".formStyleWrap").addClass("frmstyle-hide");
    $(".frmstyle-brushwrp").removeClass('hideDiv');
});

$(".frmctrlhead").click(function () {
    $(".frmctrlhead").removeClass("active");
    $(this).addClass("active");
    let frmtooltype = $(this).attr("id");
    $(".frmcntrlmenu").removeClass("show");
    $("#form_" + frmtooltype).addClass("show");
});

var frmalignval, frmalianimate;
$("#frmaligndesign").change(function () {
    frmalignval = $("#frmaligndesign option:selected").val();
    frmalianimate = $("#frmaligndesign option:selected").attr("title");
    $(".simpleForm").removeClass("frmbottom-left frmbottom-right frmbottom-center frmbottom-screencenter frmtop-left frmtop-right frmtop-center");
    $(".simpleForm").removeClass("animated slideInLeft");
    $(".simpleForm").removeClass("animated slideInDown");
    $(".simpleForm").removeClass("animated slideInRight");
    $(".simpleForm").removeClass("animated zoomInDown");
    $(".simpleForm").removeClass("animated fadeInLeftBig");
    $(".simpleForm").removeClass("animated fadeInUpBig");
    $(".simpleForm").removeClass("animated fadeInRightBig");
    frmalianimate = frmalianimate.replace("_", " ");
    $(".simpleForm").addClass(frmalignval).addClass(frmalianimate);
});

$(".frmmobprev").click(function () {
    $(".frmmobprev").removeClass('active');
    $(this).addClass('active');
    let frmmobdevicn = $(this).attr("id");

    if (frmmobdevicn == "mobilepreview") {
        $(".simpleForm").removeClass("frmbottom-left frmbottom-right frmbottom-center frmbottom-screencenter frmtop-left frmtop-right frmtop-center");
        $(".frmdevdeskwrp").addClass("frmmob-preview frmaligcenter");
    }
    else {
        $(".frmdevdeskwrp").removeClass("frmmob-preview frmaligcenter");
        $(".simpleForm").addClass(frmalignval);
    }
});

$(".frmtoolicn").click(function () {
    $(".formcontrlwrp").addClass("showDiv");
});

$(".clsfrmelemnt").click(function () {
    $(".formcontrlwrp").removeClass("showDiv");
});

$(document).on('change', '#bodybgimg', function (s) {
    let bodyupldimg = s.target.files[0].name;
    $(".uploadfilenamewrp").removeClass('hideDiv');
    $(".frmbgimgname").html(bodyupldimg);
});

$(document).on('click', ".frmclsimgfile", function () {
    $(".frmbgimgname").html(" ");
    $(".uploadfilenamewrp").addClass('hideDiv');
});

$(".dtpickrinpt").datepicker({
    prevText: "click for previous months",
    nextText: "click for next months",
    showOtherMonths: true,
    selectOtherMonths: false
});

function dynamicdatepicker() {
    $(".dtpickrinpt").datepicker({
        prevText: "click for previous months",
        nextText: "click for next months",
        showOtherMonths: true,
        selectOtherMonths: false
    });
}

//Rules Part

$(".checkrulqus").click(function () {
    $(this).parents(".rulemainchkbxWrap").next().toggleClass('hideDiv');
    var checkbyaudicount = $('#byaduience .checkrulqus').filter(':checked').length;
    var checkbybehcount = $('#bybehaviour .checkrulqus').filter(':checked').length;
    var checkbyintercount = $('#byinteraction .checkrulqus').filter(':checked').length;
    var checkbyeventcount = $('#byevent .checkrulqus').filter(':checked').length;
    var checkbyprofcount = $('#byprofile .checkrulqus').filter(':checked').length;
    $('.rulecountaudi').html(checkbyaudicount);
    $(".rulecountbeh").html(checkbybehcount);
    $(".rulecountinteract").html(checkbyintercount);
    $(".rulecountevnt").html(checkbyeventcount);
    $(".rulecountprof").html(checkbyprofcount);
});

$(".trigrultabitem").click(function () {
    $(".trigrultabitem").removeClass("active");
    $(this).addClass("active");
    var tabtit = $(this).attr("data-ruletab");
    $(".ruletabdetWrap").addClass("hideDiv");
    $("#" + tabtit).removeClass("hideDiv");
});

$(".dtpickr").datepicker({
    prevText: "click for previous months",
    nextText: "click for next months",
    showOtherMonths: true,
    selectOtherMonths: false
});

$("#selectrule").change(function () {
    if ($(this).get(0).selectedIndex > 0) {
        var checkedvalue = $("#selectrule option:selected").val();

        var subdetails = checkedvalue.split("$");

        if (subdetails[1] != undefined && subdetails[1] != "" && subdetails[1] != null && subdetails[1].length > 0) {

            $(".trigrultabitem").removeClass("active");
            $(".ruletabdetWrap").addClass("hideDiv");

            if (subdetails[1] == "Category1") {
                $("div[data-ruletab ='byaduience']").addClass('active');
                $("#byaduience").removeClass("hideDiv");
            }
            else if (subdetails[1] == "Category2") {
                $("div[data-ruletab ='bybehaviour']").addClass('active');
                $("#bybehaviour").removeClass("hideDiv");
            }
            else if (subdetails[1] == "Category3") {
                $("div[data-ruletab ='byinteraction']").addClass('active');
                $("#byinteraction").removeClass("hideDiv");
            }
            else if (subdetails[1] == "Category4") {
                $("div[data-ruletab ='byevent']").addClass('active');
                $("#byevent").removeClass("hideDiv");
            }
            else if (subdetails[1] == "Category5") {
                $("div[data-ruletab ='byprofile']").addClass('active');
                $("#byprofile").removeClass("hideDiv");
            }

            $(".setfrmrulewrp").stop().animate({
                scrollTop: ($("#" + subdetails[0]).offset().top - 250)
            }, 1000);

            $("#" + subdetails[0]).effect('highlight', { color: "#1b84e7" }, 5000);
        }
    }
});

$("input:radio[name=Source]").click(function () {
    if ($("#ui_radSourceIsReferrer").is(":checked")) {
        $("#dv_txtSoureReferrer").show();
        $("#dv_chkSoureReferrer").show();
    }
    else {
        $("#dv_txtSoureReferrer").hide();
        $("#dv_chkSoureReferrer").hide();
    }
});

$("input:radio[name='VisitorType']").click(function () {
    if ($("#ui_radUnknown").is(":checked"))
        $(".isKnown").addClass("BlurAndOpacity")
    else
        $(".isKnown").removeClass("BlurAndOpacity")
});

$("#ui_ddlBehavioralScoreRange").change(function () {
    if ($(this).val() == "3")
        $("#ui_VisitorScore2").show();
    else
        $("#ui_VisitorScore2").hide();
});

$("#ui_ddlInfluentialScoreIs").change(function () {
    if ($(this).val() == "3")
        $("#ui_txtInfluentialScore2").show();
    else
        $("#ui_txtInfluentialScore2").hide();
});

$("#ui_ddlProspectLoyaltyIs").change(function () {
    if ($(this).val() == "3")
        $("#ui_txtProspectLoyalty2").show();
    else
        $("#ui_txtProspectLoyalty2").hide();
});

$("#ui_ddlRFMSScore").change(function () {
    if ($(this).val() == "3")
        $("#ui_txtRFMSScore2").show();
    else
        $("#ui_txtRFMSScore2").hide();
});

$("#ui_ddlCustomerTotalPurchase").change(function () {
    if ($(this).val() == "3")
        $("#ui_txtCustomerTotalPurchase2").show();
    else
        $("#ui_txtCustomerTotalPurchase2").hide();
});

$("#ui_ddlCustomerCurrentValue").change(function () {
    if ($(this).val() == "3")
        $("#ui_txtCustomerCurrentValue2").show();
    else
        $("#ui_txtCustomerCurrentValue2").hide();
});

$("#ui_ddlLastPurchaseCondition").change(function () {
    if ($(this).val() == "3")
        $("#ui_txtLastPurchaseRange2").show();
    else
        $("#ui_txtLastPurchaseRange2").hide();
});

$("#ui_ddlAnswerDependencyFroms").change(function (value) {
    $("#trAnswerDependency").removeClass("hideDiv");
    $("#ui_dvAnswerDependencyFields").html("");

    if ($("#ui_ddlAnswerDependencyFroms").get(0).selectedIndex > 0) {
        var FormId = $(this).val();
        FormUtil.BindFormFields(FormId);
    }
});

$("#ui_ddlAnswerCondition").change(function () {
    if ($(this).val() == "3")
        $("#ui_txtAnswerCondition2").show();
    else
        $("#ui_txtAnswerCondition2").hide();
});

$("input:radio[name=DOB]").click(function () {
    $("#txtFromDate,#txtToDate,#txtDiffDate,#ui_txtDOBNoofDays").val("");
    $("#ui_ddlIgnoreDOB").val(0);

    if ($("#ui_rdbtnDay").is(":checked")) {
        $("#dv_IgnoreCondition").addClass("hideDiv");
        $("#chk_IgnoreDOB").prop("checked", false);
        $("#dvDOBDayDifference").addClass("hideDiv");
        $("#dvVisitorDateRange").addClass("hideDiv");
    }
    else if ($("#ui_rdbtnMonth").is(":checked")) {
        $("#dvDOBDayDifference").addClass("hideDiv");
        $("#dvVisitorDateRange").addClass("hideDiv");
        $("#dv_IgnoreCondition").removeClass("hideDiv");
    }
    else if ($("#ui_rdbtnDates").is(":checked")) {
        $("#dvVisitorDateRange").removeClass("hideDiv");
        $("#dv_IgnoreCondition").removeClass("hideDiv");
        $("#dvDOBDayDifference").addClass("hideDiv");
    }
    else if ($("#ui_rdbtnDayDiff").is(":checked")) {
        $("#dvVisitorDateRange").addClass("hideDiv");
        $("#dv_IgnoreCondition").removeClass("hideDiv");
        $("#dvDOBDayDifference").removeClass("hideDiv");
    }
});

$("#ui_txtDOBNoofDays").change(function () {
    if ($("#ui_txtDOBNoofDays").val() != null && $("#ui_txtDOBNoofDays").val() != 0 && $("#ui_txtDOBNoofDays").val().length > 0) {
        var utcdate = new Date().toJSON().slice(0, 10);
        var pastorfuturedate = FormUtil.GetDifferenceDateValue(utcdate, $("#ui_txtDOBNoofDays").val());
        $("#txtDiffDate").val(pastorfuturedate);
    }
    else {
        $("#txtDiffDate").val("");
    }
});

//Response Part

$(".frmrepresmain").click(function () {
    $(this).parent().parent().next().toggleClass("hideDiv");
});

$('input[name="frmrepcondityp"]').click(function () {
    let frmrepchkbxidval = $(this).attr("id");

    if (frmrepchkbxidval == "frmrepcondition") {
        $(".frmrepcondideswrp").addClass('hideDiv');
        $(".frmreprescondiwrp").removeClass('hideDiv');
    }
    else {
        $("#frmrepresselItem").prop("checked", false);
        $(".frmrepresseltemwrp").addClass('hideDiv');
        $(".frmreprescondiwrp").addClass('hideDiv');
        $(".frmrepcondideswrp").removeClass('hideDiv');
    }
});

$('input[name="frmrepresselItem"]').change(function () {
    if ($('input[name="frmrepresselItem"]').is(":checked")) {
        $(".frmrepresseltemwrp").removeClass('hideDiv');
    }
    else {
        $(".frmrepresseltemwrp").addClass('hideDiv');
    }
});

$('input[name="frmrepsmscondityp"]').click(function () {
    let frmrepsmschkbxidval = $(this).attr("id");

    if (frmrepsmschkbxidval == "frmrepsmscondition") {
        $(".frmrepsmscondideswrp").addClass('hideDiv');
        $(".frmrepressmscondiwrp").removeClass('hideDiv');
    }
    else {
        $("#frmrepressmsselItem").prop("checked", false);
        $(".frmrepressmsseltemwrp").addClass('hideDiv');
        $(".frmrepressmscondiwrp").addClass('hideDiv');
        $(".frmrepsmscondideswrp").removeClass('hideDiv');
    }
});

$('input[name="frmrepressmsselItem"]').change(function () {

    if ($('input[name="frmrepressmsselItem"]').is(":checked")) {
        $(".frmrepressmsseltemwrp").removeClass('hideDiv');
    }
    else {
        $(".frmrepressmsseltemwrp").addClass('hideDiv');
    }
});

$('input[name="frmrepemlrespcondityp"]').click(function () {
    let frmrepemlrespchkbxidval = $(this).attr("id");

    if (frmrepemlrespchkbxidval == "frmrepemlrespcondition") {
        $(".frmrepemlrespcondideswrp").addClass('hideDiv');
        $(".frmrepresemlrespcondiwrp").removeClass('hideDiv');
    }
    else {
        $("#frmrepresemlrespselItem").prop("checked", false);
        $(".frmrepresemlrespseltemwrp").addClass('hideDiv');
        $(".frmrepresemlrespcondiwrp").addClass('hideDiv');
        $(".frmrepemlrespcondideswrp").removeClass('hideDiv');
    }
});

$('input[name="frmrepresemlrespselItem"]').change(function () {
    if ($('input[name="frmrepresemlrespselItem"]').is(":checked")) {
        $(".frmrepresemlrespseltemwrp").removeClass('hideDiv');
    }
    else {
        $(".frmrepresemlrespseltemwrp").addClass('hideDiv');
    }
});

$('input[name="frmrepsmsrespcondityp"]').click(function () {
    let frmrepsmsrespchkbxidval = $(this).attr("id");
    if (frmrepsmsrespchkbxidval == "frmrepsmsrespcondition") {
        $(".frmrepsmsrespcondideswrp").addClass('hideDiv');
        $(".frmrepressmsrespcondiwrp").removeClass('hideDiv');
    }
    else {
        $("#frmrepressmsrespselItem").prop("checked", false);
        $(".frmrepressmsrespseltemwrp").addClass('hideDiv');
        $(".frmrepressmsrespcondiwrp").addClass('hideDiv');
        $(".frmrepsmsrespcondideswrp").removeClass('hideDiv');
    }
});

$('input[name="frmrepressmsrespselItem"]').change(function () {
    if ($('input[name="frmrepressmsrespselItem"]').is(":checked")) {
        $(".frmrepressmsrespseltemwrp").removeClass('hideDiv');
    }
    else {
        $(".frmrepressmsrespseltemwrp").addClass('hideDiv');
    }
});

$('input[name="frmrepassgnsalpercondityp"]').click(function () {
    let frmrepasssalperchkbxidval = $(this).attr("id");
    if (frmrepasssalperchkbxidval == "frmrepassgnsalpercondition") {
        $(".frmrepasssalpercondideswrp").addClass('hideDiv');
        $(".frmrepasssalpercondiwrp").removeClass('hideDiv');
    }
    else {
        $("#frmrepassgsalperselItem").prop("checked", false);
        $(".frmrepasssalperseltemwrp").addClass('hideDiv');
        $(".frmrepasssalpercondiwrp").addClass('hideDiv');
        $(".frmrepasssalpercondideswrp").removeClass('hideDiv');
    }
});

$('input[name="frmrepassgsalperselItem"]').change(function () {
    if ($('input[name="frmrepassgsalperselItem"]').is(":checked")) {
        $(".frmrepasssalperseltemwrp").removeClass('hideDiv');
    }
    else {
        $(".frmrepasssalperseltemwrp").addClass('hideDiv');
    }
});

$('input[name="frmrepredirurlcondityp"]').click(function () {
    let frmrepredirurlchkbxidval = $(this).attr("id");
    if (frmrepredirurlchkbxidval == "frmrepredirurlcondition") {
        $(".frmrepredirurlcondideswrp").addClass('hideDiv');
        $(".frmrepredirurlcondiwrp").removeClass('hideDiv');
    }
    else {
        $("#frmrepredirurlselItem").prop("checked", false);
        $(".frmrepredirurlseltemwrp").addClass('hideDiv');
        $(".frmrepredirurlcondiwrp").addClass('hideDiv');
        $(".frmrepredirurlcondideswrp").removeClass('hideDiv');
    }
});

$('input[name="frmrepredirurlselItem"]').change(function () {
    if ($('input[name="frmrepredirurlselItem"]').is(":checked"))
        $(".frmrepredirurlseltemwrp").removeClass('hideDiv');
    else
        $(".frmrepredirurlseltemwrp").addClass('hideDiv');
});

$('input[name="frmrepautassgngrpcondityp"]').click(function () {
    let frmrepautassgngrpchkbxidval = $(this).attr("id");
    if (frmrepautassgngrpchkbxidval == "frmrepautassgngrpcondition") {
        $(".frmrepautassgngrpcondideswrp").addClass('hideDiv');
        $(".frmrepautassgngrpcondiwrp").removeClass('hideDiv');
    }
    else {
        $("#frmrepautassgngrpselItem").prop("checked", false);
        $(".frmrepredirurlseltemwrp").addClass('hideDiv');
        $(".frmrepautassgngrpcondiwrp").addClass('hideDiv');
        $(".frmrepautassgngrpcondideswrp").removeClass('hideDiv');
    }
});

$('input[name="frmrepautassgngrpselItem"]').change(function () {
    if ($('input[name="frmrepautassgngrpselItem"]').is(":checked"))
        $(".frmrepautassgngrptemwrp").removeClass('hideDiv');
    else
        $(".frmrepautassgngrptemwrp").addClass('hideDiv');
});

$('.frmrepresbasedopt').click(function () {
    $(this).parent().next().toggleClass("hideDiv");
});

$(".addidentiwrp .fa-pencil").click(function () {

    if ($("#editicn").hasClass("fa-check")) {
        $("#editicn").removeClass("fa fa-check").addClass("fa fa-pencil");
        $(".addidentitxtbx").attr("disabled", "disabled");
    }
    else {
        $("#editicn").removeClass("fa fa-pencil").addClass("fa fa-check");
        $(".addidentitxtbx").removeAttr("disabled").focus();
    }
});



function UpdateQueryString(key, value) {
    var url = document.URL;
    if (!url) url = window.location.href;
    var re = new RegExp("([?|&])" + key + "=.*?(&|#|$)(.*)", "gi");

    if (re.test(url)) {
        if (typeof value !== 'undefined' && value !== null)
            return url.replace(re, '$1' + key + "=" + value + '$2$3');
        else {
            var hash = url.split('#');
            url = hash[0].replace(re, '$1$3').replace(/(&|\?)$/, '');
            if (typeof hash[1] !== 'undefined' && hash[1] !== null)
                url += '#' + hash[1];
            return url;
        }
    }
    else {
        if (typeof value !== 'undefined' && value !== null) {
            var separator = url.indexOf('?') !== -1 ? '&' : '?',
                hash = url.split('#');
            url = hash[0] + separator + key + '=' + value;
            if (typeof hash[1] !== 'undefined' && hash[1] !== null)
                url += '#' + hash[1];
            return url;
        }
        else
            return url;
    }
}

// Response Settings Part

$("input:radio[name=ReportMail]").click(function () {
    BindReportToMailDetails();
});

function BindReportToMailDetails() {
    if ($("#dvReportToMailConditionalFields"))
        $("#dvReportToMailConditionalFields").empty();
    if ($("#dvReportToMailConditionalOptions"))
        $("#dvReportToMailConditionalOptions").empty();

    if ($("#ui_chkReportMail").is(":checked"))
        $("#ReportMail_Tr").show();

    if ($("#ui_radReportMailUnCondition").is(":checked")) {
        $("#ui_radReportMailUnCondition_dv").show();
        $("#ui_radReportMailCondition_dv").hide();
    }
    else {
        $("#ui_radReportMailUnCondition_dv").hide();
        $("#ui_radReportMailCondition_dv").show();
        $("#ui_radReportMailCondition_dv").removeClass("hideDiv");
        BindResponseConditionalFieldList("dvReportToMailConditionalFields", "dvReportToMailConditionalOptions", "ReportToMail");
    }
}

$("input:radio[name=ReportSms]").click(function () {
    BindReportToSmsDetails();
});

function BindReportToSmsDetails() {
    if ($("#dvReportToSMSConditionalFields"))
        $("#dvReportToSMSConditionalFields").empty();
    if ($("#dvReportToSMSConditionalOptions"))
        $("#dvReportToSMSConditionalOptions").empty();

    if ($("#ui_chkReportSMS").is(":checked"))
        $("#ReportSms_Tr").show();

    if ($("#ui_radReportSMSUnCondition").is(":checked")) {
        $("#ui_radReportSMSUnConditionTd").show();
        $("#ui_radReportSMSConditionTd").hide();
    }
    else {
        $("#ui_radReportSMSUnConditionTd").hide();
        $("#ui_radReportSMSConditionTd").show();
        $("#ui_radReportSMSConditionTd").removeClass("hideDiv");
        BindResponseConditionalFieldList("dvReportToSMSConditionalFields", "dvReportToSMSConditionalOptions", "ReportToSMS");
    }
}

$("input:radio[name=ReportWhatsApp]").click(function () {
    BindReportToWhatsAppDetails();
});

function BindReportToWhatsAppDetails() {
    if ($("#dvReportToWhatsAppConditionalFields"))
        $("#dvReportToWhatsAppConditionalFields").empty();
    if ($("#dvReportToWhatsAppConditionalOptions"))
        $("#dvReportToWhatsAppConditionalOptions").empty();

    if ($("#ui_chkReportWhatsApp").is(":checked"))
        $("#ReportWhatsApp_Tr").show();

    if ($("#ui_radReportWhatsAppUnCondition").is(":checked")) {
        $("#ui_radReportWhatsAppUnConditionTd").show();
        $("#ui_radReportWhatsAppConditionTd").hide();
    }
    else {
        $("#ui_radReportWhatsAppUnConditionTd").hide();
        $("#ui_radReportWhatsAppConditionTd").show();
        $("#ui_radReportWhatsAppConditionTd").removeClass("hideDiv");
        BindResponseConditionalFieldList("dvReportToWhatsAppConditionalFields", "dvReportToWhatsAppConditionalOptions", "ReportToWhatsApp");
    }
}
$("input:radio[name=MailOut]").click(function () {
    BindMailOutDetails();
});

function BindMailOutDetails() {
    if ($("#dvMailoutConditionalOptions"))
        $("#dvMailoutConditionalOptions").empty();
    if ($("#dvMailoutConditionalFields"))
        $("#dvMailoutConditionalFields").empty();

    if ($("#ui_chkSendMailOut").is(":checked"))
        $("#MailOut_Tr").show();

    if ($("#ui_chkUnConditionalMailOut").is(":checked")) {
        $("#ui_chkUnConditionalMailOutTd").show();
        $("#ui_chkConditionalMailOutTd").hide();
    }
    else {
        $("#ui_chkUnConditionalMailOutTd").hide();
        $("#ui_chkConditionalMailOutTd").show();
        $("#ui_chkConditionalMailOutTd").removeClass("hideDiv");
        BindResponseConditionalFieldList("dvMailoutConditionalFields", "dvMailoutConditionalOptions", "MailOut");
    }
}

$("input:radio[name=SmsOut]").click(function () {
    BindSmsOutDetails();
});

function BindSmsOutDetails() {
    if ($("#dvSmsOutConditionalOptions"))
        $("#dvSmsOutConditionalOptions").empty();
    if ($("#dvSmsOutConditionalFields"))
        $("#dvSmsOutConditionalFields").empty();

    if ($("#ui_chkSendSmsOut").is(":checked"))
        $("#SmsOut_Tr").show();

    if ($("#ui_chkUnConditionalSmsOut").is(":checked")) {
        $("#ui_chkUnConditionalSmsOutTd").show();
        $("#ui_chkConditionalSmsOutTd").hide();
    }
    else {
        $("#ui_chkUnConditionalSmsOutTd").hide();
        $("#ui_chkConditionalSmsOutTd").show();
        $("#ui_chkConditionalSmsOutTd").removeClass("hideDiv");
        BindResponseConditionalFieldList("dvSmsOutConditionalFields", "dvSmsOutConditionalOptions", "SmsOut");
    }
}

$("input:radio[name=WhatsAppOut]").click(function () {
    BindWhatsAppOutDetails();
});

function BindWhatsAppOutDetails() {
    if ($("#dvWhatsAppOutConditionalOptions"))
        $("#dvWhatsAppOutConditionalOptions").empty();
    if ($("#dvWhatsAppOutConditionalFields"))
        $("#dvWhatsAppOutConditionalFields").empty();

    if ($("#ui_chkSendWhatsAppOut").is(":checked"))
        $("#WhatsAppOut_Tr").show();

    if ($("#ui_chkUnConditionalWhatsAppOut").is(":checked")) {
        $("#ui_chkUnConditionalWhatsAppOutTd").show();
        $("#ui_chkConditionalWhatsAppOutTd").hide();
    }
    else {
        $("#ui_chkUnConditionalWhatsAppOutTd").hide();
        $("#ui_chkConditionalWhatsAppOutTd").show();
        $("#ui_chkConditionalWhatsAppOutTd").removeClass("hideDiv");
        BindResponseConditionalFieldList("dvWhatsAppOutConditionalFields", "dvWhatsAppOutConditionalOptions", "WhatsAppOut");
    }
}
$("input:radio[name=RedirectUrl]").click(function () {
    BindRedirectUrlDetails();
});

function BindRedirectUrlDetails() {
    if ($("#dvRedirectUrlConditionalOptions"))
        $("#dvRedirectUrlConditionalOptions").empty();
    if ($("#dvRedirectUrlConditionalFields"))
        $("#dvRedirectUrlConditionalFields").empty();

    if ($("#ui_chkRedirectUrl").is(":checked"))
        $("#RedirectUrl_Tr").show();

    if ($("#ui_chkUnConditionalRedirectUrl").is(":checked")) {
        $("#ui_chkUnConditionalRedirectUrlTd").show();
        $("#ui_chkConditionalRedirectUrlTd").hide();
    }
    else {
        $("#ui_chkUnConditionalRedirectUrlTd").hide();
        $("#ui_chkConditionalRedirectUrlTd").show();
        $("#ui_chkConditionalRedirectUrlTd").removeClass("hideDiv");
        BindResponseConditionalFieldList("dvRedirectUrlConditionalFields", "dvRedirectUrlConditionalOptions", "RedirectUrl");
    }
}

$("input:radio[name=AssignToSales]").click(function () {
    BindAssignToSalesDetails();
});

function BindAssignToSalesDetails() {
    if ($("#dvAssignToSalesConditionalOptions"))
        $("#dvAssignToSalesConditionalOptions").empty();
    if ($("#dvAssignToSalesConditionalFields"))
        $("#dvAssignToSalesConditionalFields").empty();

    if ($("#ui_chkSalesPerson").is(":checked"))
        $("#AssignToSales_Tr").show();

    if ($("#ui_radUnConditionalAssignToSales").is(":checked")) {
        $("#ui_radUnConditionalAssignToSalesTd").show();
        $("#ui_radConditionalAssignToSalesTd").hide();
    }
    else {
        $("#ui_radUnConditionalAssignToSalesTd").hide();
        $("#ui_radConditionalAssignToSalesTd").show();
        $("#ui_radConditionalAssignToSalesTd").removeClass("hideDiv");
        BindResponseConditionalFieldList("dvAssignToSalesConditionalFields", "dvAssignToSalesConditionalOptions", "AssignToSales");
    }
}

$("input:radio[name=AutoAssignGroup]").click(function () {
    BindAutoAssignGroupDetails();
});

function BindAutoAssignGroupDetails() {
    if ($("#dvGroupsConditionalOptions"))
        $("#dvGroupsConditionalOptions").empty();
    if ($("#dvGroupsConditionalFields"))
        $("#dvGroupsConditionalFields").empty();

    if ($("#ui_chkGroups").is(":checked"))
        $("#Groups_Tr").show();

    if ($("#ui_chkUnConditionalGroups").is(":checked")) {
        $("#ui_chkUnConditionalGroupsTd").show();
        $("#ui_chkConditionalGroupsTd").hide();
    }
    else {
        $("#ui_chkUnConditionalGroupsTd").hide();
        $("#ui_chkConditionalGroupsTd").show();
        $("#ui_chkConditionalGroupsTd").removeClass("hideDiv");
        BindResponseConditionalFieldList("dvGroupsConditionalFields", "dvGroupsConditionalOptions", "AutoAssignGroup");
    }
}
$("input:radio[name=Isoverridesource]").click(function () {
    BindOverridesourceDetails();
});

function BindOverridesourceDetails() {
    if ($("#dvOverRideSourceConditionalOptions"))
        $("#dvOverRideSourceConditionalOptions").empty();
    if ($("#dvOverRideSourceConditionalFields"))
        $("#dvOverRideSourceConditionalFields").empty();

    if ($("#ui_chkoverridesource").is(":checked"))
        $("#IsOverriseSource_Tr").show();

    if ($("#ui_chkUnConditionaloverridesource").is(":checked")) {
        $("#ui_chkUnConditionaloverridesourceTd").show();
        $("#ui_chkConditionaloverridesourceTd").hide();
    }
    else {
        $("#ui_chkUnConditionaloverridesourceTd").hide();
        $("#ui_chkConditionaloverridesourceTd").show();
        $("#ui_chkConditionaloverridesourceTd").removeClass("hideDiv");
        BindResponseConditionalFieldList("dvOverRideSourceConditionalFields", "dvOverRideSourceConditionalOptions", "Isoverridesource");
    }


}
BindResponseConditionalFieldList = function (bindToTagId, optionsBindTagId, identifierName) {

    var fields = "";
    var BreakTag = "";
    var Type = "radio";
    var ClassName = "rad";

    if (identifierName == "AutoAssignGroup") {
        BreakTag = "<br /><br />";
        Type = "checkbox";
        ClassName = "chk";
    } if (identifierName == "Isoverridesource") {
        BreakTag = "<br /><br />";
        Type = "checkbox";
        ClassName = "chk";
    }
    for (var index = 0; index < allFormFields.length; index++)
        if (allFormFields[index].SubFields != null && allFormFields[index].SubFields.length > 0 && allFormFields[index].SubFields.indexOf("!") < 0 && (allFormFields[index].FieldType == 8 || allFormFields[index].FieldType == 9 || allFormFields[index].FieldType == 10))
            fields += "<div class='custom-control custom-radio custom-control-inline' id='dv_" + allFormFields[index].Name.replace(/\s/g, "") + "'><input type='" + Type + "' class='custom-control-input " + ClassName + "' name='" + identifierName + "DependencyFieldOption' onclick=\"ConditionFieldBind('" + optionsBindTagId + "','" + identifierName + "','" + allFormFields[index].Name.replace(/\s\s+/g, '') + "');\" field='" + allFormFields[index].Name.replace(/\s\s+/g, '') + "' value='" + allFormFields[index].Id + "' fieldAt='" + index + "'  id='ui_rad" + identifierName + "" + allFormFields[index].Name.replace(/\s/g, "") + "' /><label for='ui_rad" + identifierName + "" + allFormFields[index].Name.replace(/\s/g, "") + "' class='custom-control-label " + ClassName + "'>" + allFormFields[index].Name + "</label></div> " + BreakTag + "";

    if (fields.length > 0)
        $("#" + bindToTagId).html(fields);
    else {
        $("#ui_chkUnConditionalMailOut, #ui_radReportMailUnCondition, #ui_radReportSMSUnCondition, #ui_radUnConditionalAssignToSales,#ui_chkUnConditionalSmsOut,#ui_chkUnConditionalRedirectUrl,#ui_chkUnConditionalGroups,#ui_chkUnConditionalWhatsAppOut,#ui_chkUnConditionaloverridesource").prop("checked", true).click();
        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ConditionalFieldError);
    }
};

ConditionFieldBind = function (optionsBindTagId, identifierName, selectedField) {

    var templateOptionString = "", usersOptionString = "", SmsTemplateOptionString = "", AutoAssignToGroupOptionString = "", fromemailidOptionString = "";

    if (identifierName == "MailOut") {
        templateOptionString = "<option value='0'>Select Template</option>";
        for (var templateIndex in templateList) {
            templateOptionString += "<option value='" + templateList[templateIndex].TemplateId + "'>" + templateList[templateIndex].TempName + "</option>";
        }

        fromemailidOptionString = "<option value='0'>Select From EmailId</option>";
        for (var templateIndex in FromEmailIdList) {
            fromemailidOptionString += "<option value='" + FromEmailIdList[templateIndex].Value + "'>" + FromEmailIdList[templateIndex].Value + "</option>";
        }
    }
    else if (identifierName == "AssignToSales") {
        usersOptionString = "<option value='0'>Select User</option>";
        for (var userIndex in usersListDetails) {
            usersOptionString += "<option value='" + usersListDetails[userIndex].UserInfoUserId + "'>" + usersListDetails[userIndex].FirstName + "</option>";
        }
    }
    else if (identifierName == "SmsOut") {
        SmsTemplateOptionString = "<option value='0'>Select Template</option>";
        for (var SmsTempIndex in SmsTemplateList) {
            SmsTemplateOptionString += "<option value='" + SmsTemplateList[SmsTempIndex].TemplateId + "'>" + SmsTemplateList[SmsTempIndex].TempName + "</option>";
        }
    }
    else if (identifierName == "AutoAssignGroup") {
        AutoAssignToGroupOptionString = "<option value='0'>Select Group</option>";
        for (var GroupIndex in groupList) {
            AutoAssignToGroupOptionString += "<option value='" + groupList[GroupIndex].value + "'>" + groupList[GroupIndex].label + "</option>";
        }
    }
    else if (identifierName == "Isoverridesource") {
        IsOverRideSourceOptionString = "<option value='0'>Select Source</option>";
        for (var IsOverRideSourceIndex in IsOverRideSourceListDetails) {
            IsOverRideSourceOptionString += "<option value='" + IsOverRideSourceListDetails[IsOverRideSourceIndex].value + "'>" + IsOverRideSourceListDetails[IsOverRideSourceIndex].label + "</option>";
        }
    }

    for (var index = 0; index < allFormFields.length; index++)
        if (allFormFields[index].Name == selectedField)
            if (allFormFields[index].SubFields != null && allFormFields[index].SubFields.length > 0 && (allFormFields[index].FieldType == 8 || allFormFields[index].FieldType == 9 || allFormFields[index].FieldType == 10)) {

                var subFieldsList = allFormFields[index].SubFields.split(",");
                var content = "", labelcontent = "", subcontent = "";

                if (identifierName == "ReportToMail") {
                    var reportToByMailAnswers;
                    if (responseSettings.ReportToDetailsByMail != null && responseSettings.ReportToDetailsByMail != "" && responseSettings.ReportToDetailsByMail.length > 0 && responseSettings.ReportToDetailsByMail.indexOf("@$") > -1) {
                        reportToByMailAnswers = responseSettings.ReportToDetailsByMail.split("@$");
                        for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++) {
                            if (reportToByMailAnswers != undefined && reportToByMailAnswers[eachIndex] != undefined && reportToByMailAnswers[eachIndex] != null && reportToByMailAnswers[eachIndex] != "")
                                content += "<div class='form-group row' id='lbl" + identifierName + "_" + eachIndex + "'><label class='frmlbltxt col-sm-12 col-md-4 col-lg-4 col-xl-4' for=''>" + subFieldsList[eachIndex] + "</label><textarea id='ui_txt" + identifierName + "_" + eachIndex + "' class='form-control  col-sm-12 col-md-8 col-lg-8 col-xl-8' cols='3' rows='3' onchange='FormUtil.MailGetValues();'>" + reportToByMailAnswers[eachIndex] + "</textarea></div>";
                            else
                                content += "<div class='form-group row' id='lbl" + identifierName + "_" + eachIndex + "'><label class='frmlbltxt col-sm-12 col-md-4 col-lg-4 col-xl-4' for=''>" + subFieldsList[eachIndex] + "</label><textarea id='ui_txt" + identifierName + "_" + eachIndex + "' class='form-control  col-sm-12 col-md-8 col-lg-8 col-xl-8' cols='3' rows='3' onchange='FormUtil.MailGetValues();'></textarea></div>";
                        }
                    }
                    else {
                        for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++)
                            content += "<div class='form-group row' id='lbl" + identifierName + "_" + eachIndex + "'><label class='frmlbltxt col-sm-12 col-md-4 col-lg-4 col-xl-4' for=''>" + subFieldsList[eachIndex] + "</label><textarea id='ui_txt" + identifierName + "_" + eachIndex + "' class='form-control  col-sm-12 col-md-8 col-lg-8 col-xl-8' cols='3' rows='3' onchange='FormUtil.MailGetValues();'></textarea></div>";
                    }
                }
                else if (identifierName == "ReportToSMS") {
                    var reportToBySMSAnswers;
                    if (responseSettings.ReportToDetailsBySMS != undefined && responseSettings.ReportToDetailsBySMS != null && responseSettings.ReportToDetailsBySMS != "" && responseSettings.ReportToDetailsBySMS.length > 0 && responseSettings.ReportToDetailsBySMS.indexOf("@$") > -1) {
                        reportToBySMSAnswers = responseSettings.ReportToDetailsBySMS.split("@$");
                        for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++) {
                            if (reportToBySMSAnswers != undefined && reportToBySMSAnswers[eachIndex] != undefined && reportToBySMSAnswers[eachIndex] != null && reportToBySMSAnswers[eachIndex] != "")
                                content += "<div class='form-group row' id='lbl" + identifierName + "_" + eachIndex + "'><label class='frmlbltxt col-sm-12 col-md-4 col-lg-4 col-xl-4' for=''>" + subFieldsList[eachIndex] + "</label><textarea id='ui_txt" + identifierName + "_" + eachIndex + "' class='form-control  col-sm-12 col-md-8 col-lg-8 col-xl-8' cols='3' rows='3' onkeypress='return onlyPhoneNumbersDetailsComma(event);' onchange='FormUtil.SMSGetValues();'>" + reportToBySMSAnswers[eachIndex] + "</textarea></div>";
                            else
                                content += "<div class='form-group row' id='lbl" + identifierName + "_" + eachIndex + "'><label class='frmlbltxt col-sm-12 col-md-4 col-lg-4 col-xl-4' for=''>" + subFieldsList[eachIndex] + "</label><textarea id='ui_txt" + identifierName + "_" + eachIndex + "' class='form-control  col-sm-12 col-md-8 col-lg-8 col-xl-8' cols='3' rows='3' onkeypress='return onlyPhoneNumbersDetailsComma(event);' onchange='FormUtil.SMSGetValues();'></textarea></div>";
                        }
                    }
                    else {
                        for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++)
                            content += "<div class='form-group row' id='lbl" + identifierName + "_" + eachIndex + "'><label class='frmlbltxt col-sm-12 col-md-4 col-lg-4 col-xl-4' for=''>" + subFieldsList[eachIndex] + "</label><textarea id='ui_txt" + identifierName + "_" + eachIndex + "' class='form-control  col-sm-12 col-md-8 col-lg-8 col-xl-8' cols='3' rows='3' onkeypress='return onlyPhoneNumbersDetailsComma(event);' onchange='FormUtil.SMSGetValues();'></textarea></div>";
                    }
                }
                else if (identifierName == "ReportToWhatsApp") {
                    var reportToByWhatsAppAnswers;
                    if (responseSettings.ReportToDetailsByWhatsApp != undefined && responseSettings.ReportToDetailsByWhatsApp != null && responseSettings.ReportToDetailsByWhatsApp != "" && responseSettings.ReportToDetailsByWhatsApp.length > 0 && responseSettings.ReportToDetailsByWhatsApp.indexOf("@$") > -1) {
                        reportToByWhatsAppAnswers = responseSettings.ReportToDetailsByWhatsApp.split("@$");
                        for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++) {
                            if (reportToByWhatsAppAnswers != undefined && reportToByWhatsAppAnswers[eachIndex] != undefined && reportToByWhatsAppAnswers[eachIndex] != null && reportToByWhatsAppAnswers[eachIndex] != "")
                                content += "<div class='form-group row' id='lbl" + identifierName + "_" + eachIndex + "'><label class='frmlbltxt col-sm-12 col-md-4 col-lg-4 col-xl-4' for=''>" + subFieldsList[eachIndex] + "</label><textarea id='ui_txt" + identifierName + "_" + eachIndex + "' class='form-control  col-sm-12 col-md-8 col-lg-8 col-xl-8' cols='3' rows='3' onkeypress='return onlyPhoneNumbersDetailsComma(event);' onchange='FormUtil.WhatsAppGetValues();'>" + reportToByWhatsAppAnswers[eachIndex] + "</textarea></div>";
                            else
                                content += "<div class='form-group row' id='lbl" + identifierName + "_" + eachIndex + "'><label class='frmlbltxt col-sm-12 col-md-4 col-lg-4 col-xl-4' for=''>" + subFieldsList[eachIndex] + "</label><textarea id='ui_txt" + identifierName + "_" + eachIndex + "' class='form-control  col-sm-12 col-md-8 col-lg-8 col-xl-8' cols='3' rows='3' onkeypress='return onlyPhoneNumbersDetailsComma(event);' onchange='FormUtil.WhatsAppGetValues();'></textarea></div>";
                        }
                    }
                    else {
                        for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++)
                            content += "<div class='form-group row' id='lbl" + identifierName + "_" + eachIndex + "'><label class='frmlbltxt col-sm-12 col-md-4 col-lg-4 col-xl-4' for=''>" + subFieldsList[eachIndex] + "</label><textarea id='ui_txt" + identifierName + "_" + eachIndex + "' class='form-control  col-sm-12 col-md-8 col-lg-8 col-xl-8' cols='3' rows='3' onkeypress='return onlyPhoneNumbersDetailsComma(event);' onchange='FormUtil.WhatsAppGetValues();'></textarea></div>";
                    }
                }
                else if (identifierName == "MailOut") {
                    var reportMailOut;
                    if (mailSettingList.length > 0) {

                        for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++) {
                            var eachMail = mailSettingList[eachIndex];

                            if (eachMail != undefined && eachMail != null && subFieldsList[eachIndex] != undefined && eachMail.Subject != undefined) {
                                var nTemplateOptionString = templateOptionString.replace("value='" + eachMail.MailTemplateId + "'", "value='" + eachMail.MailTemplateId + "' selected='selected'");
                                var nFromEmailIdOptionString = fromemailidOptionString.replace("value='" + eachMail.FromEmailId + "'", "value='" + eachMail.FromEmailId + "' selected='selected'");

                                labelcontent = "<label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "'>" + subFieldsList[eachIndex] + "</label>";
                                subcontent += "<div class='col-sm-12 col-md-3 col-lg-3 col-xl-3'><div class='form-group'><label class='frmlbltxt'>Template Name</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' onchange='FormUtil.MailOutSetting();' data-placeholder='' id='ui_ddl" + identifierName + "_" + eachIndex + "'>" + nTemplateOptionString + "</select></div></div></div>";
                                subcontent += "<div class='col-sm-12 col-md-3 col-lg-3 col-xl-3'><div class='form-group'><label class='frmlbltxt'>Mail Subject</label><input type='text' class='form-control' id='ui_txtMailConditionSubject_" + eachIndex + "' value='" + eachMail.Subject + "' onchange='FormUtil.MailOutSetting();' /></div></div>";
                                subcontent += "<div class='col-sm-12 col-md-3 col-lg-3 col-xl-3'><div class='form-group'><label class='frmlbltxt'>Mail from name</label><input type='text' class='form-control' id='ui_txtConditionalMailFromName_" + eachIndex + "' value='" + eachMail.FromName + "' onchange='FormUtil.MailOutSetting();'/></div></div>";

                                subcontent += "<div class='col-sm-12 col-md-3 col-lg-3 col-xl-3'><div class='form-group'><label class='frmlbltxt'>From Email Id</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' onchange='FormUtil.MailOutSetting();' data-placeholder='' id='ui_ddlMailFormEmailId" + identifierName + "_" + eachIndex + "'>" + nFromEmailIdOptionString + "</select></div></div></div>";

                                //subcontent += " <div class='col-sm-12 col-md-3 col-lg-3 col-xl-3'><div class='form-group'><label class='frmlbltxt'>Mail from</label><input type='text' class='form-control' id='ui_txtConditionalMailFromId_" + eachIndex + "' value='" + eachMail.FromEmailId + "' onchange='FormUtil.MailOutSetting();'/></div></div>";
                                content += "<div class='frmreprescondiwsewrp'>" + labelcontent + "<div class='row'>" + subcontent + "</div></div>";
                                subcontent = "";
                            }
                            else {
                                labelcontent = "<label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "'>" + subFieldsList[eachIndex] + "</label>";
                                subcontent += "<div class='col-sm-12 col-md-3 col-lg-3 col-xl-3'><div class='form-group'><label class='frmlbltxt'>Template Name</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' onchange='FormUtil.MailOutSetting();' data-placeholder='' id='ui_ddl" + identifierName + "_" + eachIndex + "'>" + templateOptionString + "</select></div></div></div>";
                                subcontent += "<div class='col-sm-12 col-md-3 col-lg-3 col-xl-3'><div class='form-group'><label class='frmlbltxt'>Mail Subject</label><input type='text' class='form-control' id='ui_txtMailConditionSubject_" + eachIndex + "' onchange='FormUtil.MailOutSetting();' /></div></div>";
                                subcontent += "<div class='col-sm-12 col-md-3 col-lg-3 col-xl-3'><div class='form-group'><label class='frmlbltxt'>Mail from name</label><input type='text' class='form-control' id='ui_txtConditionalMailFromName_" + eachIndex + "' onchange='FormUtil.MailOutSetting();'/></div></div>";
                                subcontent += "<div class='col-sm-12 col-md-3 col-lg-3 col-xl-3'><div class='form-group'><label class='frmlbltxt'>From Email Id</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' onchange='FormUtil.MailOutSetting();' data-placeholder='' id='ui_ddlMailFormEmailId" + identifierName + "_" + eachIndex + "'>" + fromemailidOptionString + "</select></div></div></div>";

                                //subcontent += " <div class='col-sm-12 col-md-3 col-lg-3 col-xl-3'><div class='form-group'><label class='frmlbltxt'>Mail from</label><input type='text' class='form-control' id='ui_txtConditionalMailFromId_" + eachIndex + "' onchange='FormUtil.MailOutSetting();'/></div></div>";
                                content += "<div class='frmreprescondiwsewrp'>" + labelcontent + "<div class='row'>" + subcontent + "</div></div>";
                                subcontent = "";
                            }
                        }
                    }
                    else {
                        for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++) {
                            labelcontent = "<label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "'>" + subFieldsList[eachIndex] + "</label>";
                            subcontent += "<div class='col-sm-12 col-md-3 col-lg-3 col-xl-3'><div class='form-group'><label class='frmlbltxt'>Template Name</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' onchange='FormUtil.MailOutSetting();' data-placeholder='' id='ui_ddl" + identifierName + "_" + eachIndex + "'>" + templateOptionString + "</select></div></div></div>";
                            subcontent += "<div class='col-sm-12 col-md-3 col-lg-3 col-xl-3'><div class='form-group'><label class='frmlbltxt'>Mail Subject</label><input type='text' class='form-control' id='ui_txtMailConditionSubject_" + eachIndex + "' onchange='FormUtil.MailOutSetting();' /></div></div>";
                            subcontent += "<div class='col-sm-12 col-md-3 col-lg-3 col-xl-3'><div class='form-group'><label class='frmlbltxt'>Mail from name</label><input type='text' class='form-control' id='ui_txtConditionalMailFromName_" + eachIndex + "' onchange='FormUtil.MailOutSetting();'/></div></div>";
                            subcontent += "<div class='col-sm-12 col-md-3 col-lg-3 col-xl-3'><div class='form-group'><label class='frmlbltxt'>From Email Id</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' onchange='FormUtil.MailOutSetting();' data-placeholder='' id='ui_ddlMailFormEmailId" + identifierName + "_" + eachIndex + "'>" + fromemailidOptionString + "</select></div></div></div>";

                            //subcontent += " <div class='col-sm-12 col-md-3 col-lg-3 col-xl-3'><div class='form-group'><label class='frmlbltxt'>Mail from</label><input type='text' class='form-control' id='ui_txtConditionalMailFromId_" + eachIndex + "' onchange='FormUtil.MailOutSetting();'/></div></div>";

                            content += "<div class='frmreprescondiwsewrp'>" + labelcontent + "<div class='row'>" + subcontent + "</div></div>";
                            subcontent = "";
                        }
                    }
                }
                else if (identifierName == "SmsOut") {
                    var reportSmsOut;
                    if (smsSettingList.length > 0) {
                        for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++) {
                            var eachSms = smsSettingList[eachIndex];

                            if (eachSms != undefined && eachSms != null && subFieldsList[eachIndex] != undefined) {
                                var sTemplateOptionString = SmsTemplateOptionString.replace("value='" + eachSms.SmsTemplateId + "'", "value='" + eachSms.SmsTemplateId + "' selected='selected'");
                                labelcontent = "<label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "'>" + subFieldsList[eachIndex] + "</label>";
                                subcontent = "<div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt'>Template Name</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' onchange='FormUtil.SmsOutSetting();' data-placeholder='' id='ui_ddl" + identifierName + "_" + eachIndex + "'>" + sTemplateOptionString + "</select></div></div></div>";
                                content += "<div class='frmreprescondiwsewrp'>" + labelcontent + "<div class='row'>" + subcontent + "</div></div>";
                            }
                            else {
                                labelcontent = "<label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "'>" + subFieldsList[eachIndex] + "</label>";
                                subcontent = "<div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt'>Template Name</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' onchange='FormUtil.SmsOutSetting();' data-placeholder='' id='ui_ddl" + identifierName + "_" + eachIndex + "'>" + SmsTemplateOptionString + "</select></div></div></div>";
                                content += "<div class='frmreprescondiwsewrp'>" + labelcontent + "<div class='row'>" + subcontent + "</div></div>";
                            }
                        }
                    }
                    else {
                        for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++) {
                            labelcontent = "<label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "'>" + subFieldsList[eachIndex] + "</label>";
                            subcontent = "<div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt'>Template Name</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' onchange='FormUtil.SmsOutSetting();' data-placeholder='' id='ui_ddl" + identifierName + "_" + eachIndex + "'>" + SmsTemplateOptionString + "</select></div></div></div>";
                            content += "<div class='frmreprescondiwsewrp'>" + labelcontent + "<div class='row'>" + subcontent + "</div></div>";
                        }
                    }
                }
                else if (identifierName == "WhatsAppOut") {
                    var reportWhatsAppOut;
                    if (WhatsAppSettingList.length > 0) {
                        for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++) {
                            var eachWhatsApp = WhatsAppSettingList[eachIndex];

                            if (eachWhatsApp != undefined && eachWhatsApp != null && subFieldsList[eachIndex] != undefined) {
                                var sTemplateOptionString = WhatsAppTemplateOptionString.replace("value='" + eachWhatsApp.WhatsAppTemplateId + "'", "value='" + eachWhatsApp.WhatsAppTemplateId + "' selected='selected'");
                                labelcontent = "<label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "'>" + subFieldsList[eachIndex] + "</label>";
                                subcontent = "<div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt'>Template Name</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' onchange='FormUtil.WhatsAppOutSetting();' data-placeholder='' id='ui_ddl" + identifierName + "_" + eachIndex + "'>" + sTemplateOptionString + "</select></div></div></div>";
                                content += "<div class='frmreprescondiwsewrp'>" + labelcontent + "<div class='row'>" + subcontent + "</div></div>";
                            }
                            else {
                                labelcontent = "<label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "'>" + subFieldsList[eachIndex] + "</label>";
                                subcontent = "<div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt'>Template Name</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' onchange='FormUtil.WhatsAppOutSetting();' data-placeholder='' id='ui_ddl" + identifierName + "_" + eachIndex + "'>" + WhatsAppTemplateOptionString + "</select></div></div></div>";
                                content += "<div class='frmreprescondiwsewrp'>" + labelcontent + "<div class='row'>" + subcontent + "</div></div>";
                            }
                        }
                    }
                    else {
                        for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++) {
                            labelcontent = "<label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "'>" + subFieldsList[eachIndex] + "</label>";
                            subcontent = "<div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt'>Template Name</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' onchange='FormUtil.WhatsAppOutSetting();' data-placeholder='' id='ui_ddl" + identifierName + "_" + eachIndex + "'>" + WhatsAppTemplateOptionString + "</select></div></div></div>";
                            content += "<div class='frmreprescondiwsewrp'>" + labelcontent + "<div class='row'>" + subcontent + "</div></div>";
                        }
                    }
                }
                else if (identifierName == "AssignToSales") {
                    var reportToSaleUserByAnswers;
                    if (responseSettings.AccesLeadToUserId != undefined && responseSettings.AccesLeadToUserId != null && responseSettings.AccesLeadToUserId != "" && responseSettings.AccesLeadToUserId.length > 0 && responseSettings.AccesLeadToUserId.indexOf("@$") > -1) {
                        reportToSaleUserByAnswers = responseSettings.AccesLeadToUserId.split("@$");
                        for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++) {
                            if (reportToSaleUserByAnswers != undefined && reportToSaleUserByAnswers[eachIndex] != undefined) {
                                var nUserListOptionString = usersOptionString.replace("value='" + reportToSaleUserByAnswers[eachIndex] + "'", "value='" + reportToSaleUserByAnswers[eachIndex] + "' selected='selected'");
                                labelcontent = "<label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "'>" + subFieldsList[eachIndex] + "</label>";
                                subcontent = "<div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt'>Assignee Name</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' onchange='FormUtil.AssignmentGetValues();' data-placeholder='' id='ui_txt" + identifierName + "_" + eachIndex + "'>" + nUserListOptionString + "</select></div></div></div>";
                                content += "<div class='frmreprescondiwsewrp'>" + labelcontent + "<div class='row'>" + subcontent + "</div></div>";
                            }
                            else {
                                labelcontent = "<label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "'>" + subFieldsList[eachIndex] + "</label>";
                                subcontent = "<div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt'>Assignee Name</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' onchange='FormUtil.AssignmentGetValues();' data-placeholder='' id='ui_txt" + identifierName + "_" + eachIndex + "'>" + nUserListOptionString + "</select></div></div></div>";
                                content += "<div class='frmreprescondiwsewrp'>" + labelcontent + "<div class='row'>" + subcontent + "</div></div>";
                            }
                        }
                    }
                    else {
                        for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++) {
                            labelcontent = "<label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "'>" + subFieldsList[eachIndex] + "</label>";
                            subcontent = "<div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt'>Assignee Name</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' onchange='FormUtil.AssignmentGetValues();' data-placeholder='' id='ui_txt" + identifierName + "_" + eachIndex + "'>" + usersOptionString + "</select></div></div></div>";
                            content += "<div class='frmreprescondiwsewrp'>" + labelcontent + "<div class='row'>" + subcontent + "</div></div>";
                        }
                    }
                }
                else if (identifierName == "RedirectUrl") {
                    var RedirectUrlAnswers;
                    if (responseSettings.RedirectUrl != null && responseSettings.RedirectUrl != "" && responseSettings.RedirectUrl.length > 0) {
                        RedirectUrlAnswers = responseSettings.RedirectUrl;

                        var Data = JSON.parse(RedirectUrlAnswers);
                        var SubfieldsKeyValueList = Data.Subfields;

                        if (SubfieldsKeyValueList != null && SubfieldsKeyValueList.length > 0) {
                            for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++) {
                                if (SubfieldsKeyValueList[eachIndex] != null) {
                                    for (var key in SubfieldsKeyValueList[eachIndex]) {
                                        if (SubfieldsKeyValueList[eachIndex][key] != undefined && SubfieldsKeyValueList[eachIndex][key] != null && SubfieldsKeyValueList[eachIndex][key] != "")
                                            content += "<div class='frmreprescondiwsewrp'><label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "' for=''>" + subFieldsList[eachIndex] + "</label><div class='row'><div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt' for=''>Redirect URL</label><textarea class='form-control' id='ui_txt" + identifierName + "_" + eachIndex + "' cols='3' rows='3' placeholder='Please enter the redirect url.' onchange='FormUtil.RedirectUrlValues();' value='" + SubfieldsKeyValueList[eachIndex][key] + "'>" + SubfieldsKeyValueList[eachIndex][key] + "</textarea></div></div></div></div>";
                                        else
                                            content += "<div class='frmreprescondiwsewrp'><label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "' for=''>" + subFieldsList[eachIndex] + "</label><div class='row'><div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt' for=''>Redirect URL</label><textarea class='form-control' id='ui_txt" + identifierName + "_" + eachIndex + "' cols='3' rows='3' placeholder='Please enter the redirect url.' onchange='FormUtil.RedirectUrlValues();'></textarea></div></div></div></div>";
                                    }
                                }
                                else {
                                    content += "<div class='frmreprescondiwsewrp'><label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "' for=''>" + subFieldsList[eachIndex] + "</label><div class='row'><div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt' for=''>Redirect URL</label><textarea class='form-control' id='ui_txt" + identifierName + "_" + eachIndex + "' cols='3' rows='3' placeholder='Please enter the redirect url.' onchange='FormUtil.RedirectUrlValues();'></textarea></div></div></div></div>";
                                }
                            }
                        }
                        else {
                            for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++) {
                                content += "<div class='frmreprescondiwsewrp'><label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "' for=''>" + subFieldsList[eachIndex] + "</label><div class='row'><div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt' for=''>Redirect URL</label><textarea class='form-control' id='ui_txt" + identifierName + "_" + eachIndex + "' cols='3' rows='3' placeholder='Please enter the redirect url.' onchange='FormUtil.RedirectUrlValues();'></textarea></div></div></div></div>";
                            }
                        }
                    }
                    else {
                        for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++) {
                            content += "<div class='frmreprescondiwsewrp'><label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "' for=''>" + subFieldsList[eachIndex] + "</label><div class='row'><div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt' for=''>Redirect URL</label><textarea class='form-control' id='ui_txt" + identifierName + "_" + eachIndex + "' cols='3' rows='3' placeholder='Please enter the redirect url.' onchange='FormUtil.RedirectUrlValues();'></textarea></div></div></div></div>";
                        }
                    }
                }
                else if (identifierName == "AutoAssignGroup") {
                    if ($("[id='ui_radAutoAssignGroup" + selectedField.replace(/\s/g, "") + "']").is(":checked")) {
                        var AutoAssignToGroupValue;
                        if (responseSettings.GroupId != null && responseSettings.GroupId.length > 0) {
                            AutoAssignToGroupValue = responseSettings.GroupId;
                            var SubfieldsKeyValueList = "";

                            $.each(JSON.parse(AutoAssignToGroupValue), function (i, obj) {
                                if (obj.FieldName == selectedField) {
                                    SubfieldsKeyValueList = obj.Subfields;
                                }
                            });

                            if (SubfieldsKeyValueList != null && SubfieldsKeyValueList.length > 0) {
                                for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++) {
                                    if (SubfieldsKeyValueList[eachIndex] != null) {
                                        for (var key in SubfieldsKeyValueList[eachIndex]) {
                                            if (SubfieldsKeyValueList[eachIndex][key] != undefined && SubfieldsKeyValueList[eachIndex][key] != null && SubfieldsKeyValueList[eachIndex][key] != "") {
                                                var sGroupOptionString = AutoAssignToGroupOptionString.replace("value='" + SubfieldsKeyValueList[eachIndex][key] + "'", "value='" + SubfieldsKeyValueList[eachIndex][key] + "' selected='selected'");
                                                content += "<div id='dv_AutoAssignGroup" + selectedField + "' class='frmreprescondiwsewrp'><label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "_" + selectedField + "' for=''>" + subFieldsList[eachIndex] + "</label><div class='row'><div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt' for=''>Group Name</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' data-placeholder='' id='ui_ddl" + identifierName + "_" + eachIndex + "_" + selectedField.replace(/\s/g, "") + "' onchange='FormUtil.AutoAssignToGroup();'> " + sGroupOptionString + " </select></div></div></div></div></div>";
                                            }
                                            else {
                                                content += "<div id='dv_AutoAssignGroup" + selectedField + "' class='frmreprescondiwsewrp'><label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "_" + selectedField + "' for=''>" + subFieldsList[eachIndex] + "</label><div class='row'><div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt' for=''>Group Name</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' data-placeholder='' id='ui_ddl" + identifierName + "_" + eachIndex + "_" + selectedField.replace(/\s/g, "") + "' onchange='FormUtil.AutoAssignToGroup();'>" + AutoAssignToGroupOptionString + "</select></div></div></div></div></div>";
                                            }
                                        }
                                    }
                                    else {
                                        content += "<div id='dv_AutoAssignGroup" + selectedField + "' class='frmreprescondiwsewrp'><label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "_" + selectedField + "' for=''>" + subFieldsList[eachIndex] + "</label><div class='row'><div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt' for=''>Group Name</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' data-placeholder='' id='ui_ddl" + identifierName + "_" + eachIndex + "_" + selectedField.replace(/\s/g, "") + "' onchange='FormUtil.AutoAssignToGroup();'>" + AutoAssignToGroupOptionString + "</select></div></div></div></div></div>";
                                    }
                                }
                            }
                            else {
                                for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++)
                                    content += "<div id='dv_AutoAssignGroup" + selectedField + "' class='frmreprescondiwsewrp'><label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "_" + selectedField + "' for=''>" + subFieldsList[eachIndex] + "</label><div class='row'><div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt' for=''>Group Name</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' data-placeholder='' id='ui_ddl" + identifierName + "_" + eachIndex + "_" + selectedField.replace(/\s/g, "") + "' onchange='FormUtil.AutoAssignToGroup();'>" + AutoAssignToGroupOptionString + "</select></div></div></div></div></div>";
                            }
                        }
                        else {
                            for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++)
                                content += "<div class='frmreprescondiwsewrp dv_AutoAssignGroup" + selectedField + "'><label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "_" + selectedField + "' for=''>" + subFieldsList[eachIndex] + "</label><div class='row'><div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt' for=''>Group Name</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' data-placeholder='' id='ui_ddl" + identifierName + "_" + eachIndex + "_" + selectedField.replace(/\s/g, "") + "' onchange='FormUtil.AutoAssignToGroup();'>" + AutoAssignToGroupOptionString + "</select></div></div></div></div></div>";
                        }
                    }
                    else {
                        $(".dv_AutoAssignGroup" + selectedField + "").remove();
                    }
                }
                else if (identifierName == "Isoverridesource") {
                    if ($("[id='ui_radIsoverridesource" + selectedField.replace(/\s/g, "") + "']").is(":checked")) {
                        var Isoverridesourcevalue;
                        if (responseSettings.IsOverRideSource != null && responseSettings.IsOverRideSource.length > 0) {
                            Isoverridesourcevalue = responseSettings.IsOverRideSource;
                            var SubfieldsKeyValueList = "";

                            $.each(JSON.parse(Isoverridesourcevalue), function (i, obj) {
                                if (obj.FieldName == selectedField) {
                                    SubfieldsKeyValueList = obj.Subfields;
                                }
                            });

                            if (SubfieldsKeyValueList != null && SubfieldsKeyValueList.length > 0) {
                                for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++) {
                                    if (SubfieldsKeyValueList[eachIndex] != null) {
                                        for (var key in SubfieldsKeyValueList[eachIndex]) {
                                            if (SubfieldsKeyValueList[eachIndex][key] != undefined && SubfieldsKeyValueList[eachIndex][key] != null && SubfieldsKeyValueList[eachIndex][key] != "") {
                                                var sGroupOptionString = IsOverRideSourceOptionString.replace("value='" + SubfieldsKeyValueList[eachIndex][key] + "'", "value='" + SubfieldsKeyValueList[eachIndex][key] + "' selected='selected'");
                                                content += "<div id='dv_Isoverridesource" + selectedField + "' class='frmreprescondiwsewrp'><label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "_" + selectedField + "' for=''>" + subFieldsList[eachIndex] + "</label><div class='row'><div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt' for=''>Source</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' data-placeholder='' id='ui_ddl" + identifierName + "_" + eachIndex + "_" + selectedField.replace(/\s/g, "") + "' onchange='FormUtil.Isoverridesource();'> " + sGroupOptionString + " </select></div></div></div></div></div>";
                                            }
                                            else {
                                                content += "<div id='dv_Isoverridesource" + selectedField + "' class='frmreprescondiwsewrp'><label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "_" + selectedField + "' for=''>" + subFieldsList[eachIndex] + "</label><div class='row'><div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt' for=''>Source</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' data-placeholder='' id='ui_ddl" + identifierName + "_" + eachIndex + "_" + selectedField.replace(/\s/g, "") + "' onchange='FormUtil.Isoverridesource();'>" + IsOverRideSourceOptionString + "</select></div></div></div></div></div>";
                                            }
                                        }
                                    }
                                    else {
                                        content += "<div id='dv_Isoverridesource" + selectedField + "' class='frmreprescondiwsewrp'><label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "_" + selectedField + "' for=''>" + subFieldsList[eachIndex] + "</label><div class='row'><div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt' for=''>Source</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' data-placeholder='' id='ui_ddl" + identifierName + "_" + eachIndex + "_" + selectedField.replace(/\s/g, "") + "' onchange='FormUtil.Isoverridesource();'>" + IsOverRideSourceOptionString + "</select></div></div></div></div></div>";
                                    }
                                }
                            }
                            else {
                                for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++)
                                    content += "<div id='dv_Isoverridesource" + selectedField + "' class='frmreprescondiwsewrp'><label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "_" + selectedField + "' for=''>" + subFieldsList[eachIndex] + "</label><div class='row'><div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt' for=''>Source</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' data-placeholder='' id='ui_ddl" + identifierName + "_" + eachIndex + "_" + selectedField.replace(/\s/g, "") + "' onchange='FormUtil.Isoverridesource();'>" + IsOverRideSourceOptionString + "</select></div></div></div></div></div>";
                            }
                        }
                        else {
                            for (var eachIndex = 0; eachIndex < subFieldsList.length; eachIndex++)
                                content += "<div class='frmreprescondiwsewrp dv_Isoverridesource" + selectedField + "'><label class='frmlbltxt font-weight-bold' id='lbl" + identifierName + "_" + eachIndex + "_" + selectedField + "' for=''>" + subFieldsList[eachIndex] + "</label><div class='row'><div class='col-sm-12 col-md-12'><div class='form-group'><label class='frmlbltxt' for=''>Source</label><div class='droplistwrap mr-2 w-100'><select class='form-control form-control-sm notspecificbtn select2' data-placeholder='' id='ui_ddl" + identifierName + "_" + eachIndex + "_" + selectedField.replace(/\s/g, "") + "' onchange='FormUtil.Isoverridesource();'>" + IsOverRideSourceOptionString + "</select></div></div></div></div></div>";
                        }
                    }
                    else {
                        $(".dv_Isoverridesource" + selectedField + "").remove();
                    }
                }
                if (identifierName == "AutoAssignGroup") {
                    $("label[for='ui_radAutoAssignGroup" + selectedField.replace(/\s/g, "") + "']").after(content);
                    break;
                }
                else if (identifierName == "Isoverridesource") {
                    $("label[for='ui_radIsoverridesource" + selectedField.replace(/\s/g, "") + "']").after(content);
                    break;
                }
                else {
                    $("#" + optionsBindTagId).html(content);
                    break;
                }
            }

    if (identifierName == "ReportToMail")
        FormUtil.MailGetValues();
    else if (identifierName == "ReportToSMS")
        FormUtil.SMSGetValues();
    else if (identifierName == "ReportToWhatsApp")
        FormUtil.WhatsAppGetValues();
    else if (identifierName == "MailOut")
        FormUtil.MailOutSetting();
    else if (identifierName == "SmsOut")
        FormUtil.SmsOutSetting();
    else if (identifierName == "WhatsAppOut")
        FormUtil.WhatsAppOutSetting();
    else if (identifierName == "AssignToSales")
        FormUtil.AssignmentGetValues();
    else if (identifierName == "RedirectUrl")
        FormUtil.RedirectUrlValues();
    else if (identifierName == "Isoverridesource") {
        //FormUtil.Isoverridesource();
        Intializedropdownselect();
    }
    //else if (identifierName == "AutoAssignGroup")
    //    AutoAssignToGroup();
};

//Auto assign to group Based on Optin

$("#ui_optinGroups").click(function () {
    if (this.checked) {
        $("#dv_optinGroups").show();

    }
    if (!this.checked) {
        $("#dv_MailOptin,#dv_SmsOptin,#dv_MailSmsOptin,#dv_MailOverall,#dv_SmsOverall,#dv_MailSmsOverall").hide();
        $("#dv_MailOptin").removeClass("hideDiv");
        $("#dv_SmsOptin").removeClass("hideDiv");
        $("#dv_MailOverall").removeClass("hideDiv");
        $("#dv_SmsOverall").removeClass("hideDiv");
        $("#ui_chkMailSpecificOptin,#ui_chkSmsSpecificOptin,#ui_chkMailSmsSpecificOptin,#ui_chkWhatsAppOptin,#ui_chkMailSmsOverallOptin").prop("checked", false);
        $("#ui_chkMailSpecificOptinYes,#ui_chkMailSpecificOptinNo,#ui_chkSmsSpecificOptinYes,#ui_chkSmsSpecificOptinNo").prop("checked", false);
        $("#ui_chkMailSmsSpecificOptinYes,#ui_chkMailSmsSpecificOptinNo,#ui_chkWhatsAppOptinYes,#ui_chkWhatsAppOptinNo").prop("checked", false);
        $("#ui_chkSmsOverallOptinYes,#ui_chkSmsOverallOptinNo,#ui_chkMailSmsOverallOptinYes,#ui_chkMailSmsOverallOptinNo").prop("checked", false);
        $("#dv_optinGroups").hide();
        $("#ui_ddlGroupList_MailSpecificOptinYes,#ui_ddlGroupList_MailSpecificOptinNo,#ui_ddlGroupList_SmsSpecificOptinYes,#ui_ddlGroupList_SmsSpecificOptinNo").val('0');
        $("#ui_ddlGroupList_WhatsAppOptinYes,#ui_ddlGroupList_WhatsAppOptinNo,#ui_ddlGroupList_SmsOverallOptinYes,#ui_ddlGroupList_SmsOverallOptinNo").val('0');

    }
});

$("#ui_chkMailSpecificOptin").click(function () {
    if (this.checked) {
        $("#dv_MailOptin").show();
        $("#dv_MailOptin").removeClass("hideDiv");
    }
    else {
        $("#dv_MailOptin").hide();
        $("#dv_MailOptin").addClass("hideDiv");
        $("#ui_chkMailSpecificOptinYes,#ui_chkMailSpecificOptinNo").prop("checked", false);
        $("#ui_ddlGroupList_MailSpecificOptinYes,#ui_ddlGroupList_MailSpecificOptinNo").val('0');
    }
});

$("#ui_chkSmsSpecificOptin").click(function () {
    if (this.checked) {
        $("#dv_SmsOptin").show();
        $("#dv_SmsOptin").removeClass("hideDiv");
    }
    else {
        $("#dv_SmsOptin").hide();
        $("#dv_SmsOptin").addClass("hideDiv");
        $("#ui_chkSmsSpecificOptinYes,#ui_chkSmsSpecificOptinNo").prop("checked", false);
        $("#ui_ddlGroupList_SmsSpecificOptinYes,#ui_ddlGroupList_SmsSpecificOptinNo").val('0');
    }
});

$("#ui_chkWhatsAppOptin").click(function () {
    if (this.checked) {
        $("#dv_MailOverall").show();
        $("#dv_MailOverall").removeClass("hideDiv");
    }
    else {
        $("#dv_MailOverall").hide();
        $("#dv_MailOverall").addClass("hideDiv");
        $("#ui_chkWhatsAppOptinYes,#ui_chkWhatsAppOptinNo").prop("checked", false);
        $("#ui_ddlGroupList_WhatsAppOptinYes,#ui_ddlGroupList_WhatsAppOptinNo").val('0');
    }
});

$("#cont_setresponserule input, #cont_setresponserule select, #cont_setresponserule textarea, #cont_setresponserule radio,#cont_setresponserule checkbox").change(function () {
    if (IsMailGetValues) {
        FormUtil.MailGetValues();
    }

    if (IsSMSGetValues) {
        FormUtil.SMSGetValues();
    }

    if (IsWhatsAppGetValues) {
        FormUtil.WhatsAppGetValues();
    }

    if (IsMailOutSetting) {
        FormUtil.MailOutSetting();
    }

    if (IsSmsOutSetting) {
        FormUtil.SmsOutSetting();
    }

    if (IsWhatsAppOutSetting) {
        FormUtil.WhatsAppOutSetting();
    }

    if (IsAssignmentGetValues) {
        FormUtil.AssignmentGetValues();
    }

    if (IsRedirectUrlValues) {
        FormUtil.RedirectUrlValues();
    }

    if (IsAutoAssignToGroup) {
        FormUtil.AutoAssignToGroup();
    }

    if (Isoverridesource) {
        FormUtil.Isoverridesource();
    }
});

CheckFieldDependencyForResponse = function (fieldData) {
    if ($("#ui_chkReportMail").is(":checked") && $("#ui_radReportMailCondition").is(":checked")) {
        if ($("input:radio[name='ReportToMailDependencyFieldOption']:checked").attr("field") == fieldData.Name) {
            BindResponseConditionalFieldList("dvReportToMailConditionalFields", "dvReportToMailConditionalOptions", "ReportToMail");
            $("input:radio[name='ReportToMailDependencyFieldOption'][field='" + fieldData.Name + "']").prop("checked", true);
            ConditionFieldBind("dvReportToMailConditionalOptions", "ReportToMail", fieldData.Name);
        }
        else {
            var AnyCheckedValueToReBind = "";
            //initially we are taking any other checked value exists in this options
            $("input:radio[name='ReportToMailDependencyFieldOption']:checked").map(function (i) {
                AnyCheckedValueToReBind = $.trim($(this).attr("field"));
            });

            var allReportToMailDependencyFieldOptions = "";
            $("input:radio[name='ReportToMailDependencyFieldOption']").map(function (i) {
                if (i == 0)
                    allReportToMailDependencyFieldOptions = $(this).attr("field");
                else
                    allReportToMailDependencyFieldOptions += "|" + $(this).attr("field");
            });

            var IsExists = false;
            //this is for checking if same field name exists but different field options and unchecked radio button
            if (allReportToMailDependencyFieldOptions != null && allReportToMailDependencyFieldOptions != "" && allReportToMailDependencyFieldOptions.length > 0) {

                var checkeddetails = allReportToMailDependencyFieldOptions.split("|");

                for (var i = 0; i < checkeddetails.length; i++) {
                    if (checkeddetails[i] == fieldData.Name) {
                        IsExists = true;
                        break;
                    }
                }
            }

            //this is for checking if same field name exists and it has been unchecked dont rebind and dont do anything
            if (!IsExists) {
                BindReportToMailDetails();
            }

            //this is for rebinding if field name has been changed and if any other radio button has been checked then rebind that radio button
            if (AnyCheckedValueToReBind != null && AnyCheckedValueToReBind != "" && AnyCheckedValueToReBind.length > 0) {
                $("input:radio[name='ReportToMailDependencyFieldOption'][field='" + AnyCheckedValueToReBind + "']").prop("checked", true);
                ConditionFieldBind("dvReportToMailConditionalOptions", "ReportToMail", AnyCheckedValueToReBind);
            }
        }
    }

    if ($("#ui_chkReportSMS").is(":checked") && $("#ui_radReportSMSCondition").is(":checked")) {
        if ($("input:radio[name='ReportToSMSDependencyFieldOption']:checked").attr("field") == fieldData.Name) {
            BindResponseConditionalFieldList("dvReportToSMSConditionalFields", "dvReportToSMSConditionalOptions", "ReportToSMS");
            $("input:radio[name='ReportToSMSDependencyFieldOption'][field='" + fieldData.Name + "']").prop("checked", true);
            ConditionFieldBind("dvReportToSMSConditionalOptions", "ReportToSMS", fieldData.Name);
        }
        else {
            var AnyCheckedValueToReBind = "";
            //initially we are taking any other checked value exists in this options
            $("input:radio[name='ReportToSMSDependencyFieldOption']:checked").map(function (i) {
                AnyCheckedValueToReBind = $.trim($(this).attr("field"));
            });

            var allReportToMailDependencyFieldOptions = "";
            $("input:radio[name='ReportToSMSDependencyFieldOption']").map(function (i) {
                if (i == 0)
                    allReportToMailDependencyFieldOptions = $(this).attr("field");
                else
                    allReportToMailDependencyFieldOptions += "|" + $(this).attr("field");
            });

            var IsExists = false;
            //this is for checking if same field name exists but different field options and unchecked radio button
            if (allReportToMailDependencyFieldOptions != null && allReportToMailDependencyFieldOptions != "" && allReportToMailDependencyFieldOptions.length > 0) {

                var checkeddetails = allReportToMailDependencyFieldOptions.split("|");

                for (var i = 0; i < checkeddetails.length; i++) {
                    if (checkeddetails[i] == fieldData.Name) {
                        IsExists = true;
                        break;
                    }
                }
            }

            //this is for checking if same field name exists and it has been unchecked dont rebind and dont do anything
            if (!IsExists) {
                BindReportToSmsDetails();
            }

            //this is for rebinding if field name has been changed and if any other radio button has been checked then rebind that radio button
            if (AnyCheckedValueToReBind != null && AnyCheckedValueToReBind != "" && AnyCheckedValueToReBind.length > 0) {
                $("input:radio[name='ReportToSMSDependencyFieldOption'][field='" + AnyCheckedValueToReBind + "']").prop("checked", true);
                ConditionFieldBind("dvReportToSMSConditionalOptions", "ReportToSMS", AnyCheckedValueToReBind);
            }
        }
    }


    var IsExists = false;
    //this is for checking if same field name exists but different field options and unchecked radio button
    if (allReportToMailDependencyFieldOptions != null && allReportToMailDependencyFieldOptions != "" && allReportToMailDependencyFieldOptions.length > 0) {

        var checkeddetails = allReportToMailDependencyFieldOptions.split("|");

        for (var i = 0; i < checkeddetails.length; i++) {
            if (checkeddetails[i] == fieldData.Name) {
                IsExists = true;
                break;
            }
        }
    }

    //this is for checking if same field name exists and it has been unchecked dont rebind and dont do anything
    if (!IsExists) {
        BindReportToWhatsAppDetails();
    }

    //this is for rebinding if field name has been changed and if any other radio button has been checked then rebind that radio button
    if (AnyCheckedValueToReBind != null && AnyCheckedValueToReBind != "" && AnyCheckedValueToReBind.length > 0) {
        $("input:radio[name='ReportToWhatsAppDependencyFieldOption'][field='" + AnyCheckedValueToReBind + "']").prop("checked", true);
        ConditionFieldBind("dvReportToWhatsAppConditionalOptions", "ReportToWhatsApp", AnyCheckedValueToReBind);
    }
}


if ($("#ui_chkSendMailOut").is(":checked") && $("#ui_chkConditionalMailOut").is(":checked")) {
    if ($("input:radio[name='MailOutDependencyFieldOption']:checked").attr("field") == fieldData.Name) {
        BindResponseConditionalFieldList("dvMailoutConditionalFields", "dvMailoutConditionalOptions", "MailOut");
        $("input:radio[name='MailOutDependencyFieldOption'][field='" + fieldData.Name + "']").prop("checked", true);
        ConditionFieldBind("dvMailoutConditionalOptions", "MailOut", fieldData.Name);
    }
    else {
        var AnyCheckedValueToReBind = "";
        //initially we are taking any other checked value exists in this options
        $("input:radio[name='MailOutDependencyFieldOption']:checked").map(function (i) {
            AnyCheckedValueToReBind = $.trim($(this).attr("field"));
        });

        var allReportToMailDependencyFieldOptions = "";
        $("input:radio[name='MailOutDependencyFieldOption']").map(function (i) {
            if (i == 0)
                allReportToMailDependencyFieldOptions = $(this).attr("field");
            else
                allReportToMailDependencyFieldOptions += "|" + $(this).attr("field");
        });

        var IsExists = false;
        //this is for checking if same field name exists but different field options and unchecked radio button
        if (allReportToMailDependencyFieldOptions != null && allReportToMailDependencyFieldOptions != "" && allReportToMailDependencyFieldOptions.length > 0) {

            var checkeddetails = allReportToMailDependencyFieldOptions.split("|");

            for (var i = 0; i < checkeddetails.length; i++) {
                if (checkeddetails[i] == fieldData.Name) {
                    IsExists = true;
                    break;
                }
            }
        }

        //this is for checking if same field name exists and it has been unchecked dont rebind and dont do anything
        if (!IsExists) {
            BindMailOutDetails();
        }

        //this is for rebinding if field name has been changed and if any other radio button has been checked then rebind that radio button
        if (AnyCheckedValueToReBind != null && AnyCheckedValueToReBind != "" && AnyCheckedValueToReBind.length > 0) {
            $("input:radio[name='MailOutDependencyFieldOption'][field='" + AnyCheckedValueToReBind + "']").prop("checked", true);
            ConditionFieldBind("dvMailoutConditionalOptions", "MailOut", AnyCheckedValueToReBind);
        }
    }
}

if ($("#ui_chkSendSmsOut").is(":checked") && $("#ui_chkConditionalSmsOut").is(":checked")) {
    if ($("input:radio[name='SmsOutDependencyFieldOption']:checked").attr("field") == fieldData.Name) {
        BindResponseConditionalFieldList("dvSmsOutConditionalFields", "dvSmsOutConditionalOptions", "SmsOut");
        $("input:radio[name='SmsOutDependencyFieldOption'][field='" + fieldData.Name + "']").prop("checked", true);
        ConditionFieldBind("dvSmsOutConditionalOptions", "SmsOut", fieldData.Name);
    }
    else {
        var AnyCheckedValueToReBind = "";
        //initially we are taking any other checked value exists in this options
        $("input:radio[name='SmsOutDependencyFieldOption']:checked").map(function (i) {
            AnyCheckedValueToReBind = $.trim($(this).attr("field"));
        });

        var allReportToMailDependencyFieldOptions = "";
        $("input:radio[name='SmsOutDependencyFieldOption']").map(function (i) {
            if (i == 0)
                allReportToMailDependencyFieldOptions = $(this).attr("field");
            else
                allReportToMailDependencyFieldOptions += "|" + $(this).attr("field");
        });

        var IsExists = false;
        //this is for checking if same field name exists but different field options and unchecked radio button
        if (allReportToMailDependencyFieldOptions != null && allReportToMailDependencyFieldOptions != "" && allReportToMailDependencyFieldOptions.length > 0) {

            var checkeddetails = allReportToMailDependencyFieldOptions.split("|");

            for (var i = 0; i < checkeddetails.length; i++) {
                if (checkeddetails[i] == fieldData.Name) {
                    IsExists = true;
                    break;
                }
            }
        }

        //this is for checking if same field name exists and it has been unchecked dont rebind and dont do anything
        if (!IsExists) {
            BindSmsOutDetails();
        }

        //this is for rebinding if field name has been changed and if any other radio button has been checked then rebind that radio button
        if (AnyCheckedValueToReBind != null && AnyCheckedValueToReBind != "" && AnyCheckedValueToReBind.length > 0) {
            $("input:radio[name='SmsOutDependencyFieldOption'][field='" + AnyCheckedValueToReBind + "']").prop("checked", true);
            ConditionFieldBind("dvSmsOutConditionalOptions", "SmsOut", AnyCheckedValueToReBind);
        }
    }
}

if ($("#ui_chkSendWhatsAppOut").is(":checked") && $("#ui_chkConditionalWhatsAppOut").is(":checked")) {
    if ($("input:radio[name='WhatsAppOutDependencyFieldOption']:checked").attr("field") == fieldData.Name) {
        BindResponseConditionalFieldList("dvWhatsAppOutConditionalFields", "dvWhatsAppOutConditionalOptions", "WhatsAppOut");
        $("input:radio[name='WhatsAppOutDependencyFieldOption'][field='" + fieldData.Name + "']").prop("checked", true);
        ConditionFieldBind("dvWhatsAppOutConditionalOptions", "WhatsAppOut", fieldData.Name);
    }
    else {
        var AnyCheckedValueToReBind = "";
        //initially we are taking any other checked value exists in this options
        $("input:radio[name='WhatsAppOutDependencyFieldOption']:checked").map(function (i) {
            AnyCheckedValueToReBind = $.trim($(this).attr("field"));
        });

        var allReportToMailDependencyFieldOptions = "";
        $("input:radio[name='WhatsAppOutDependencyFieldOption']").map(function (i) {
            if (i == 0)
                allReportToMailDependencyFieldOptions = $(this).attr("field");
            else
                allReportToMailDependencyFieldOptions += "|" + $(this).attr("field");
        });

        var IsExists = false;
        //this is for checking if same field name exists but different field options and unchecked radio button
        if (allReportToMailDependencyFieldOptions != null && allReportToMailDependencyFieldOptions != "" && allReportToMailDependencyFieldOptions.length > 0) {

            var checkeddetails = allReportToMailDependencyFieldOptions.split("|");

            for (var i = 0; i < checkeddetails.length; i++) {
                if (checkeddetails[i] == fieldData.Name) {
                    IsExists = true;
                    break;
                }
            }
        }

        //this is for checking if same field name exists and it has been unchecked dont rebind and dont do anything
        if (!IsExists) {
            BindWhatsAppOutDetails();
        }

        //this is for rebinding if field name has been changed and if any other radio button has been checked then rebind that radio button
        if (AnyCheckedValueToReBind != null && AnyCheckedValueToReBind != "" && AnyCheckedValueToReBind.length > 0) {
            $("input:radio[name='WhatsAppOutDependencyFieldOption'][field='" + AnyCheckedValueToReBind + "']").prop("checked", true);
            ConditionFieldBind("dvWhatsAppOutConditionalOptions", "WhatsAppOut", AnyCheckedValueToReBind);
        }
    }
}
if ($("#ui_chkSalesPerson").is(":checked") && $("#ui_radConditionalAssignToSales").is(":checked")) {
    if ($("input:radio[name='AssignToSalesDependencyFieldOption']:checked").attr("field") == fieldData.Name) {
        BindResponseConditionalFieldList("dvAssignToSalesConditionalFields", "dvAssignToSalesConditionalOptions", "AssignToSales");
        $("input:radio[name='AssignToSalesDependencyFieldOption'][field='" + fieldData.Name + "']").prop("checked", true);
        ConditionFieldBind("dvAssignToSalesConditionalOptions", "AssignToSales", fieldData.Name);
    }
    else {
        var AnyCheckedValueToReBind = "";
        //initially we are taking any other checked value exists in this options
        $("input:radio[name='AssignToSalesDependencyFieldOption']:checked").map(function (i) {
            AnyCheckedValueToReBind = $.trim($(this).attr("field"));
        });

        var allReportToMailDependencyFieldOptions = "";
        $("input:radio[name='AssignToSalesDependencyFieldOption']").map(function (i) {
            if (i == 0)
                allReportToMailDependencyFieldOptions = $(this).attr("field");
            else
                allReportToMailDependencyFieldOptions += "|" + $(this).attr("field");
        });

        var IsExists = false;
        //this is for checking if same field name exists but different field options and unchecked radio button
        if (allReportToMailDependencyFieldOptions != null && allReportToMailDependencyFieldOptions != "" && allReportToMailDependencyFieldOptions.length > 0) {

            var checkeddetails = allReportToMailDependencyFieldOptions.split("|");

            for (var i = 0; i < checkeddetails.length; i++) {
                if (checkeddetails[i] == fieldData.Name) {
                    IsExists = true;
                    break;
                }
            }
        }

        //this is for checking if same field name exists and it has been unchecked dont rebind and dont do anything
        if (!IsExists) {
            BindAssignToSalesDetails();
        }

        //this is for rebinding if field name has been changed and if any other radio button has been checked then rebind that radio button
        if (AnyCheckedValueToReBind != null && AnyCheckedValueToReBind != "" && AnyCheckedValueToReBind.length > 0) {
            $("input:radio[name='AssignToSalesDependencyFieldOption'][field='" + AnyCheckedValueToReBind + "']").prop("checked", true);
            ConditionFieldBind("dvAssignToSalesConditionalOptions", "AssignToSales", AnyCheckedValueToReBind);
        }
    }
}

if ($("#ui_chkRedirectUrl").is(":checked") && $("#ui_chkConditionalRedirectUrl").is(":checked")) {
    if ($("input:radio[name='RedirectUrlDependencyFieldOption']:checked").attr("field") == fieldData.Name) {
        BindResponseConditionalFieldList("dvRedirectUrlConditionalFields", "dvRedirectUrlConditionalOptions", "RedirectUrl");
        $("input:radio[name='RedirectUrlDependencyFieldOption'][field='" + fieldData.Name + "']").prop("checked", true);
        ConditionFieldBind("dvRedirectUrlConditionalOptions", "RedirectUrl", fieldData.Name);
    }
    else {
        var AnyCheckedValueToReBind = "";
        //initially we are taking any other checked value exists in this options
        $("input:radio[name='RedirectUrlDependencyFieldOption']:checked").map(function (i) {
            AnyCheckedValueToReBind = $.trim($(this).attr("field"));
        });

        var allReportToMailDependencyFieldOptions = "";
        $("input:radio[name='RedirectUrlDependencyFieldOption']").map(function (i) {
            if (i == 0)
                allReportToMailDependencyFieldOptions = $(this).attr("field");
            else
                allReportToMailDependencyFieldOptions += "|" + $(this).attr("field");
        });

        var IsExists = false;
        //this is for checking if same field name exists but different field options and unchecked radio button
        if (allReportToMailDependencyFieldOptions != null && allReportToMailDependencyFieldOptions != "" && allReportToMailDependencyFieldOptions.length > 0) {

            var checkeddetails = allReportToMailDependencyFieldOptions.split("|");

            for (var i = 0; i < checkeddetails.length; i++) {
                if (checkeddetails[i] == fieldData.Name) {
                    IsExists = true;
                    break;
                }
            }
        }

        //this is for checking if same field name exists and it has been unchecked dont rebind and dont do anything
        if (!IsExists) {
            BindRedirectUrlDetails();
        }

        //this is for rebinding if field name has been changed and if any other radio button has been checked then rebind that radio button
        if (AnyCheckedValueToReBind != null && AnyCheckedValueToReBind != "" && AnyCheckedValueToReBind.length > 0) {
            $("input:radio[name='RedirectUrlDependencyFieldOption'][field='" + AnyCheckedValueToReBind + "']").prop("checked", true);
            ConditionFieldBind("dvRedirectUrlConditionalOptions", "RedirectUrl", AnyCheckedValueToReBind);
        }
    }
}

if ($("#ui_chkGroups").is(":checked") && $("#ui_chkConditionalGroups").is(":checked")) {
    if ($("input:checkbox[name='AutoAssignGroupDependencyFieldOption']:checked").attr("field") == fieldData.Name) {
        BindResponseConditionalFieldList("dvGroupsConditionalFields", "dvGroupsConditionalOptions", "AutoAssignGroup");
        $("input:checkbox[name='AutoAssignGroupDependencyFieldOption'][field='" + fieldData.Name + "']").prop("checked", true);
        ConditionFieldBind("dvGroupsConditionalOptions", "AutoAssignGroup", fieldData.Name);
    }
    else {
        var AnyCheckedValueToReBind = "";

        //initially we are taking any other checked value exists in this options
        $("input:checkbox[name='AutoAssignGroupDependencyFieldOption']:checked").map(function (i) {
            if (i == 0)
                AnyCheckedValueToReBind = $.trim($(this).attr("field"));
            else
                AnyCheckedValueToReBind += "|" + $.trim($(this).attr("field"));
        });

        var allReportToMailDependencyFieldOptions = "";
        $("input:checkbox[name='AutoAssignGroupDependencyFieldOption']").map(function (i) {
            if (i == 0)
                allReportToMailDependencyFieldOptions = $(this).attr("field");
            else
                allReportToMailDependencyFieldOptions += "|" + $(this).attr("field");
        });

        var IsExists = false;
        //this is for checking if same field name exists but different field options and unchecked radio button
        if (allReportToMailDependencyFieldOptions != null && allReportToMailDependencyFieldOptions != "" && allReportToMailDependencyFieldOptions.length > 0) {

            var checkeddetails = allReportToMailDependencyFieldOptions.split("|");

            for (var i = 0; i < checkeddetails.length; i++) {
                if (checkeddetails[i] == fieldData.Name) {
                    IsExists = true;
                    break;
                }
            }
        }

        //this is for checking if same field name exists and it has been unchecked dont rebind and dont do anything
        if (!IsExists) {
            BindAutoAssignGroupDetails();
        }

        //this is for rebinding if field name has been changed and if any other radio button has been checked then rebind that radio button
        if (AnyCheckedValueToReBind != null && AnyCheckedValueToReBind != "" && AnyCheckedValueToReBind.length > 0) {

            var rebindcheckeddetails = AnyCheckedValueToReBind.split("|");

            for (var i = 0; i < rebindcheckeddetails.length; i++) {
                $("input:checkbox[name='AutoAssignGroupDependencyFieldOption'][field='" + rebindcheckeddetails[i] + "']").prop("checked", true);
                ConditionFieldBind("dvGroupsConditionalOptions", "AutoAssignGroup", rebindcheckeddetails[i]);
            }
        }
    }
    if ($("#ui_chkoverridesource").is(":checked") && $("#ui_chkConditionaloverridesource").is(":checked")) {
        if ($("input:checkbox[name='IsoverridesourceDependencyFieldOption']:checked").attr("field") == fieldData.Name) {
            BindResponseConditionalFieldList("dvOverRideSourceConditionalFields", "dvOverRideSourceConditionalOptions", "Isoverridesource");
            $("input:checkbox[name='IsoverridesourceDependencyFieldOption'][field='" + fieldData.Name + "']").prop("checked", true);
            ConditionFieldBind("dvOverRideSourceConditionalOptions", "Isoverridesource", fieldData.Name);
        }
        else {
            var AnyCheckedValueToReBind = "";

            //initially we are taking any other checked value exists in this options
            $("input:checkbox[name='IsoverridesourceDependencyFieldOption']:checked").map(function (i) {
                if (i == 0)
                    AnyCheckedValueToReBind = $.trim($(this).attr("field"));
                else
                    AnyCheckedValueToReBind += "|" + $.trim($(this).attr("field"));
            });

            var allReportToMailDependencyFieldOptions = "";
            $("input:checkbox[name='IsoverridesourceDependencyFieldOption']").map(function (i) {
                if (i == 0)
                    allReportToMailDependencyFieldOptions = $(this).attr("field");
                else
                    allReportToMailDependencyFieldOptions += "|" + $(this).attr("field");
            });

            var IsExists = false;
            //this is for checking if same field name exists but different field options and unchecked radio button
            if (allReportToMailDependencyFieldOptions != null && allReportToMailDependencyFieldOptions != "" && allReportToMailDependencyFieldOptions.length > 0) {

                var checkeddetails = allReportToMailDependencyFieldOptions.split("|");

                for (var i = 0; i < checkeddetails.length; i++) {
                    if (checkeddetails[i] == fieldData.Name) {
                        IsExists = true;
                        break;
                    }
                }
            }

            //this is for checking if same field name exists and it has been unchecked dont rebind and dont do anything
            if (!IsExists) {
                BindOverridesourceDetails();
            }

            //this is for rebinding if field name has been changed and if any other radio button has been checked then rebind that radio button
            if (AnyCheckedValueToReBind != null && AnyCheckedValueToReBind != "" && AnyCheckedValueToReBind.length > 0) {

                var rebindcheckeddetails = AnyCheckedValueToReBind.split("|");

                for (var i = 0; i < rebindcheckeddetails.length; i++) {
                    $("input:checkbox[name='IsoverridesourceDependencyFieldOption'][field='" + rebindcheckeddetails[i] + "']").prop("checked", true);
                    ConditionFieldBind("dvOverRideSourceConditionalOptions", "Isoverridesource", rebindcheckeddetails[i]);
                }
            }
        }


    };
};


Slider = function (tagName) {
    var sliderValue = 10;

    $('#' + tagName).val(sliderValue);
    $('#' + tagName).slider({
        value: sliderValue,
        min: 1,
        max: 10,
        orientation: "horizontal",
        range: "min",
        animate: true,
        change: function (event, ui) {
            $('#' + tagName).val(ui.value);
        }
    });
};

//For Banner and Custom html code here

$(".savecustfrm").click(function () {

    ShowPageLoading();

    if (!FormUtil.ValidateFormCustomHtmlContents()) {
        HidePageLoading();
        return false;
    }

    $(".custompopupwrp").removeClass("right-0").addClass("right-500");
    if ($(".custompopupwrp").hasClass("right-500")) {
        $(".formStyleWrap, #saveform").addClass("z-index100");
    }
    setTimeout(function () { HidePageLoading(); }, 1000);
});

ValidateFormHtmlDetails = function () {

    if (!FormUtil.ValidateFormCustomHtmlContents()) {
        HidePageLoading();
        return false;
    }

    if (!FormUtil.ValidateSettings()) {
        HidePageLoading();
        return false;
    }

    if (!FormUtil.ValidateRules()) {
        HidePageLoading();
        return false;
    }

    //if (!FormUtil.ValidationOfWebHookSetting()) {
    //    HidePageLoading();
    //    return false;
    //}
    return true;
}

SaveOneByOneFormHtmlDetails = function () {

    formId = formDetails.Id = $.urlParam("FormId");

    if (formDetails.Id <= 0) {
        formDetails.IsNewDivOrOldTable = 1;
    }

    FormUtil.GetBasicFormHtmlDetails();
    FormUtil.GetBanners();
    FormUtil.GetDesignValuesFormHtmlDetails();
    FormUtil.GetRulesData();
    FormUtil.GetResponseSettingFormHtmlDetails();
    FormUtil.WebHookValues();
    FormUtil.GetURLParametersResponseValues();

    $.ajax({
        url: "/CaptureForm/Create/SaveFormBannerHtmlDetails",
        data: JSON.stringify({ 'AccountId': Plumb5AccountId, 'formDetails': formDetails, 'rulesData': ruleConditions, 'bannerDetails': bannerDetails, 'responseSettings': responseSettings, 'mailSettings': mailSettings, 'WebHookData': webhookdetails }),
        dataType: "json",
        type: "POST",
        contentType: "application/json; charset=utf-8",
        dataFilter: function (data) { return data; },
        success: function (response) {

            if (response.Status) {
                ShowSuccessMessage(GlobalErrorList.CreateEmbeddedForm.FormSuccessStatus);
                FormId = response.FormId;

                if ($.urlParam("FormId") == 0) {
                    var url = UpdateQueryString("FormId", FormId);
                    window.history.pushState(null, null, url);
                }

                setTimeout(function () { window.location.href = "/CaptureForm/ManageTaggedForms"; }, 3000);
                HidePageLoading();
            }
            else if (!response.Status) {
                ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.FormErrorStatus);
                HidePageLoading();
            }
        },
        error: ShowAjaxError
    });
};

$("#htmlIframetab").click(function () {
    if ($.urlParam("FormId") <= 0) {
        window.history.pushState('', '', window.location.href.split('?')[0] + "");
        formType = 0;
        $(".clsWrap").removeClass("showflex");
        $("#appendFields").html("");
        allBindingFormFields.length = 0;
        allFormFields.length = 0;
        $(".custHtmlwrp").removeClass("active");
        $(".simpleForm").css("background-image", "none");
    }

    $(".custompopupwrp").addClass("right-0");
    $('#formHead,#formDescrip,#upLodImg,#textBox,#inputEmail,#inputPhone,#customTextBox,#otpTextBox,#selectDropdown,#inputTextarea,#radioButton,#checkBox,#dateFormat,#submitBtn').attr('style', 'display: none !important');
    $('#lblLabelDesignTab,#lblTextBoxDesignTab,#lblBtnDesignTab').attr('style', 'display: none !important');
});

$(".custHtmlwrp").click(function () {
    var gettabitemname = $(this).text();

    if ($.urlParam("FormId") <= 0) {
        if (gettabitemname != undefined && gettabitemname != null && gettabitemname != "" && gettabitemname.length > 0) {
            if (gettabitemname.toLowerCase() == "html")
                formType = 2;
            else if (gettabitemname.toLowerCase() == "iframes")
                formType = 3;
            else if (gettabitemname.toLowerCase() == "banner")
                formType = 4;
            else if (gettabitemname.toLowerCase() == "video")
                formType = 5;

            window.history.pushState('', '', window.location.href.split('?')[0] + "?FormType=" + formType + "");
        }

        $(".custHtmlwrp").removeClass("active");
        $(this).addClass("active");
        $(".customhtmlitemwrp").addClass("hideDiv");
        $("#" + gettabitemname).removeClass('hideDiv');
    }
});

$(".close-popup").click(function () {
    $(".custompopupwrp").removeClass('right-0');
    $("#htmlIframetab").removeClass("active");

    if ($.urlParam("FormId") <= 0) {
        $(".custompopupwrp").removeClass("right-500 right-0");
        window.history.pushState('', '', window.location.href.split('?')[0] + "?FormType=1");

        $(".clsWrap").removeClass("showflex");
        $("#frmFields").html("<div id='dvfrmdesign' class='frmlayoutwrap'><div id='appendFields' class='frmfeildwrap'></div></div>");

        $('#formHead,#formDescrip,#upLodImg,#textBox,#inputEmail,#inputPhone,#customTextBox,#otpTextBox,#selectDropdown,#inputTextarea,#radioButton,#checkBox,#dateFormat,#submitBtn').removeAttr('style');
        $('#lblLabelDesignTab,#lblTextBoxDesignTab,#lblBtnDesignTab').removeAttr('style');
    }
});

$("#ui_txtContent").change(function () {
    var content = $("#ui_txtContent").val().replace(/'/g, "‘");
    content = $.trim(content);
    FormUtil.htmlAppend(content);
});

$("#ui_txtiframeContent").change(function () {
    var content = $("#ui_txtiframeContent").val().replace(/'/g, "‘");
    content = $.trim(content);
    FormUtil.IframeAppend(content);
});

$("#ui_txtvideoContent").change(function () {
    var content = $("#ui_txtvideoContent").val().replace(/'/g, "‘");
    content = $.trim(content);
    FormUtil.videoAppend(content, $('#bodyHeight').val());
});

$(".custeditwrp").click(function () {
    $(".custompopupwrp").removeClass("right-500").addClass("right-0");
    $(".formStyleWrap, #saveform").removeClass("z-index100");
});

$(".custdelwrp").click(function () {
    if ($.urlParam("FormId") <= 0) {
        $(".custompopupwrp").removeClass("right-500 right-0");
        window.history.pushState('', '', window.location.href.split('?')[0] + "?FormType=1");

        $(".clsWrap").removeClass("showflex");
        $("#frmFields").html("<div id='dvfrmdesign' class='frmlayoutwrap'><div id='appendFields' class='frmfeildwrap'></div></div>");

        $('#formHead,#formDescrip,#upLodImg,#textBox,#inputEmail,#inputPhone,#customTextBox,#otpTextBox,#selectDropdown,#inputTextarea,#radioButton,#checkBox,#dateFormat,#submitBtn').removeAttr('style');
        $('#lblLabelDesignTab,#lblTextBoxDesignTab,#lblBtnDesignTab').removeAttr('style');
    }
});

$(".bgnametextwrp .ion-android-close").click(function () {
    $(".mainbgfilename").html("");
    $("#spn_mainbg").val("");
    $(".bgnametextwrp").addClass("hideDiv");
    $(".simpleForm").css("background-image", "none");
});

$(document).on('change', '#mainbgimg', function () {
    ShowPageLoading();
    var data = new FormData();
    var files = $("#mainbgimg").get(0).files;

    if (files.length > 0) {

        var checkFilesFor = ["jpg", "gif", "png", "bmp", "JPG", "GIF", "PNG", "BMP"];

        var fileExtension = GetFileExtension(files[0].name);

        if (checkFilesFor.indexOf(fileExtension[0]) < 0) {
            ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.CustomBannerInvalidFile);
            $("#mainbgimg").replaceWith($("#mainbgimg").clone());
            $("#mainbgimg").val("");
            HidePageLoading();
            return false;
        }

        data.append("UploadedImage", files[0]);

        var frmbodyupldimg = files[0].name;

        $.ajax({
            url: "/CaptureForm/Create/UploadFile",
            type: 'POST',
            data: data,
            contentType: false,
            processData: false,
            success: function (response) {
                if (response.filePath != "") {
                    $(".bgnametextwrp").removeClass("hideDiv");
                    $(".mainbgfilename").html(frmbodyupldimg);
                    $("#spn_mainbg").val(response.filePath);
                    $(".frmdummyconts").remove();
                    $(".simpleForm").css("background-image", "url(" + response.filePath + ")");
                }
            },
            error: ShowAjaxError
        });
    }
    setTimeout(function () { HidePageLoading(); }, 1000);
});

$('.dropdownselcom').select2({
    minimumResultsForSearch: '',
    dropdownAutoWidth: false
});

//Web Hooks 

$("#ui_chkWebHooks").click(function () {
    if (this.checked) {
        $("#ui_trWebHooks").removeClass("hideDiv");
        if (Webhookloopdetals.length == 0) {
            SetNoRecordContent('ui_tblReportData', 6, 'ui_tbodyReportData');
            HidePageLoading();
        }
    }
    if (!this.checked) {
        $("#ui_trWebHooks").addClass("hideDiv");
        refreshwebhookfields();
        Webhookloopdetals.length = 0;
    }
});


var trelementcount = 0;
$(".adddatafild").click(function () {
    if (trelementcount != 0) {
        var trList = $('[id^=trsearch]').last();
        trelementcount = trList[0].id.slice(-1);
        trelementcount = parseInt(trelementcount) + 1;

        if (!FormUtil.ValidateWebHookDataFieldsandvalues(trelementcount - 1)) {
            return;
        }
    }
    var Plumb5FieldDropDown = "<option value='0'>Select</option>";

    for (var i = 0; i < ContactPropertyList.length; i++) {
        Plumb5FieldDropDown = Plumb5FieldDropDown + '<option value="' + ContactPropertyList[i].P5ColumnName + '">' + ContactPropertyList[i].FrontEndName + '</option>';
    }
    if (CustomFields != null && CustomFields.length > 0) {
        for (var c = 0; c < CustomFields.length; c++) {
            Plumb5FieldDropDown = Plumb5FieldDropDown += `<option datatype="varchar" value="CustomField${c + 1}" >${CustomFields[c].FieldName}</option>`;

        }
    }

    Plumb5FieldDropDown = Plumb5FieldDropDown += `<option datatype="StaticField" value="Averagetimespent" >Average Time Spent</option> 
                                                <option datatype="varchar" value="PageView" >Page View</option>
                                                <option datatype="varchar" value="TotalMailClick" >Total Mail Click</option>
                                                <option datatype="varchar" value="TotalMailSent" >Total Mail Sent</option>
                                                <option datatype="varchar" value="TotalSession" >Total Session</option>
                                                <option datatype="varchar" value="TotalMailOpened" >Total Mail Opened</option>
                                                <option datatype="varchar" value="TotalSMSIsDelivered" >Total Sms Delivered</option>
                                                <option datatype="varchar" value="TotalSMSIsClicked" >Total Sms Clicked</option>
                                                <option datatype="varchar" value="TotalSMSSent" >Total Sms Sent</option>`;
    let getdatafildhmtl = `<div id="trsearch${trelementcount}" datatype="Plumb5Field" class="datawrkflwinpt mb-3">
                                <div class="datainptitemwrp w-45 mr-2"><input type="text" name="" class="form-control" id="txtFieldAnswer_${trelementcount}"></div>
                                <div class="datainptitemwrp w-45">
                                   <select name="" class="form-control addCampName" id="drpFields_${trelementcount}" data-placeholder="Add Fields">
                                        ${Plumb5FieldDropDown}
                                    </select>
                                </div>
                                <i class="icon ion-ios-close-outline clsedatawrkflw"></i></div>`;

    $(".adddatafildwrp").append(getdatafildhmtl);
    clsedatawrkflwfild();
    LoadSearchBox(trelementcount);

    if (trelementcount == 0) {
        trelementcount = trelementcount + 1;
    }
});
function LoadSearchBox(serial) {
    $(`#drpFields_${serial}`).select2({
        minimumResultsForSearch: '',
        dropdownAutoWidth: false
    });
}

$(".adddatacustfild").click(function () {
    if (trelementcount != 0) {
        var trList = $('[id^=trsearch]').last();
        trelementcount = trList[0].id.slice(-1);
        trelementcount = parseInt(trelementcount) + 1;

        if (!FormUtil.ValidateWebHookDataFieldsandvalues(trelementcount - 1)) {
            return;
        }
    }

    let getdatafildhmtl = `<div id="trsearch${trelementcount}" datatype="StaticField" class="datawrkflwinpt mb-3">
                                <div class="datainptitemwrp w-45 mr-2">
                                    <input type="text" name="" class="form-control" id="txtFieldKey_${trelementcount}">
                                </div>
                                <div class="datainptitemwrp w-45">
                                    <input type="text" name="" class="form-control" id="txtFieldAnswer_${trelementcount}">
                                </div>
                                <i class="icon ion-ios-close-outline clsedatawrkflw"></i>
                            </div>`;

    $(".adddatafildwrp").append(getdatafildhmtl);
    clsedatawrkflwfild();

    if (trelementcount == 0) {
        trelementcount = trelementcount + 1;
    }
});

var trheaderelementcount = 0;
$(".addheaderfild").click(function () {

    if (trheaderelementcount != 0) {
        var trList = $('[id^=trheader]').last();
        trheaderelementcount = trList[0].id.slice(-1);
        trheaderelementcount = parseInt(trheaderelementcount) + 1;

        if (!FormUtil.ValidateWebHookHeaderFieldsAndValues(trheaderelementcount - 1)) {
            return;
        }
    }

    let getheaderfilditem = `<div id="trheader${trheaderelementcount}" class="datawrkflwinpt mb-3"><div class="datainptitemwrp w-45 mr-2">
    <input type="text" name="" class="form-control" id="txtheaderKey_${trheaderelementcount}"></div><div class="datainptitemwrp w-45">
    <input type="text" name="" class="form-control" id="txtheaderValue_${trheaderelementcount}"></div> <i class="icon ion-ios-close-outline clsedatawrkflw"></i></div>`;
    $(".addheaderfildwrp").append(getheaderfilditem);
    clsedatawrkflwfild();

    if (trheaderelementcount == 0) {
        trheaderelementcount = trheaderelementcount + 1;
    }
});


function clsedatawrkflwfild() {
    $(".clsedatawrkflw").click(function () {
        $(this).parent().remove();

        if ($(".adddatafildwrp").html().length <= 0) {
            trelementcount = 0;
        }

        if ($(".addheaderfildwrp").html().length <= 0) {
            trheaderelementcount = 0;
        }
    });
};

//webhook content change
$("#ui_ddl_ContentType").change(function () {
    let checkcontypeval = $("#ui_ddl_ContentType option:selected").text().toLowerCase();
    if (checkcontypeval == "raw body") {
        $("#rawbodytxtinpt").removeClass("hideDiv");
        $("#formtxtinput").addClass("hideDiv");
    } else if (checkcontypeval == "form") {
        $("#formtxtinput").removeClass("hideDiv");
        $("#rawbodytxtinpt").addClass("hideDiv");
    } else {
        $("#rawbodytxtinpt").addClass("hideDiv");
        $("#formtxtinput").addClass("hideDiv");
    }
});

// FORM IMAGE LAYOUT ALIGNMENT start here

$(".frmlyoubgitem").click(function () {
    $(".frmlyoubgitem").removeClass("active");

    let checkfrmlyouttype = $(this).attr("id");
    if (checkfrmlyouttype == "topimglayout" && $(".frmlayoutwrap").children().hasClass("bgWrap")) {
        $(".frmlayoutwrap").removeClass("formlayoutRow formlayoutRowrevrse formlayoutColrevrse");
        $(this).addClass("active");
        formDetails.ImageAppearanceAlignment = "top";
    }
    else if (checkfrmlyouttype == "leftimglayout" && $(".frmlayoutwrap").children().hasClass("bgWrap")) {
        $(".frmlayoutwrap").removeClass("formlayoutRowrevrse formlayoutColrevrse").addClass("formlayoutRow");
        $(this).addClass("active");
        formDetails.ImageAppearanceAlignment = "left";
    }
    else if (checkfrmlyouttype == "rightimglayout" && $(".frmlayoutwrap").children().hasClass("bgWrap")) {
        $(".frmlayoutwrap").removeClass("formlayoutRow formlayoutColrevrse").addClass("formlayoutRowrevrse");
        $(this).addClass("active");
        formDetails.ImageAppearanceAlignment = "right";
    }
    else if (checkfrmlyouttype == "bottmimglayout" && $(".frmlayoutwrap").children().hasClass("bgWrap")) {
        $(".frmlayoutwrap").removeClass("formlayoutRow formlayoutRowrevrse").addClass("formlayoutColrevrse");
        $(this).addClass("active");
        formDetails.ImageAppearanceAlignment = "bottom";
    }
    else {
        formDetails.ImageAppearanceAlignment = "";
        ShowErrorMessage(GlobalErrorList.CreateEmbeddedForm.ImageAlignmentError);
        //$(".errWrap").show();
        //$("#errorText").html("please add image first");
        //$("#topimglayout").addClass("active");
    }
});

$("#frmlayoutalignbx").click(function () {
    if ($("#frmlayoutalignbx").is(":checked")) {
        $(".frmlayoutalignsetwrp").removeClass("hideDiv");
    }
    else {
        $(".frmlayoutalignsetwrp").addClass("hideDiv");
    }
});

// FORM IMAGE LAYOUT ALIGNMENT End here

// *****************URL PARAMETERS RESPONSE ACTIONS START ******************8
$(".frmrepmobnotiweb").click(function () {
    if ($(this).is(":checked")) {
        $(this).parent().parent().next().removeClass("hideDiv");
        $(".frmrepreswebhook").prop("checked", true);
        if ($(".frmrepreswebhook").is(":checked")) {
            $(".frmrepreswebhook").parent().next().removeClass("hideDiv");
        }
    } else {
        $(this).parent().parent().next().addClass("hideDiv");
        $(".frmrepreswebhook").prop("checked", false);
        $(".frmrepreswebhook").parent().next().addClass("hideDiv");
    }
    //$(this).parent().parent().next().toggleClass("hideDiv");
});

$(".addwebhooksreps").click(function () {
    if (trcount != 0) {
        var trList = $('[id^=trUrlParamresponses]').last();
        trcount = trList[0].id.slice(-1);
        trcount = parseInt(trcount) + 1;

        if (!FormUtil.ValidateUrlParametersResponseDataFieldsandvalues(trcount - 1)) {
            return;
        }
    }
    var Plumb5UrlParamFieldDropDown = "<option value='0'>Select</option>";

    for (var i = 0; i < ContactPropertyList.length; i++) {
        Plumb5UrlParamFieldDropDown = Plumb5UrlParamFieldDropDown + '<option value="' + ContactPropertyList[i].P5ColumnName + '">' + ContactPropertyList[i].FrontEndName + '</option>';
    }

    if (CustomFields != null && CustomFields.length > 0) {
        for (var c = 0; c < CustomFields.length; c++) {
            Plumb5UrlParamFieldDropDown = Plumb5UrlParamFieldDropDown += `<option datatype="varchar" value="CustomField${c + 1}" >${CustomFields[c].FieldName}</option>`;

        }
    }

    let getUrldatafildhmtl = `<div id="trUrlParamresponses${trcount}" datatype="Plumb5Field" class="datawrkflwinpt mb-3">
                                
                                    <div class="datainptitemwrp w-45 mr-2">
                                        <select name="" class="form-control addCampName" id="drpUrlFields_${trcount}" data-placeholder="Add Fields">
                                            ${Plumb5UrlParamFieldDropDown}
                                        </select>
                                    </div>
                                    <div class="datainptitemwrp w-45">
                                        <input type="text" name="" class="form-control" id="txtUrlFieldAnswer_${trcount}"></div>
                                   <i class="icon ion-ios-close-outline clsedatawrkflw"></i>
                                </div>`;

    $(".addurlparamfield").append(getUrldatafildhmtl);
    clsedatawrkflwfild();
    LoadUrlFieldSearchBox(trcount);

    if (trcount == 0) {
        trcount = trcount + 1;
    }
});

function LoadUrlFieldSearchBox(serial) {
    $(`#drpUrlFields_${serial}`).select2({
        minimumResultsForSearch: '',
        dropdownAutoWidth: false
    });
}
// *****************URL PARAMETERS RESPONSE ACTIONS END ******************8

$("#ui_chkIsOverrideAssignment").click(function () {
    $("#ui_chkIsOverrideAssignmentBasedOnRule").prop("checked", false);

    if ($("#frmrepassignee").hasClass("hideDiv")) {
        $("#frmrepassignee").toggleClass("hideDiv");
    }
});

$("#ui_chkIsOverrideAssignmentBasedOnRule").click(function () {

    if ($("#ui_chkIsOverrideAssignmentBasedOnRule").is(":checked")) {
        $("#frmrepassignee").addClass("hideDiv");
        $("#ui_chkIsOverrideAssignment").prop("checked", false);
    }
    else {
        $("#frmrepassignee").removeClass("hideDiv");
        $("#ui_chkIsOverrideAssignment").prop("checked", false);
    }
});





$("#addwebhookbtn").click(function () {
    $(".dropdown-item.adddatafild").click(0);
    $("#webhookeditoption").removeClass("hideDiv")
    //$("#webhookeditoption input").val(" ");
    //$("#methodwebhook, #ui_ddl_ContentType").val(" ");
    $("#btnsavewebhook").val("Save");
    $("#btnsavewebhook").html("Save");
    checkwebhookupdatestatus = 1;
    refreshwebhookfields();
});

$("#cancelwebhook, #savewebhook").click(function () {
    checkwebhookupdatestatus = 0;
    $("#webhookeditoption").addClass("hideDiv");
    $("#webhookeditoption input").val(" ");
    $("#methodwebhook, #ui_ddl_ContentType").val(" ");
    $(".adddatafildwrp").empty();
    $(".addheaderfildwrp").empty();
    trelementcount = 0;
    trheaderelementcount = 0;
});

$(".editwebhookwrp").click(function () {
    $("#webhookeditoption").removeClass("hideDiv")

    $("#methodwebhook").val("Post");
    //$("#ui_ddl_ContentType").val("from");

});
function WebhookFieldsToedit() {

    $("#ui_tbodyReportData").empty();
    if (Webhookloopdetals.length > 0) {
        for (var i = 0; i < Webhookloopdetals.length; i++) {
            let reportTablerows = `<tr>
                                <td>
                                <div class="landurlcont">
                                <div class="landurlwrp">
                                <div class="landurl">
                                ${Webhookloopdetals[i].RequestURL}
                                </div>
                                </div>
                                </div>
                                </td>

                                <td class="text-center">${Webhookloopdetals[i].MethodType}</td>
                                <td class="text-center">${Webhookloopdetals[i].ContentType}</td> 

                                <td><div class="editwebhookwrp"><i class="icon ion-edit editwebhook"   onclick='EditWebhoodetails(${i})'></i></div></td>

                                <td><div class="delwebhookwrp" data-toggle="modal" data-target="#deleterow"><i class="icon ion-trash-b delwebhook" onclick='DeleteWebhookdetails(${i},${Webhookloopdetals[i].WebHookId});'></i></div></td>
                                <tr>`
                ;
            $("#ui_tbodyReportData").append(reportTablerows);

        };
    }
    else {
        SetNoRecordContent('ui_tblReportData', 6, 'ui_tbodyReportData');
        HidePageLoading();
    }
}

$("#btnsavewebhook").click(function () {
    if (!FormUtil.ValidationOfWebHookSetting()) {
        HidePageLoading();
        return false;
    }
    checkwebhookupdatestatus = 0;
    FormUtil.WebHookValues();
    WebhookFieldsToedit();
    refreshwebhookfields();

    $("#webhookeditoption").addClass("hideDiv");
    $("#webhookeditoption input").val(" ");
    $("#methodwebhook, #ui_ddl_ContentType").val(" ");

    $(".adddatafildwrp").empty();
    $(".addheaderfildwrp").empty();
    trelementcount = 0;
    trheaderelementcount = 0;

});
function editwebhookdetails() {
    refreshwebhookfields();

}
function refreshwebhookfields() {
    document.getElementById("ui_txtRequestUrl").value = null;
    $("#ui_ddl_MethodType").select().val('select').trigger('change');
    $("#ui_ddl_ContentType").select().val('select').trigger('change');
    $(".adddatafildwrp input").val(" ");
    $(".addheaderfildwrp input").val(" ");
    document.getElementById("ui_txt_BasicAuthenticationKey").value = null;
    document.getElementById("ui_txt_BasicAuthenticationValue").value = null;
    $(".datawrkflwinpt").hide();
    $(".adddatafildwrp").empty();
    $(".addheaderfildwrp").empty();
    trelementcount = 0;
    trheaderelementcount = 0;

}

var webhookrowid;
function EditWebhoodetails(id) {
    checkwebhookupdatestatus = 2;
    $("#webhookeditoption").removeClass("hideDiv");
    webhookrowid = id
    $("#btnsavewebhook").html("Update");
    $("#btnsavewebhook").val("update");
    $(".adddatafildwrp").empty();
    $(".addheaderfildwrp").empty();

    if (Webhookloopdetals != null) {
        $("#ui_chkWebHooks").prop("checked", true)
        $("#ui_trWebHooks").removeClass("hideDiv");
        if (Webhookloopdetals[id].RequestURL != null && Webhookloopdetals[id].RequestURL != "")
            $("#ui_txtRequestUrl").val(Webhookloopdetals[id].RequestURL);

        if (Webhookloopdetals[id].MethodType != null && Webhookloopdetals[id].MethodType != "")
            $("#ui_ddl_MethodType").val(Webhookloopdetals[id].MethodType);

        if (Webhookloopdetals[id].ContentType != null && Webhookloopdetals[id].ContentType != "")
            $("#ui_ddl_ContentType").val(Webhookloopdetals[id].ContentType).change();

        let ContentType = $("#ui_ddl_ContentType option:selected").text().toLowerCase();
        if (ContentType == 'form') {
            if (Webhookloopdetals[id].FieldMappingDetails != null && Webhookloopdetals[id].FieldMappingDetails != "") {
                var FieldMappingConditionDetail = Webhookloopdetals[id].FieldMappingDetails;

                $.each(JSON.parse(FieldMappingConditionDetail), function (i, obj) {

                    if (i == 0) {
                        trelementcount = 0;
                    }
                    if (obj.IsPlumb5OrCustomField == "Plumb5Field") {
                        $(".dropdown-item.adddatafild").click();
                        $("#txtFieldAnswer_" + i).val(obj.Key);
                        $("#drpFields_" + i).select2().val(obj.Value).change();
                    }
                    else if (obj.IsPlumb5OrCustomField == "StaticField") {
                        $(".adddatacustfild").click();
                        $("#txtFieldKey_" + i).val(obj.Key);
                        $("#txtFieldAnswer_" + i).val(obj.Value);
                    }
                });
            }
        }
        else if (ContentType == 'raw body') {
            $("#ui_txtRequestBody").val(Webhookloopdetals[id].RawBody);
        }

        if (Webhookloopdetals[id].Headers != null && Webhookloopdetals[id].Headers != "") {
            var HeaderConditionDetail = Webhookloopdetals[id].Headers;
            $.each(JSON.parse(HeaderConditionDetail), function (i, obj) {

                if (i == 0) {
                    trheaderelementcount = 0;
                }

                $(".addheaderfild").click();
                $("#txtheaderKey_" + i).val(obj.Key);
                $("#txtheaderValue_" + i).val(obj.Value);
            });
        }

        if (Webhookloopdetals[id].BasicAuthentication != null && Webhookloopdetals[id].BasicAuthentication != "") {
            var basicauthdetails = JSON.parse(Webhookloopdetals[id].BasicAuthentication);
            $("#ui_txt_BasicAuthenticationKey").val(basicauthdetails.AuthenticationKey);
            $("#ui_txt_BasicAuthenticationValue").val(basicauthdetails.AuthenticationValue);
        }
    }
}
var deletewebhookid = [];
function DeleteWebhookdetails(rowid, webhookidfordelete) {

    $("#deleteRowConfirm").attr("Delete", webhookidfordelete).attr("Rowid", rowid);

}

$('#deleteRowConfirm').click(function () {
    var deleteid = parseInt($("#deleteRowConfirm").attr("Delete"));
    let rowid = parseInt($("#deleteRowConfirm").attr("Rowid"));
    if (deleteid > 0) {
        deletewebhookid.push(deleteid)
    }
    Webhookloopdetals.splice(rowid, 1);
    WebhookFieldsToedit();
    $("#webhookeditoption").addClass("hideDiv");
    $("#webhookeditoption input").val(" ");
    $("#methodwebhook, #ui_ddl_ContentType").val(" ");
    refreshwebhookfields();
});


$('#eventitemstitle').on('change', function () {

    $("#selTitleTxt").val($("#selTitleTxt").val() + " {{*[" + eventname + "]~[" + this.value + "]~[TOP1.DESC]~[fallbackdata]*}}");

});


$('#eventitemsmessage').on('change', function () {

    if ((160 - $("#selDescTxt").val().length) > 15 && this.value != "Select") {
        let cursorPos = $('#selDescTxt').prop('selectionStart');
        let MessageContent = $("#selDescTxt").val();
        let textBefore = MessageContent.substring(0, cursorPos);
        let textAfter = MessageContent.substring(cursorPos, MessageContent.length);

        let customField = " {{*[" + eventname + "]~[" + this.value + "]~[TOP1.DESC]~[fallbackdata]*}} ";
        let newMessageContent = textBefore + customField + textAfter;
        $('#selDescTxt').val(newMessageContent);

    } else { ShowErrorMessage(GlobalErrorList.WebpushTemplate.TitleLength); }

});
$('#draganddropcustomtitle').on('change', function () {
    if ((160 - $("#selTitleTxt").val().length) > 15 && this.value != "Select") {
        let cursorPos = $('#selTitleTxt').prop('selectionStart');
        let MessageContent = $("#selTitleTxt").val();
        let textBefore = MessageContent.substring(0, cursorPos);
        let textAfter = MessageContent.substring(cursorPos, MessageContent.length);

        let customField = " [{*" + this.value + "*}] ";
        let newMessageContent = textBefore + customField + textAfter;
        $('#selTitleTxt').val(newMessageContent);
    }
    else {
        ShowErrorMessage(GlobalErrorList.WebpushTemplate.TitleLength);
    }
});

$('#draganddropcustommessage').on('change', function () {
    if ((160 - $("#selDescTxt").val().length) > 15 && this.value != "Select") {
        let cursorPos = $('#selDescTxt').prop('selectionStart');
        let MessageContent = $("#selDescTxt").val();
        let textBefore = MessageContent.substring(0, cursorPos);
        let textAfter = MessageContent.substring(cursorPos, MessageContent.length);

        let customField = " [{*" + this.value + "*}] ";
        let newMessageContent = textBefore + customField + textAfter;
        $('#selDescTxt').val(newMessageContent);


    } else { ShowErrorMessage(GlobalErrorList.WebpushTemplate.TitleLength); }

});

$('#eventitemsmessage2').on('change', function () {
    if (this.value != "Select") {
        let cursorPos = $('#ui_txtContent').prop('selectionStart');
        let MessageContent = $("#ui_txtContent").val();
        let textBefore = MessageContent.substring(0, cursorPos);
        let textAfter = MessageContent.substring(cursorPos, MessageContent.length);

        let customField = " {{*[" + eventname + "]~[" + this.value + "]~[TOP1.DESC]~[fallbackdata]*}} ";
        let newMessageContent = textBefore + customField + textAfter;
        $('#ui_txtContent').val(newMessageContent);
    }

});
$('#draganddropcutomre').on('change', function () {
    if (this.value != "Select") {
        let cursorPos = $('#ui_txtContent').prop('selectionStart');
        let MessageContent = $("#ui_txtContent").val();
        let textBefore = MessageContent.substring(0, cursorPos);
        let textAfter = MessageContent.substring(cursorPos, MessageContent.length);

        let customField = " [{*" + this.value + "*}] ";
        let newMessageContent = textBefore + customField + textAfter;
        $('#ui_txtContent').val(newMessageContent);
    }

});


$('#ui_chkSalesPerson').click(function () {
    if ($('#ui_chkSalesPerson').prop('checked') == true && $('#ui_chkoverridesource').prop('checked') == false) {
        $('#ui_chkoverridesource').click();
    }
    else if ($('#ui_chkSalesPerson').prop('checked') == false && $('#ui_chkoverridesource').prop('checked') == true) {
        $('#ui_chkoverridesource').click();
    }
});

$('#ui_chkoverridesource').click(function () {
    
    if ($('#ui_chkSalesPerson').prop('checked') == true && $('#ui_chkoverridesource').prop('checked') == false) {
        $('#ui_chkSalesPerson').click();
    }
    else if ($('#ui_chkSalesPerson').prop('checked') == false && $('#ui_chkoverridesource').prop('checked') == true) {
        $('#ui_chkSalesPerson').click();
    }
    GetLmssourcetype();
});

function GetLmssourcetype() {
    $.ajax({
        url: "/Prospect/LeadSource/GetLmsSorceType",
        type: 'Post',
        data: JSON.stringify({ 'accountId': Plumb5AccountId }),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (response) {
            var data = response[0];
            if (data !== undefined) {
                if (data.Type == 0)
                    $('#lmsStaySource').attr('checked', true);
                else if (data.Type == 1)
                    $('#lmsOverrideSource').attr('checked', true);
                else if (data.Type == 2)
                    $('#lmsNewSource').attr('checked', true);
            }
        },
        error: function (error) {
            HidePageLoading();
        }
    });
}

